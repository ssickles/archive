//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImagingClient.localhost
{
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.thatindigogirl.com/samples/2005/12/ImageInfo")]
    [System.SerializableAttribute()]
    public partial class ImageInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IdField;
        
        private string TitleField;
        
        private string DescriptionField;
        
        private System.DateTime DateStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        private string CategoryField;
        
        private byte[] DataField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                if ((((object)(this.TitleField)) != ((object)(value))))
                {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                if ((((object)(this.DescriptionField)) != ((object)(value))))
                {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.DateTime DateStart
        {
            get
            {
                return this.DateStartField;
            }
            set
            {
                if ((this.DateStartField.Equals(value) != true))
                {
                    this.DateStartField = value;
                    this.RaisePropertyChanged("DateStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<System.DateTime> DateEnd
        {
            get
            {
                return this.DateEndField;
            }
            set
            {
                if ((this.DateEndField.Equals(value) != true))
                {
                    this.DateEndField = value;
                    this.RaisePropertyChanged("DateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Url
        {
            get
            {
                return this.UrlField;
            }
            set
            {
                if ((((object)(this.UrlField)) != ((object)(value))))
                {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public string Category
        {
            get
            {
                return this.CategoryField;
            }
            set
            {
                if ((((object)(this.CategoryField)) != ((object)(value))))
                {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public byte[] Data
        {
            get
            {
                return this.DataField;
            }
            set
            {
                if ((((object)(this.DataField)) != ((object)(value))))
                {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.thatindigogirl.com/samples/2005/12/ImagingServices", ConfigurationName="ImagingClient.localhost.ImagingServicesContractSoap")]
    public interface ImagingServicesContractSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.thatindigogirl.com/samples/2005/12/ImagingServices/ImagingServicesCont" +
            "ractSoap/UploadImage", ReplyAction="http://www.thatindigogirl.com/samples/2005/12/ImagingServices/ImagingServicesCont" +
            "ractSoap/UploadImageResponse")]
        void UploadImage(ImagingClient.localhost.ImageInfo imageInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ImagingServicesContractSoapChannel : ImagingClient.localhost.ImagingServicesContractSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ImagingServicesContractSoapClient : System.ServiceModel.ClientBase<ImagingClient.localhost.ImagingServicesContractSoap>, ImagingClient.localhost.ImagingServicesContractSoap
    {
        
        public ImagingServicesContractSoapClient()
        {
        }
        
        public ImagingServicesContractSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ImagingServicesContractSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ImagingServicesContractSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ImagingServicesContractSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public void UploadImage(ImagingClient.localhost.ImageInfo imageInfo)
        {
            base.Channel.UploadImage(imageInfo);
        }
    }
}
