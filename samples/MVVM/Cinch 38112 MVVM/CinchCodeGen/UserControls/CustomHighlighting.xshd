<?xml version="1.0"?>
<SyntaxDefinition name="Custom Highlighting" xmlns="http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008">
	<Color name="Comment" foreground="Green" />
	<Color name="String" foreground="Cyan" />
	
	<!-- This is the main ruleset. -->
	<RuleSet>
		<Span color="Comment" begin="//" />
		<Span color="Comment" multiline="true" begin="/\*" end="\*/" />
		
		<Span color="String">
			<Begin>"</Begin>
			<End>"</End>
			<RuleSet>
				<!-- nested span for escape sequences -->
				<Span begin="\\" end="." />
			</RuleSet>
		</Span>

    <Keywords foreground="White">
      <Word>?</Word>
      <Word>,</Word>
      <Word>.</Word>
      <Word>;</Word>
      <Word>(</Word>
      <Word>)</Word>
      <Word>[</Word>
      <Word>]</Word>
      <Word>{</Word>
      <Word>}</Word>
      <Word>+</Word>
      <Word>-</Word>
      <Word>/</Word>
      <Word>%</Word>
      <Word>*</Word>
      <Word>&lt;</Word>
      <Word>&gt;</Word>
      <Word>^</Word>
      <Word>=</Word>
      <Word>~</Word>
      <Word>!</Word>
      <Word>|</Word>
      <Word>&amp;</Word>
    </Keywords>

    <Keywords fontWeight="bold" foreground="CornFlowerBlue">
      <Word>this</Word>
      <Word>base</Word>
    </Keywords>

    <Keywords fontWeight="bold" foreground="CornFlowerBlue">
      <Word>as</Word>
      <Word>is</Word>
      <Word>new</Word>
      <Word>sizeof</Word>
      <Word>typeof</Word>
      <Word>true</Word>
      <Word>false</Word>
      <Word>stackalloc</Word>
    </Keywords>


    <Keywords fontWeight="bold" foreground="CornFlowerBlue">
      <Word>else</Word>
      <Word>if</Word>
      <Word>switch</Word>
      <Word>case</Word>
      <Word>default</Word>
    </Keywords>

    <Keywords fontWeight="bold" foreground="CornFlowerBlue">
      <Word>do</Word>
      <Word>for</Word>
      <Word>foreach</Word>
      <Word>in</Word>
      <Word>while</Word>
    </Keywords>

    <Keywords foreground="CornFlowerBlue">
      <Word>break</Word>
      <Word>continue</Word>
      <Word>goto</Word>
      <Word>return</Word>
    </Keywords>

    <Keywords foreground="CornFlowerBlue">
      <Word>yield</Word>
      <Word>partial</Word>
      <Word>global</Word>
      <Word>where</Word>
      <Word>select</Word>
      <Word>group</Word>
      <Word>by</Word>
      <Word>into</Word>
      <Word>from</Word>
      <Word>ascending</Word>
      <Word>descending</Word>
      <Word>orderby</Word>
      <Word>let</Word>
      <Word>join</Word>
      <Word>on</Word>
      <Word>equals</Word>
      <Word>var</Word>
      <Word>dynamic</Word>
    </Keywords>

    <Keywords fontWeight="bold" foreground="CornFlowerBlue">
      <Word>try</Word>
      <Word>throw</Word>
      <Word>catch</Word>
      <Word>finally</Word>
    </Keywords>

    <Keywords fontWeight="bold" foreground="CornFlowerBlue">
      <Word>checked</Word>
      <Word>unchecked</Word>
    </Keywords>

    <Keywords foreground="CornFlowerBlue">
      <Word>fixed</Word>
      <Word>unsafe</Word>
    </Keywords>

    <Keywords fontWeight="bold" foreground="CornFlowerBlue">
      <Word>bool</Word>
      <Word>byte</Word>
      <Word>char</Word>
      <Word>decimal</Word>
      <Word>double</Word>
      <Word>enum</Word>
      <Word>float</Word>
      <Word>int</Word>
      <Word>long</Word>
      <Word>sbyte</Word>
      <Word>short</Word>
      <Word>struct</Word>
      <Word>uint</Word>
      <Word>ushort</Word>
      <Word>ulong</Word>
    </Keywords>

    <Keywords foreground="CornFlowerBlue">
      <Word>class</Word>
      <Word>interface</Word>
      <Word>delegate</Word>
      <Word>object</Word>
      <Word>string</Word>
    </Keywords>

    <Keywords foreground="CornFlowerBlue">
      <Word>void</Word>
    </Keywords>

    <Keywords fontWeight="bold" foreground="CornFlowerBlue">
      <Word>explicit</Word>
      <Word>implicit</Word>
      <Word>operator</Word>
    </Keywords>

    <Keywords fontWeight="bold" foreground="CornFlowerBlue">
      <Word>params</Word>
      <Word>ref</Word>
      <Word>out</Word>
    </Keywords>

    <Keywords foreground="CornFlowerBlue">
      <Word>abstract</Word>
      <Word>const</Word>
      <Word>event</Word>
      <Word>extern</Word>
      <Word>override</Word>
      <Word>readonly</Word>
      <Word>sealed</Word>
      <Word>static</Word>
      <Word>virtual</Word>
      <Word>volatile</Word>
    </Keywords>

    <Keywords fontWeight="bold" foreground="CornFlowerBlue">
      <Word>public</Word>
      <Word>protected</Word>
      <Word>private</Word>
      <Word>internal</Word>
    </Keywords>

    <Keywords fontWeight="bold" foreground="CornFlowerBlue">
      <Word>namespace</Word>
      <Word>using</Word>
    </Keywords>

    <Keywords foreground="CornFlowerBlue">
      <Word>lock</Word>
    </Keywords>

    <Keywords foreground="CornFlowerBlue">
      <Word>get</Word>
      <Word>set</Word>
      <Word>add</Word>
      <Word>remove</Word>
    </Keywords>

    <Keywords fontWeight="bold" foreground="CornFlowerBlue">
      <Word>null</Word>
      <Word>value</Word>
    </Keywords>
		
		<!-- Digits -->
		<Rule foreground="Cyan">
            \b0[xX][0-9a-fA-F]+  # hex number
        |    \b
            (    \d+(\.[0-9]+)?   #number with optional floating point
            |    \.[0-9]+         #or just starting with floating point
            )
            ([eE][+-]?[0-9]+)? # optional exponent
        </Rule>
	</RuleSet>
</SyntaxDefinition>