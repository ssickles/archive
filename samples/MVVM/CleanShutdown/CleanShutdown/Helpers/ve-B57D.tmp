using System;
using System.Windows;
using System.Windows.Media.Animation;
using CleanShutdown.Messaging;
using GalaSoft.MvvmLight.Messaging;

namespace CleanShutdown.Helpers
{
    public class ShutdownAnimationService
    {
        private bool _shutdownAnimationHasRun;

        public ShutdownAnimationService(FrameworkElement element)
        {
            Messenger.Default.Register<CommandMessageAction<bool>>(
                this,
                callback =>
                {
                    if (callback.Command
                        == Commands.ConfirmShutdown)
                    {
                        if (!_shutdownAnimationHasRun)
                        {
                            var sbd =
                                element.Resources[
                                    "ShutdownStoryboard"] as
                                 Storyboard;
                            if (sbd != null)
                            {
                                callback.Execute(true);
                                    // true == abort shutdown

                                sbd.Completed +=
                                    ShutdownStoryboardCompleted;
                                sbd.Begin();
                            }
                        }

                        // If the animation ran already, no need to reply to the message, allow shutdown.
                    }
                });
        }

        private void ShutdownStoryboardCompleted(object sender, EventArgs e)
        {
            _shutdownAnimationHasRun = true;

            // Now that our pre-shutdown task is done, we can request shutdown again.
            ShutdownService.RequestShutdown();
        }
    }
}