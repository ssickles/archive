//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TodoList.WpfClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn://mobilewcf/samples/2009/04", ConfigurationName="ServiceReference1.ITodoListService")]
    public interface ITodoListService {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn://mobilewcf/samples/2009/04/ITodoListService/GetItems", ReplyAction="urn://mobilewcf/samples/2009/04/ITodoListService/GetItemsResponse")]
        System.Collections.ObjectModel.ObservableCollection<Entities.TodoItem> GetItems();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn://mobilewcf/samples/2009/04/ITodoListService/GetItems", ReplyAction="urn://mobilewcf/samples/2009/04/ITodoListService/GetItemsResponse")]
        System.IAsyncResult BeginGetItems(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Entities.TodoItem> EndGetItems(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn://mobilewcf/samples/2009/04/ITodoListService/CreateItem", ReplyAction="urn://mobilewcf/samples/2009/04/ITodoListService/CreateItemResponse")]
        string CreateItem(Entities.TodoItem item);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn://mobilewcf/samples/2009/04/ITodoListService/CreateItem", ReplyAction="urn://mobilewcf/samples/2009/04/ITodoListService/CreateItemResponse")]
        System.IAsyncResult BeginCreateItem(Entities.TodoItem item, System.AsyncCallback callback, object asyncState);
        
        string EndCreateItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn://mobilewcf/samples/2009/04/ITodoListService/UpdateItem", ReplyAction="urn://mobilewcf/samples/2009/04/ITodoListService/UpdateItemResponse")]
        void UpdateItem(Entities.TodoItem item);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn://mobilewcf/samples/2009/04/ITodoListService/UpdateItem", ReplyAction="urn://mobilewcf/samples/2009/04/ITodoListService/UpdateItemResponse")]
        System.IAsyncResult BeginUpdateItem(Entities.TodoItem item, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn://mobilewcf/samples/2009/04/ITodoListService/DeleteItem", ReplyAction="urn://mobilewcf/samples/2009/04/ITodoListService/DeleteItemResponse")]
        void DeleteItem(string id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn://mobilewcf/samples/2009/04/ITodoListService/DeleteItem", ReplyAction="urn://mobilewcf/samples/2009/04/ITodoListService/DeleteItemResponse")]
        System.IAsyncResult BeginDeleteItem(string id, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteItem(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ITodoListServiceChannel : TodoList.WpfClient.ServiceReference1.ITodoListService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Entities.TodoItem> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Entities.TodoItem>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CreateItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class TodoListServiceClient : System.ServiceModel.ClientBase<TodoList.WpfClient.ServiceReference1.ITodoListService>, TodoList.WpfClient.ServiceReference1.ITodoListService {
        
        private BeginOperationDelegate onBeginGetItemsDelegate;
        
        private EndOperationDelegate onEndGetItemsDelegate;
        
        private System.Threading.SendOrPostCallback onGetItemsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateItemDelegate;
        
        private EndOperationDelegate onEndCreateItemDelegate;
        
        private System.Threading.SendOrPostCallback onCreateItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateItemDelegate;
        
        private EndOperationDelegate onEndUpdateItemDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteItemDelegate;
        
        private EndOperationDelegate onEndDeleteItemDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteItemCompletedDelegate;
        
        public TodoListServiceClient() {
        }
        
        public TodoListServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TodoListServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TodoListServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TodoListServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetItemsCompletedEventArgs> GetItemsCompleted;
        
        public event System.EventHandler<CreateItemCompletedEventArgs> CreateItemCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateItemCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteItemCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<Entities.TodoItem> GetItems() {
            return base.Channel.GetItems();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetItems(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetItems(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Entities.TodoItem> EndGetItems(System.IAsyncResult result) {
            return base.Channel.EndGetItems(result);
        }
        
        private System.IAsyncResult OnBeginGetItems(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetItems(callback, asyncState);
        }
        
        private object[] OnEndGetItems(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Entities.TodoItem> retVal = this.EndGetItems(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetItemsCompleted(object state) {
            if ((this.GetItemsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetItemsCompleted(this, new GetItemsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetItemsAsync() {
            this.GetItemsAsync(null);
        }
        
        public void GetItemsAsync(object userState) {
            if ((this.onBeginGetItemsDelegate == null)) {
                this.onBeginGetItemsDelegate = new BeginOperationDelegate(this.OnBeginGetItems);
            }
            if ((this.onEndGetItemsDelegate == null)) {
                this.onEndGetItemsDelegate = new EndOperationDelegate(this.OnEndGetItems);
            }
            if ((this.onGetItemsCompletedDelegate == null)) {
                this.onGetItemsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetItemsCompleted);
            }
            base.InvokeAsync(this.onBeginGetItemsDelegate, null, this.onEndGetItemsDelegate, this.onGetItemsCompletedDelegate, userState);
        }
        
        public string CreateItem(Entities.TodoItem item) {
            return base.Channel.CreateItem(item);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateItem(Entities.TodoItem item, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateItem(item, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCreateItem(System.IAsyncResult result) {
            return base.Channel.EndCreateItem(result);
        }
        
        private System.IAsyncResult OnBeginCreateItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Entities.TodoItem item = ((Entities.TodoItem)(inValues[0]));
            return this.BeginCreateItem(item, callback, asyncState);
        }
        
        private object[] OnEndCreateItem(System.IAsyncResult result) {
            string retVal = this.EndCreateItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateItemCompleted(object state) {
            if ((this.CreateItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateItemCompleted(this, new CreateItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateItemAsync(Entities.TodoItem item) {
            this.CreateItemAsync(item, null);
        }
        
        public void CreateItemAsync(Entities.TodoItem item, object userState) {
            if ((this.onBeginCreateItemDelegate == null)) {
                this.onBeginCreateItemDelegate = new BeginOperationDelegate(this.OnBeginCreateItem);
            }
            if ((this.onEndCreateItemDelegate == null)) {
                this.onEndCreateItemDelegate = new EndOperationDelegate(this.OnEndCreateItem);
            }
            if ((this.onCreateItemCompletedDelegate == null)) {
                this.onCreateItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateItemCompleted);
            }
            base.InvokeAsync(this.onBeginCreateItemDelegate, new object[] {
                        item}, this.onEndCreateItemDelegate, this.onCreateItemCompletedDelegate, userState);
        }
        
        public void UpdateItem(Entities.TodoItem item) {
            base.Channel.UpdateItem(item);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateItem(Entities.TodoItem item, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateItem(item, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateItem(System.IAsyncResult result) {
            base.Channel.EndUpdateItem(result);
        }
        
        private System.IAsyncResult OnBeginUpdateItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Entities.TodoItem item = ((Entities.TodoItem)(inValues[0]));
            return this.BeginUpdateItem(item, callback, asyncState);
        }
        
        private object[] OnEndUpdateItem(System.IAsyncResult result) {
            this.EndUpdateItem(result);
            return null;
        }
        
        private void OnUpdateItemCompleted(object state) {
            if ((this.UpdateItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateItemAsync(Entities.TodoItem item) {
            this.UpdateItemAsync(item, null);
        }
        
        public void UpdateItemAsync(Entities.TodoItem item, object userState) {
            if ((this.onBeginUpdateItemDelegate == null)) {
                this.onBeginUpdateItemDelegate = new BeginOperationDelegate(this.OnBeginUpdateItem);
            }
            if ((this.onEndUpdateItemDelegate == null)) {
                this.onEndUpdateItemDelegate = new EndOperationDelegate(this.OnEndUpdateItem);
            }
            if ((this.onUpdateItemCompletedDelegate == null)) {
                this.onUpdateItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateItemCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateItemDelegate, new object[] {
                        item}, this.onEndUpdateItemDelegate, this.onUpdateItemCompletedDelegate, userState);
        }
        
        public void DeleteItem(string id) {
            base.Channel.DeleteItem(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteItem(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteItem(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteItem(System.IAsyncResult result) {
            base.Channel.EndDeleteItem(result);
        }
        
        private System.IAsyncResult OnBeginDeleteItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return this.BeginDeleteItem(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteItem(System.IAsyncResult result) {
            this.EndDeleteItem(result);
            return null;
        }
        
        private void OnDeleteItemCompleted(object state) {
            if ((this.DeleteItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteItemAsync(string id) {
            this.DeleteItemAsync(id, null);
        }
        
        public void DeleteItemAsync(string id, object userState) {
            if ((this.onBeginDeleteItemDelegate == null)) {
                this.onBeginDeleteItemDelegate = new BeginOperationDelegate(this.OnBeginDeleteItem);
            }
            if ((this.onEndDeleteItemDelegate == null)) {
                this.onEndDeleteItemDelegate = new EndOperationDelegate(this.OnEndDeleteItem);
            }
            if ((this.onDeleteItemCompletedDelegate == null)) {
                this.onDeleteItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteItemCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteItemDelegate, new object[] {
                        id}, this.onEndDeleteItemDelegate, this.onDeleteItemCompletedDelegate, userState);
        }
    }
}
