//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40818.0
// 
namespace Silverlight3DataGrid.IdentityServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Identity", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.DataModels")]
    public partial class Identity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string FirstNameField;
        
        private int IdField;
        
        private string LastNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IdentityServiceReference.IIdentityService")]
    public interface IIdentityService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRemoteRepositoryOf_Identity_Int32/GetById", ReplyAction="http://tempuri.org/IRemoteRepositoryOf_Identity_Int32/GetByIdResponse")]
        System.IAsyncResult BeginGetById(int Id, System.AsyncCallback callback, object asyncState);
        
        Silverlight3DataGrid.IdentityServiceReference.Identity EndGetById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRemoteRepositoryOf_Identity_Int32/Get", ReplyAction="http://tempuri.org/IRemoteRepositoryOf_Identity_Int32/GetResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IdentityStream.Data.NumericQueryExpression))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IdentityStream.Data.StringQueryExpression))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IdentityStream.Data.NullQueryExpression))]
        System.IAsyncResult BeginGet(IdentityStream.Data.QueryObject Query, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Silverlight3DataGrid.IdentityServiceReference.Identity> EndGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRemoteRepositoryOf_Identity_Int32/Insert", ReplyAction="http://tempuri.org/IRemoteRepositoryOf_Identity_Int32/InsertResponse")]
        System.IAsyncResult BeginInsert(Silverlight3DataGrid.IdentityServiceReference.Identity Entity, System.AsyncCallback callback, object asyncState);
        
        void EndInsert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRemoteRepositoryOf_Identity_Int32/Delete", ReplyAction="http://tempuri.org/IRemoteRepositoryOf_Identity_Int32/DeleteResponse")]
        System.IAsyncResult BeginDelete(Silverlight3DataGrid.IdentityServiceReference.Identity Entity, System.AsyncCallback callback, object asyncState);
        
        void EndDelete(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIdentityServiceChannel : Silverlight3DataGrid.IdentityServiceReference.IIdentityService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Silverlight3DataGrid.IdentityServiceReference.Identity Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Silverlight3DataGrid.IdentityServiceReference.Identity)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Silverlight3DataGrid.IdentityServiceReference.Identity> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Silverlight3DataGrid.IdentityServiceReference.Identity>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IdentityServiceClient : System.ServiceModel.ClientBase<Silverlight3DataGrid.IdentityServiceReference.IIdentityService>, Silverlight3DataGrid.IdentityServiceReference.IIdentityService {
        
        private BeginOperationDelegate onBeginGetByIdDelegate;
        
        private EndOperationDelegate onEndGetByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDelegate;
        
        private EndOperationDelegate onEndGetDelegate;
        
        private System.Threading.SendOrPostCallback onGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertDelegate;
        
        private EndOperationDelegate onEndInsertDelegate;
        
        private System.Threading.SendOrPostCallback onInsertCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDelegate;
        
        private EndOperationDelegate onEndDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public IdentityServiceClient() {
        }
        
        public IdentityServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IdentityServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IdentityServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IdentityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetByIdCompletedEventArgs> GetByIdCompleted;
        
        public event System.EventHandler<GetCompletedEventArgs> GetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Silverlight3DataGrid.IdentityServiceReference.IIdentityService.BeginGetById(int Id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetById(Id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Silverlight3DataGrid.IdentityServiceReference.Identity Silverlight3DataGrid.IdentityServiceReference.IIdentityService.EndGetById(System.IAsyncResult result) {
            return base.Channel.EndGetById(result);
        }
        
        private System.IAsyncResult OnBeginGetById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Id = ((int)(inValues[0]));
            return ((Silverlight3DataGrid.IdentityServiceReference.IIdentityService)(this)).BeginGetById(Id, callback, asyncState);
        }
        
        private object[] OnEndGetById(System.IAsyncResult result) {
            Silverlight3DataGrid.IdentityServiceReference.Identity retVal = ((Silverlight3DataGrid.IdentityServiceReference.IIdentityService)(this)).EndGetById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetByIdCompleted(object state) {
            if ((this.GetByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetByIdCompleted(this, new GetByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetByIdAsync(int Id) {
            this.GetByIdAsync(Id, null);
        }
        
        public void GetByIdAsync(int Id, object userState) {
            if ((this.onBeginGetByIdDelegate == null)) {
                this.onBeginGetByIdDelegate = new BeginOperationDelegate(this.OnBeginGetById);
            }
            if ((this.onEndGetByIdDelegate == null)) {
                this.onEndGetByIdDelegate = new EndOperationDelegate(this.OnEndGetById);
            }
            if ((this.onGetByIdCompletedDelegate == null)) {
                this.onGetByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetByIdDelegate, new object[] {
                        Id}, this.onEndGetByIdDelegate, this.onGetByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Silverlight3DataGrid.IdentityServiceReference.IIdentityService.BeginGet(IdentityStream.Data.QueryObject Query, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet(Query, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Silverlight3DataGrid.IdentityServiceReference.Identity> Silverlight3DataGrid.IdentityServiceReference.IIdentityService.EndGet(System.IAsyncResult result) {
            return base.Channel.EndGet(result);
        }
        
        private System.IAsyncResult OnBeginGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            IdentityStream.Data.QueryObject Query = ((IdentityStream.Data.QueryObject)(inValues[0]));
            return ((Silverlight3DataGrid.IdentityServiceReference.IIdentityService)(this)).BeginGet(Query, callback, asyncState);
        }
        
        private object[] OnEndGet(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Silverlight3DataGrid.IdentityServiceReference.Identity> retVal = ((Silverlight3DataGrid.IdentityServiceReference.IIdentityService)(this)).EndGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCompleted(object state) {
            if ((this.GetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCompleted(this, new GetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAsync(IdentityStream.Data.QueryObject Query) {
            this.GetAsync(Query, null);
        }
        
        public void GetAsync(IdentityStream.Data.QueryObject Query, object userState) {
            if ((this.onBeginGetDelegate == null)) {
                this.onBeginGetDelegate = new BeginOperationDelegate(this.OnBeginGet);
            }
            if ((this.onEndGetDelegate == null)) {
                this.onEndGetDelegate = new EndOperationDelegate(this.OnEndGet);
            }
            if ((this.onGetCompletedDelegate == null)) {
                this.onGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCompleted);
            }
            base.InvokeAsync(this.onBeginGetDelegate, new object[] {
                        Query}, this.onEndGetDelegate, this.onGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Silverlight3DataGrid.IdentityServiceReference.IIdentityService.BeginInsert(Silverlight3DataGrid.IdentityServiceReference.Identity Entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsert(Entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Silverlight3DataGrid.IdentityServiceReference.IIdentityService.EndInsert(System.IAsyncResult result) {
            base.Channel.EndInsert(result);
        }
        
        private System.IAsyncResult OnBeginInsert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Silverlight3DataGrid.IdentityServiceReference.Identity Entity = ((Silverlight3DataGrid.IdentityServiceReference.Identity)(inValues[0]));
            return ((Silverlight3DataGrid.IdentityServiceReference.IIdentityService)(this)).BeginInsert(Entity, callback, asyncState);
        }
        
        private object[] OnEndInsert(System.IAsyncResult result) {
            ((Silverlight3DataGrid.IdentityServiceReference.IIdentityService)(this)).EndInsert(result);
            return null;
        }
        
        private void OnInsertCompleted(object state) {
            if ((this.InsertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertAsync(Silverlight3DataGrid.IdentityServiceReference.Identity Entity) {
            this.InsertAsync(Entity, null);
        }
        
        public void InsertAsync(Silverlight3DataGrid.IdentityServiceReference.Identity Entity, object userState) {
            if ((this.onBeginInsertDelegate == null)) {
                this.onBeginInsertDelegate = new BeginOperationDelegate(this.OnBeginInsert);
            }
            if ((this.onEndInsertDelegate == null)) {
                this.onEndInsertDelegate = new EndOperationDelegate(this.OnEndInsert);
            }
            if ((this.onInsertCompletedDelegate == null)) {
                this.onInsertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertCompleted);
            }
            base.InvokeAsync(this.onBeginInsertDelegate, new object[] {
                        Entity}, this.onEndInsertDelegate, this.onInsertCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Silverlight3DataGrid.IdentityServiceReference.IIdentityService.BeginDelete(Silverlight3DataGrid.IdentityServiceReference.Identity Entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelete(Entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Silverlight3DataGrid.IdentityServiceReference.IIdentityService.EndDelete(System.IAsyncResult result) {
            base.Channel.EndDelete(result);
        }
        
        private System.IAsyncResult OnBeginDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Silverlight3DataGrid.IdentityServiceReference.Identity Entity = ((Silverlight3DataGrid.IdentityServiceReference.Identity)(inValues[0]));
            return ((Silverlight3DataGrid.IdentityServiceReference.IIdentityService)(this)).BeginDelete(Entity, callback, asyncState);
        }
        
        private object[] OnEndDelete(System.IAsyncResult result) {
            ((Silverlight3DataGrid.IdentityServiceReference.IIdentityService)(this)).EndDelete(result);
            return null;
        }
        
        private void OnDeleteCompleted(object state) {
            if ((this.DeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAsync(Silverlight3DataGrid.IdentityServiceReference.Identity Entity) {
            this.DeleteAsync(Entity, null);
        }
        
        public void DeleteAsync(Silverlight3DataGrid.IdentityServiceReference.Identity Entity, object userState) {
            if ((this.onBeginDeleteDelegate == null)) {
                this.onBeginDeleteDelegate = new BeginOperationDelegate(this.OnBeginDelete);
            }
            if ((this.onEndDeleteDelegate == null)) {
                this.onEndDeleteDelegate = new EndOperationDelegate(this.OnEndDelete);
            }
            if ((this.onDeleteCompletedDelegate == null)) {
                this.onDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDelegate, new object[] {
                        Entity}, this.onEndDeleteDelegate, this.onDeleteCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Silverlight3DataGrid.IdentityServiceReference.IIdentityService CreateChannel() {
            return new IdentityServiceClientChannel(this);
        }
        
        private class IdentityServiceClientChannel : ChannelBase<Silverlight3DataGrid.IdentityServiceReference.IIdentityService>, Silverlight3DataGrid.IdentityServiceReference.IIdentityService {
            
            public IdentityServiceClientChannel(System.ServiceModel.ClientBase<Silverlight3DataGrid.IdentityServiceReference.IIdentityService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetById(int Id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Id;
                System.IAsyncResult _result = base.BeginInvoke("GetById", _args, callback, asyncState);
                return _result;
            }
            
            public Silverlight3DataGrid.IdentityServiceReference.Identity EndGetById(System.IAsyncResult result) {
                object[] _args = new object[0];
                Silverlight3DataGrid.IdentityServiceReference.Identity _result = ((Silverlight3DataGrid.IdentityServiceReference.Identity)(base.EndInvoke("GetById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGet(IdentityStream.Data.QueryObject Query, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Query;
                System.IAsyncResult _result = base.BeginInvoke("Get", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Silverlight3DataGrid.IdentityServiceReference.Identity> EndGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Silverlight3DataGrid.IdentityServiceReference.Identity> _result = ((System.Collections.ObjectModel.ObservableCollection<Silverlight3DataGrid.IdentityServiceReference.Identity>)(base.EndInvoke("Get", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsert(Silverlight3DataGrid.IdentityServiceReference.Identity Entity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Entity;
                System.IAsyncResult _result = base.BeginInvoke("Insert", _args, callback, asyncState);
                return _result;
            }
            
            public void EndInsert(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Insert", _args, result);
            }
            
            public System.IAsyncResult BeginDelete(Silverlight3DataGrid.IdentityServiceReference.Identity Entity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Entity;
                System.IAsyncResult _result = base.BeginInvoke("Delete", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Delete", _args, result);
            }
        }
    }
}
