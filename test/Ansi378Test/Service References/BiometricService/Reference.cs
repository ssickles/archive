//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ansi378Test.BiometricService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.Data")]
    [System.SerializableAttribute()]
    public partial class RequestData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdentityIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IdentityId {
            get {
                return this.IdentityIdField;
            }
            set {
                if ((this.IdentityIdField.Equals(value) != true)) {
                    this.IdentityIdField = value;
                    this.RaisePropertyChanged("IdentityId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionSecurityData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.Data")]
    [System.SerializableAttribute()]
    public partial class TransactionSecurityData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthenticatonLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefiningLevelOfTransactionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthenticatonLevel {
            get {
                return this.AuthenticatonLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthenticatonLevelField, value) != true)) {
                    this.AuthenticatonLevelField = value;
                    this.RaisePropertyChanged("AuthenticatonLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefiningLevelOfTransaction {
            get {
                return this.DefiningLevelOfTransactionField;
            }
            set {
                if ((object.ReferenceEquals(this.DefiningLevelOfTransactionField, value) != true)) {
                    this.DefiningLevelOfTransactionField = value;
                    this.RaisePropertyChanged("DefiningLevelOfTransaction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Transaction {
            get {
                return this.TransactionField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionField, value) != true)) {
                    this.TransactionField = value;
                    this.RaisePropertyChanged("Transaction");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationLevelData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.Data")]
    [System.SerializableAttribute()]
    public partial class AuthenticationLevelData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MySqlQueryData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.DataAccess.Reposito" +
        "ries.MySql")]
    [System.SerializableAttribute()]
    public partial class MySqlQueryData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Ansi378Test.BiometricService.ExpressionData FiltersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Ansi378Test.BiometricService.SortData> SortsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Ansi378Test.BiometricService.ExpressionData Filters {
            get {
                return this.FiltersField;
            }
            set {
                if ((object.ReferenceEquals(this.FiltersField, value) != true)) {
                    this.FiltersField = value;
                    this.RaisePropertyChanged("Filters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Offset {
            get {
                return this.OffsetField;
            }
            set {
                if ((this.OffsetField.Equals(value) != true)) {
                    this.OffsetField = value;
                    this.RaisePropertyChanged("Offset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.SortData> Sorts {
            get {
                return this.SortsField;
            }
            set {
                if ((object.ReferenceEquals(this.SortsField, value) != true)) {
                    this.SortsField = value;
                    this.RaisePropertyChanged("Sorts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpressionData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.DataAccess.Reposito" +
        "ries.MySql")]
    [System.SerializableAttribute()]
    public partial class ExpressionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Ansi378Test.BiometricService.ExpressionData FirstSubExpressionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGroupExpressionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NegatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<Ansi378Test.BiometricService.ExpressionData, Ansi378Test.BiometricService.QueryOperand> SubExpressionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Ansi378Test.BiometricService.FieldType ValueTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Ansi378Test.BiometricService.ExpressionData FirstSubExpression {
            get {
                return this.FirstSubExpressionField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstSubExpressionField, value) != true)) {
                    this.FirstSubExpressionField = value;
                    this.RaisePropertyChanged("FirstSubExpression");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGroupExpression {
            get {
                return this.IsGroupExpressionField;
            }
            set {
                if ((this.IsGroupExpressionField.Equals(value) != true)) {
                    this.IsGroupExpressionField = value;
                    this.RaisePropertyChanged("IsGroupExpression");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Negated {
            get {
                return this.NegatedField;
            }
            set {
                if ((this.NegatedField.Equals(value) != true)) {
                    this.NegatedField = value;
                    this.RaisePropertyChanged("Negated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationField, value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<Ansi378Test.BiometricService.ExpressionData, Ansi378Test.BiometricService.QueryOperand> SubExpressions {
            get {
                return this.SubExpressionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SubExpressionsField, value) != true)) {
                    this.SubExpressionsField = value;
                    this.RaisePropertyChanged("SubExpressions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Ansi378Test.BiometricService.FieldType ValueType {
            get {
                return this.ValueTypeField;
            }
            set {
                if ((this.ValueTypeField.Equals(value) != true)) {
                    this.ValueTypeField = value;
                    this.RaisePropertyChanged("ValueType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.DataAccess.Reposito" +
        "ries.MySql")]
    [System.SerializableAttribute()]
    public partial class SortData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Ansi378Test.BiometricService.SortDirection DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Ansi378Test.BiometricService.SortDirection Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryOperand", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.DataAccess.Reposito" +
        "ries.MySql")]
    public enum QueryOperand : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AND = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OR = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldType", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.DataAccess.Reposito" +
        "ries.MySql")]
    public enum FieldType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        String = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Numeric = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortDirection", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.DataAccess.Reposito" +
        "ries.MySql")]
    public enum SortDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ASC = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DESC = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationTypeData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.Data")]
    [System.SerializableAttribute()]
    public partial class AuthenticationTypeData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IconPath {
            get {
                return this.IconPathField;
            }
            set {
                if ((object.ReferenceEquals(this.IconPathField, value) != true)) {
                    this.IconPathField = value;
                    this.RaisePropertyChanged("IconPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationUnitData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.Data")]
    [System.SerializableAttribute()]
    public partial class AuthenticationUnitData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthenticationTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SequenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthenticationTypeCode {
            get {
                return this.AuthenticationTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthenticationTypeCodeField, value) != true)) {
                    this.AuthenticationTypeCodeField = value;
                    this.RaisePropertyChanged("AuthenticationTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnrollmentData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.Data")]
    [System.SerializableAttribute()]
    public partial class EnrollmentData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AdministratorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthenticationTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EnrollmentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdentityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AdministratorId {
            get {
                return this.AdministratorIdField;
            }
            set {
                if ((this.AdministratorIdField.Equals(value) != true)) {
                    this.AdministratorIdField = value;
                    this.RaisePropertyChanged("AdministratorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthenticationTypeCode {
            get {
                return this.AuthenticationTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthenticationTypeCodeField, value) != true)) {
                    this.AuthenticationTypeCodeField = value;
                    this.RaisePropertyChanged("AuthenticationTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EnrollmentDate {
            get {
                return this.EnrollmentDateField;
            }
            set {
                if ((this.EnrollmentDateField.Equals(value) != true)) {
                    this.EnrollmentDateField = value;
                    this.RaisePropertyChanged("EnrollmentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IdentityId {
            get {
                return this.IdentityIdField;
            }
            set {
                if ((this.IdentityIdField.Equals(value) != true)) {
                    this.IdentityIdField = value;
                    this.RaisePropertyChanged("IdentityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Uid {
            get {
                return this.UidField;
            }
            set {
                if ((this.UidField.Equals(value) != true)) {
                    this.UidField = value;
                    this.RaisePropertyChanged("Uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationTemplateData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.Data")]
    [System.SerializableAttribute()]
    public partial class AuthenticationTemplateData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthenticationUnitCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EnrollmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] TemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthenticationUnitCode {
            get {
                return this.AuthenticationUnitCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthenticationUnitCodeField, value) != true)) {
                    this.AuthenticationUnitCodeField = value;
                    this.RaisePropertyChanged("AuthenticationUnitCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EnrollmentId {
            get {
                return this.EnrollmentIdField;
            }
            set {
                if ((this.EnrollmentIdField.Equals(value) != true)) {
                    this.EnrollmentIdField = value;
                    this.RaisePropertyChanged("EnrollmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Template {
            get {
                return this.TemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateField, value) != true)) {
                    this.TemplateField = value;
                    this.RaisePropertyChanged("Template");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Uid {
            get {
                return this.UidField;
            }
            set {
                if ((this.UidField.Equals(value) != true)) {
                    this.UidField = value;
                    this.RaisePropertyChanged("Uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentityData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.Data")]
    [System.SerializableAttribute()]
    public partial class IdentityData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthenticationLevelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthenticationLevelId {
            get {
                return this.AuthenticationLevelIdField;
            }
            set {
                if ((this.AuthenticationLevelIdField.Equals(value) != true)) {
                    this.AuthenticationLevelIdField = value;
                    this.RaisePropertyChanged("AuthenticationLevelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdentityCode {
            get {
                return this.IdentityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentityCodeField, value) != true)) {
                    this.IdentityCodeField = value;
                    this.RaisePropertyChanged("IdentityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceId {
            get {
                return this.SourceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceIdField, value) != true)) {
                    this.SourceIdField = value;
                    this.RaisePropertyChanged("SourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Uid {
            get {
                return this.UidField;
            }
            set {
                if ((this.UidField.Equals(value) != true)) {
                    this.UidField = value;
                    this.RaisePropertyChanged("Uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.Data")]
    [System.SerializableAttribute()]
    public partial class TransactionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthenticationLevelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionTypeCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationCode {
            get {
                return this.ApplicationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationCodeField, value) != true)) {
                    this.ApplicationCodeField = value;
                    this.RaisePropertyChanged("ApplicationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthenticationLevelId {
            get {
                return this.AuthenticationLevelIdField;
            }
            set {
                if ((this.AuthenticationLevelIdField.Equals(value) != true)) {
                    this.AuthenticationLevelIdField = value;
                    this.RaisePropertyChanged("AuthenticationLevelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionTypeCode {
            get {
                return this.TransactionTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionTypeCodeField, value) != true)) {
                    this.TransactionTypeCodeField = value;
                    this.RaisePropertyChanged("TransactionTypeCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.Data")]
    [System.SerializableAttribute()]
    public partial class ReportData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettingsData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.Data")]
    [System.SerializableAttribute()]
    public partial class SettingsData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FingersNfmMaximalRotationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MatchingThresholdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FingersNfmMaximalRotation {
            get {
                return this.FingersNfmMaximalRotationField;
            }
            set {
                if ((this.FingersNfmMaximalRotationField.Equals(value) != true)) {
                    this.FingersNfmMaximalRotationField = value;
                    this.RaisePropertyChanged("FingersNfmMaximalRotation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MatchingThreshold {
            get {
                return this.MatchingThresholdField;
            }
            set {
                if ((this.MatchingThresholdField.Equals(value) != true)) {
                    this.MatchingThresholdField = value;
                    this.RaisePropertyChanged("MatchingThreshold");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Audit.EventTypes", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Logging")]
    public enum AuditEventTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddLogin = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemoveLogin = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateLogin = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteLogin = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddIdentity = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateIdentity = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteIdentity = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddEnrollment = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddIdentityGroup = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateIdentityGroup = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemoveIdentityGroup = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemoveIdentitiesFromIdentityGroup = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddIdentitiesToIdentityGroup = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddIdentityGroupTransaction = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemoveIdentityGroupTransaction = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportT24Users = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportT24Customers = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportT24Companies = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportT24AccountOfficers = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportT24Languages = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessImportsComplete = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateTransaction = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddAuthenticationEnrollment = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateAuthenticationEnrollment = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddAuthenticationTemplate = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddAuthenticationTemplateScores = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddAuthenticationLevel = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateAuthenticationLevel = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemoveAuthenticationLevel = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddAuthenticationLevelUnit = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemoveAuthenticationLevelUnit = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PasswordFailure = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TemplateMatchFailure = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RunIdentityCheck = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RunCustomerCheck = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RunCustomerEnrollment = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebTransactionCheck = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DesktopTransactionCheck = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionCheckFailure = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PasswordWasReset = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PasswordResetFailure = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TemplateFraud = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnrollmentDuplicateFound = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportLDAPUsers = 44,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.Data")]
    [System.SerializableAttribute()]
    public partial class CountryData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.Data")]
    [System.SerializableAttribute()]
    public partial class RoleData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationCode {
            get {
                return this.ApplicationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationCodeField, value) != true)) {
                    this.ApplicationCodeField = value;
                    this.RaisePropertyChanged("ApplicationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.Data")]
    [System.SerializableAttribute()]
    public partial class ApplicationData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemPasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemLogin {
            get {
                return this.SystemLoginField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemLoginField, value) != true)) {
                    this.SystemLoginField = value;
                    this.RaisePropertyChanged("SystemLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemPassword {
            get {
                return this.SystemPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemPasswordField, value) != true)) {
                    this.SystemPasswordField = value;
                    this.RaisePropertyChanged("SystemPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationTypeData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.Data")]
    [System.SerializableAttribute()]
    public partial class ApplicationTypeData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutomationFilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutomationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationCode {
            get {
                return this.ApplicationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationCodeField, value) != true)) {
                    this.ApplicationCodeField = value;
                    this.RaisePropertyChanged("ApplicationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationPath {
            get {
                return this.ApplicationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationPathField, value) != true)) {
                    this.ApplicationPathField = value;
                    this.RaisePropertyChanged("ApplicationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutomationFilePath {
            get {
                return this.AutomationFilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.AutomationFilePathField, value) != true)) {
                    this.AutomationFilePathField = value;
                    this.RaisePropertyChanged("AutomationFilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutomationId {
            get {
                return this.AutomationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AutomationIdField, value) != true)) {
                    this.AutomationIdField = value;
                    this.RaisePropertyChanged("AutomationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IconPath {
            get {
                return this.IconPathField;
            }
            set {
                if ((object.ReferenceEquals(this.IconPathField, value) != true)) {
                    this.IconPathField = value;
                    this.RaisePropertyChanged("IconPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentityTypeData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.Data")]
    [System.SerializableAttribute()]
    public partial class IdentityTypeData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.Data")]
    [System.SerializableAttribute()]
    public partial class LoginData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FirstTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdentityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResetPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string T24IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationCode {
            get {
                return this.ApplicationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationCodeField, value) != true)) {
                    this.ApplicationCodeField = value;
                    this.RaisePropertyChanged("ApplicationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FirstTime {
            get {
                return this.FirstTimeField;
            }
            set {
                if ((this.FirstTimeField.Equals(value) != true)) {
                    this.FirstTimeField = value;
                    this.RaisePropertyChanged("FirstTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IdentityId {
            get {
                return this.IdentityIdField;
            }
            set {
                if ((this.IdentityIdField.Equals(value) != true)) {
                    this.IdentityIdField = value;
                    this.RaisePropertyChanged("IdentityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResetPassword {
            get {
                return this.ResetPasswordField;
            }
            set {
                if ((this.ResetPasswordField.Equals(value) != true)) {
                    this.ResetPasswordField = value;
                    this.RaisePropertyChanged("ResetPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleCode {
            get {
                return this.RoleCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleCodeField, value) != true)) {
                    this.RoleCodeField = value;
                    this.RaisePropertyChanged("RoleCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string T24Id {
            get {
                return this.T24IdField;
            }
            set {
                if ((object.ReferenceEquals(this.T24IdField, value) != true)) {
                    this.T24IdField = value;
                    this.RaisePropertyChanged("T24Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentityGroupData", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Server.Data")]
    [System.SerializableAttribute()]
    public partial class IdentityGroupData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthenticationLevelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResetPasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthenticationLevelId {
            get {
                return this.AuthenticationLevelIdField;
            }
            set {
                if ((this.AuthenticationLevelIdField.Equals(value) != true)) {
                    this.AuthenticationLevelIdField = value;
                    this.RaisePropertyChanged("AuthenticationLevelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ResetPassword {
            get {
                return this.ResetPasswordField;
            }
            set {
                if ((this.ResetPasswordField.Equals(value) != true)) {
                    this.ResetPasswordField = value;
                    this.RaisePropertyChanged("ResetPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
        "")]
    [System.SerializableAttribute()]
    public partial class ErrorDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Ansi378Test.BiometricService.ServiceException ExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.DateTimeField, value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Ansi378Test.BiometricService.ServiceException ExceptionType {
            get {
                return this.ExceptionTypeField;
            }
            set {
                if ((this.ExceptionTypeField.Equals(value) != true)) {
                    this.ExceptionTypeField = value;
                    this.RaisePropertyChanged("ExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodName {
            get {
                return this.MethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodNameField, value) != true)) {
                    this.MethodNameField = value;
                    this.RaisePropertyChanged("MethodName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
        "")]
    public enum ServiceException : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatabaseOffline = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatabaseProcessingError = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Application = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BiometricService.IBiometricService")]
    public interface IBiometricService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/CheckTransactionAccess", ReplyAction="http://tempuri.org/IBiometricService/CheckTransactionAccessResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/CheckTransactionAccessErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        bool CheckTransactionAccess(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, string TransactionCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/CheckTransactionAccess", ReplyAction="http://tempuri.org/IBiometricService/CheckTransactionAccessResponse")]
        System.IAsyncResult BeginCheckTransactionAccess(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, string TransactionCode, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckTransactionAccess(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetValidApplications", ReplyAction="http://tempuri.org/IBiometricService/GetValidApplicationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetValidApplicationsErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<string> GetValidApplications(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetValidApplications", ReplyAction="http://tempuri.org/IBiometricService/GetValidApplicationsResponse")]
        System.IAsyncResult BeginGetValidApplications(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndGetValidApplications(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetAuthenticationUnitsForTransactionGroupIde" +
            "ntity", ReplyAction="http://tempuri.org/IBiometricService/GetAuthenticationUnitsForTransactionGroupIde" +
            "ntityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetAuthenticationUnitsForTransactionGroupIde" +
            "ntityErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<string> GetAuthenticationUnitsForTransactionGroupIdentity(Ansi378Test.BiometricService.RequestData RequestData, string transactionCode, System.Guid identityId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetAuthenticationUnitsForTransactionGroupIde" +
            "ntity", ReplyAction="http://tempuri.org/IBiometricService/GetAuthenticationUnitsForTransactionGroupIde" +
            "ntityResponse")]
        System.IAsyncResult BeginGetAuthenticationUnitsForTransactionGroupIdentity(Ansi378Test.BiometricService.RequestData RequestData, string transactionCode, System.Guid identityId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndGetAuthenticationUnitsForTransactionGroupIdentity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetTransactionSecurityDetails", ReplyAction="http://tempuri.org/IBiometricService/GetTransactionSecurityDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetTransactionSecurityDetailsErrorDetailsFau" +
            "lt", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionSecurityData> GetTransactionSecurityDetails(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetTransactionSecurityDetails", ReplyAction="http://tempuri.org/IBiometricService/GetTransactionSecurityDetailsResponse")]
        System.IAsyncResult BeginGetTransactionSecurityDetails(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionSecurityData> EndGetTransactionSecurityDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetSourceImageAsJpeg", ReplyAction="http://tempuri.org/IBiometricService/GetSourceImageAsJpegResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetSourceImageAsJpegErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        byte[] GetSourceImageAsJpeg(Ansi378Test.BiometricService.RequestData requestData, string t24id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetSourceImageAsJpeg", ReplyAction="http://tempuri.org/IBiometricService/GetSourceImageAsJpegResponse")]
        System.IAsyncResult BeginGetSourceImageAsJpeg(Ansi378Test.BiometricService.RequestData requestData, string t24id, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetSourceImageAsJpeg(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/RemoveAuthenticationLevel", ReplyAction="http://tempuri.org/IBiometricService/RemoveAuthenticationLevelResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/RemoveAuthenticationLevelErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        void RemoveAuthenticationLevel(Ansi378Test.BiometricService.RequestData RequestData, int Id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/RemoveAuthenticationLevel", ReplyAction="http://tempuri.org/IBiometricService/RemoveAuthenticationLevelResponse")]
        System.IAsyncResult BeginRemoveAuthenticationLevel(Ansi378Test.BiometricService.RequestData RequestData, int Id, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveAuthenticationLevel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/UpdateAuthenticationLevel", ReplyAction="http://tempuri.org/IBiometricService/UpdateAuthenticationLevelResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/UpdateAuthenticationLevelErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        void UpdateAuthenticationLevel(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.AuthenticationLevelData AuthenticationLevelData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/UpdateAuthenticationLevel", ReplyAction="http://tempuri.org/IBiometricService/UpdateAuthenticationLevelResponse")]
        System.IAsyncResult BeginUpdateAuthenticationLevel(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.AuthenticationLevelData AuthenticationLevelData, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateAuthenticationLevel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/AddAuthenticationLevelUnit", ReplyAction="http://tempuri.org/IBiometricService/AddAuthenticationLevelUnitResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/AddAuthenticationLevelUnitErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        void AddAuthenticationLevelUnit(Ansi378Test.BiometricService.RequestData RequestData, int Id, string Code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/AddAuthenticationLevelUnit", ReplyAction="http://tempuri.org/IBiometricService/AddAuthenticationLevelUnitResponse")]
        System.IAsyncResult BeginAddAuthenticationLevelUnit(Ansi378Test.BiometricService.RequestData RequestData, int Id, string Code, System.AsyncCallback callback, object asyncState);
        
        void EndAddAuthenticationLevelUnit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/RemoveAuthenticationLevelUnit", ReplyAction="http://tempuri.org/IBiometricService/RemoveAuthenticationLevelUnitResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/RemoveAuthenticationLevelUnitErrorDetailsFau" +
            "lt", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        void RemoveAuthenticationLevelUnit(Ansi378Test.BiometricService.RequestData RequestData, int Id, string Code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/RemoveAuthenticationLevelUnit", ReplyAction="http://tempuri.org/IBiometricService/RemoveAuthenticationLevelUnitResponse")]
        System.IAsyncResult BeginRemoveAuthenticationLevelUnit(Ansi378Test.BiometricService.RequestData RequestData, int Id, string Code, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveAuthenticationLevelUnit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetAuthenticationTypes", ReplyAction="http://tempuri.org/IBiometricService/GetAuthenticationTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetAuthenticationTypesErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTypeData> GetAuthenticationTypes(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData Query);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetAuthenticationTypes", ReplyAction="http://tempuri.org/IBiometricService/GetAuthenticationTypesResponse")]
        System.IAsyncResult BeginGetAuthenticationTypes(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData Query, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTypeData> EndGetAuthenticationTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetAuthenticationUnits", ReplyAction="http://tempuri.org/IBiometricService/GetAuthenticationUnitsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetAuthenticationUnitsErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationUnitData> GetAuthenticationUnits(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData Query);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetAuthenticationUnits", ReplyAction="http://tempuri.org/IBiometricService/GetAuthenticationUnitsResponse")]
        System.IAsyncResult BeginGetAuthenticationUnits(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData Query, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationUnitData> EndGetAuthenticationUnits(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetEnrollments", ReplyAction="http://tempuri.org/IBiometricService/GetEnrollmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetEnrollmentsErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.EnrollmentData> GetEnrollments(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData Query);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetEnrollments", ReplyAction="http://tempuri.org/IBiometricService/GetEnrollmentsResponse")]
        System.IAsyncResult BeginGetEnrollments(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData Query, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.EnrollmentData> EndGetEnrollments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetEnrolledAuthenticationTypes", ReplyAction="http://tempuri.org/IBiometricService/GetEnrolledAuthenticationTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetEnrolledAuthenticationTypesErrorDetailsFa" +
            "ult", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<string> GetEnrolledAuthenticationTypes(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetEnrolledAuthenticationTypes", ReplyAction="http://tempuri.org/IBiometricService/GetEnrolledAuthenticationTypesResponse")]
        System.IAsyncResult BeginGetEnrolledAuthenticationTypes(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndGetEnrolledAuthenticationTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetAuthenticationTemplates", ReplyAction="http://tempuri.org/IBiometricService/GetAuthenticationTemplatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetAuthenticationTemplatesErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTemplateData> GetAuthenticationTemplates(Ansi378Test.BiometricService.RequestData RequestData, System.Guid EnrollmentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetAuthenticationTemplates", ReplyAction="http://tempuri.org/IBiometricService/GetAuthenticationTemplatesResponse")]
        System.IAsyncResult BeginGetAuthenticationTemplates(Ansi378Test.BiometricService.RequestData RequestData, System.Guid EnrollmentId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTemplateData> EndGetAuthenticationTemplates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/IsCorrectAuthenticationTemplate", ReplyAction="http://tempuri.org/IBiometricService/IsCorrectAuthenticationTemplateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/IsCorrectAuthenticationTemplateErrorDetailsF" +
            "ault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        bool IsCorrectAuthenticationTemplate(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, Ansi378Test.BiometricService.AuthenticationTemplateData Template);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/IsCorrectAuthenticationTemplate", ReplyAction="http://tempuri.org/IBiometricService/IsCorrectAuthenticationTemplateResponse")]
        System.IAsyncResult BeginIsCorrectAuthenticationTemplate(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, Ansi378Test.BiometricService.AuthenticationTemplateData Template, System.AsyncCallback callback, object asyncState);
        
        bool EndIsCorrectAuthenticationTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/AddEnrollment", ReplyAction="http://tempuri.org/IBiometricService/AddEnrollmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/AddEnrollmentErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Guid AddEnrollment(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.EnrollmentData EnrollmentData, System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTemplateData> Templates);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/AddEnrollment", ReplyAction="http://tempuri.org/IBiometricService/AddEnrollmentResponse")]
        System.IAsyncResult BeginAddEnrollment(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.EnrollmentData EnrollmentData, System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTemplateData> Templates, System.AsyncCallback callback, object asyncState);
        
        System.Guid EndAddEnrollment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/FindIdentityFromTemplate", ReplyAction="http://tempuri.org/IBiometricService/FindIdentityFromTemplateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/FindIdentityFromTemplateErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        Ansi378Test.BiometricService.IdentityData FindIdentityFromTemplate(byte[] template, string AuthenticationUnitCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/FindIdentityFromTemplate", ReplyAction="http://tempuri.org/IBiometricService/FindIdentityFromTemplateResponse")]
        System.IAsyncResult BeginFindIdentityFromTemplate(byte[] template, string AuthenticationUnitCode, System.AsyncCallback callback, object asyncState);
        
        Ansi378Test.BiometricService.IdentityData EndFindIdentityFromTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/CheckEnrollmentDuplicates", ReplyAction="http://tempuri.org/IBiometricService/CheckEnrollmentDuplicatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/CheckEnrollmentDuplicatesErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        bool CheckEnrollmentDuplicates(System.Guid EnrollmentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/CheckEnrollmentDuplicates", ReplyAction="http://tempuri.org/IBiometricService/CheckEnrollmentDuplicatesResponse")]
        System.IAsyncResult BeginCheckEnrollmentDuplicates(System.Guid EnrollmentId, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckEnrollmentDuplicates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/EnrollmentDuplicateSearch", ReplyAction="http://tempuri.org/IBiometricService/EnrollmentDuplicateSearchResponse")]
        bool EnrollmentDuplicateSearch(System.Guid EnrollmentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/EnrollmentDuplicateSearch", ReplyAction="http://tempuri.org/IBiometricService/EnrollmentDuplicateSearchResponse")]
        System.IAsyncResult BeginEnrollmentDuplicateSearch(System.Guid EnrollmentId, System.AsyncCallback callback, object asyncState);
        
        bool EndEnrollmentDuplicateSearch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetAnsi378Template", ReplyAction="http://tempuri.org/IBiometricService/GetAnsi378TemplateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetAnsi378TemplateErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        byte[] GetAnsi378Template(System.Guid IdentityId, string AuthenticationUnitCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetAnsi378Template", ReplyAction="http://tempuri.org/IBiometricService/GetAnsi378TemplateResponse")]
        System.IAsyncResult BeginGetAnsi378Template(System.Guid IdentityId, string AuthenticationUnitCode, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetAnsi378Template(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetTransactions", ReplyAction="http://tempuri.org/IBiometricService/GetTransactionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetTransactionsErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData> GetTransactions(Ansi378Test.BiometricService.RequestData RequestData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetTransactions", ReplyAction="http://tempuri.org/IBiometricService/GetTransactionsResponse")]
        System.IAsyncResult BeginGetTransactions(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData> EndGetTransactions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/UpdateTransaction", ReplyAction="http://tempuri.org/IBiometricService/UpdateTransactionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/UpdateTransactionErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        void UpdateTransaction(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.TransactionData TransactionData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/UpdateTransaction", ReplyAction="http://tempuri.org/IBiometricService/UpdateTransactionResponse")]
        System.IAsyncResult BeginUpdateTransaction(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.TransactionData TransactionData, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateTransaction(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetIdentityGroupTransactions", ReplyAction="http://tempuri.org/IBiometricService/GetIdentityGroupTransactionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetIdentityGroupTransactionsErrorDetailsFaul" +
            "t", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData> GetIdentityGroupTransactions(Ansi378Test.BiometricService.RequestData RequestData, int GroupId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetIdentityGroupTransactions", ReplyAction="http://tempuri.org/IBiometricService/GetIdentityGroupTransactionsResponse")]
        System.IAsyncResult BeginGetIdentityGroupTransactions(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData> EndGetIdentityGroupTransactions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetIdentityTransactions", ReplyAction="http://tempuri.org/IBiometricService/GetIdentityTransactionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetIdentityTransactionsErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData> GetIdentityTransactions(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetIdentityTransactions", ReplyAction="http://tempuri.org/IBiometricService/GetIdentityTransactionsResponse")]
        System.IAsyncResult BeginGetIdentityTransactions(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData> EndGetIdentityTransactions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetReports", ReplyAction="http://tempuri.org/IBiometricService/GetReportsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetReportsErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.ReportData> GetReports(Ansi378Test.BiometricService.RequestData RequestData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetReports", ReplyAction="http://tempuri.org/IBiometricService/GetReportsResponse")]
        System.IAsyncResult BeginGetReports(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.ReportData> EndGetReports(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetReportData", ReplyAction="http://tempuri.org/IBiometricService/GetReportDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetReportDataErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Data.DataSet GetReportData(Ansi378Test.BiometricService.RequestData RequestData, string storedProc);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetReportData", ReplyAction="http://tempuri.org/IBiometricService/GetReportDataResponse")]
        System.IAsyncResult BeginGetReportData(Ansi378Test.BiometricService.RequestData RequestData, string storedProc, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetReportData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetReportDataWithRange", ReplyAction="http://tempuri.org/IBiometricService/GetReportDataWithRangeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetReportDataWithRangeErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Data.DataSet GetReportDataWithRange(Ansi378Test.BiometricService.RequestData RequestData, string storedProc, string startdate, string enddate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetReportDataWithRange", ReplyAction="http://tempuri.org/IBiometricService/GetReportDataWithRangeResponse")]
        System.IAsyncResult BeginGetReportDataWithRange(Ansi378Test.BiometricService.RequestData RequestData, string storedProc, string startdate, string enddate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetReportDataWithRange(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetSettings", ReplyAction="http://tempuri.org/IBiometricService/GetSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetSettingsErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        Ansi378Test.BiometricService.SettingsData GetSettings();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetSettings", ReplyAction="http://tempuri.org/IBiometricService/GetSettingsResponse")]
        System.IAsyncResult BeginGetSettings(System.AsyncCallback callback, object asyncState);
        
        Ansi378Test.BiometricService.SettingsData EndGetSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/UpdateSettings", ReplyAction="http://tempuri.org/IBiometricService/UpdateSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/UpdateSettingsErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        void UpdateSettings(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.SettingsData SettingsData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/UpdateSettings", ReplyAction="http://tempuri.org/IBiometricService/UpdateSettingsResponse")]
        System.IAsyncResult BeginUpdateSettings(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.SettingsData SettingsData, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/AuditEvent", ReplyAction="http://tempuri.org/IBiometricService/AuditEventResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/AuditEventErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        void AuditEvent(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.AuditEventTypes Type, string Message);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/AuditEvent", ReplyAction="http://tempuri.org/IBiometricService/AuditEventResponse")]
        System.IAsyncResult BeginAuditEvent(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.AuditEventTypes Type, string Message, System.AsyncCallback callback, object asyncState);
        
        void EndAuditEvent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/LogDebugMessage", ReplyAction="http://tempuri.org/IBiometricService/LogDebugMessageResponse")]
        void LogDebugMessage(Ansi378Test.BiometricService.RequestData RequestData, string Message);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/LogDebugMessage", ReplyAction="http://tempuri.org/IBiometricService/LogDebugMessageResponse")]
        System.IAsyncResult BeginLogDebugMessage(Ansi378Test.BiometricService.RequestData RequestData, string Message, System.AsyncCallback callback, object asyncState);
        
        void EndLogDebugMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/LogInfoMessage", ReplyAction="http://tempuri.org/IBiometricService/LogInfoMessageResponse")]
        void LogInfoMessage(Ansi378Test.BiometricService.RequestData RequestData, string Message);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/LogInfoMessage", ReplyAction="http://tempuri.org/IBiometricService/LogInfoMessageResponse")]
        System.IAsyncResult BeginLogInfoMessage(Ansi378Test.BiometricService.RequestData RequestData, string Message, System.AsyncCallback callback, object asyncState);
        
        void EndLogInfoMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/LogWarningMessage", ReplyAction="http://tempuri.org/IBiometricService/LogWarningMessageResponse")]
        void LogWarningMessage(Ansi378Test.BiometricService.RequestData RequestData, string Message);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/LogWarningMessage", ReplyAction="http://tempuri.org/IBiometricService/LogWarningMessageResponse")]
        System.IAsyncResult BeginLogWarningMessage(Ansi378Test.BiometricService.RequestData RequestData, string Message, System.AsyncCallback callback, object asyncState);
        
        void EndLogWarningMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/LogErrorMessage", ReplyAction="http://tempuri.org/IBiometricService/LogErrorMessageResponse")]
        void LogErrorMessage(Ansi378Test.BiometricService.RequestData RequestData, string Message);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/LogErrorMessage", ReplyAction="http://tempuri.org/IBiometricService/LogErrorMessageResponse")]
        System.IAsyncResult BeginLogErrorMessage(Ansi378Test.BiometricService.RequestData RequestData, string Message, System.AsyncCallback callback, object asyncState);
        
        void EndLogErrorMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/LogErrorMessageWithException", ReplyAction="http://tempuri.org/IBiometricService/LogErrorMessageWithExceptionResponse")]
        void LogErrorMessageWithException(Ansi378Test.BiometricService.RequestData RequestData, string Message, System.Exception ex);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/LogErrorMessageWithException", ReplyAction="http://tempuri.org/IBiometricService/LogErrorMessageWithExceptionResponse")]
        System.IAsyncResult BeginLogErrorMessageWithException(Ansi378Test.BiometricService.RequestData RequestData, string Message, System.Exception ex, System.AsyncCallback callback, object asyncState);
        
        void EndLogErrorMessageWithException(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/CheckApplicationAccess", ReplyAction="http://tempuri.org/IBiometricService/CheckApplicationAccessResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/CheckApplicationAccessErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        bool CheckApplicationAccess(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, string ApplicationCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/CheckApplicationAccess", ReplyAction="http://tempuri.org/IBiometricService/CheckApplicationAccessResponse")]
        System.IAsyncResult BeginCheckApplicationAccess(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, string ApplicationCode, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckApplicationAccess(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetCountries", ReplyAction="http://tempuri.org/IBiometricService/GetCountriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetCountriesErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.CountryData> GetCountries(Ansi378Test.BiometricService.RequestData RequestData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetCountries", ReplyAction="http://tempuri.org/IBiometricService/GetCountriesResponse")]
        System.IAsyncResult BeginGetCountries(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.CountryData> EndGetCountries(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetRoles", ReplyAction="http://tempuri.org/IBiometricService/GetRolesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetRolesErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.RoleData> GetRoles(Ansi378Test.BiometricService.RequestData RequestData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetRoles", ReplyAction="http://tempuri.org/IBiometricService/GetRolesResponse")]
        System.IAsyncResult BeginGetRoles(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.RoleData> EndGetRoles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetApplications", ReplyAction="http://tempuri.org/IBiometricService/GetApplicationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetApplicationsErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.ApplicationData> GetApplications(Ansi378Test.BiometricService.RequestData RequestData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetApplications", ReplyAction="http://tempuri.org/IBiometricService/GetApplicationsResponse")]
        System.IAsyncResult BeginGetApplications(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.ApplicationData> EndGetApplications(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetApplicationTypes", ReplyAction="http://tempuri.org/IBiometricService/GetApplicationTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetApplicationTypesErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.ApplicationTypeData> GetApplicationTypes(Ansi378Test.BiometricService.RequestData RequestData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetApplicationTypes", ReplyAction="http://tempuri.org/IBiometricService/GetApplicationTypesResponse")]
        System.IAsyncResult BeginGetApplicationTypes(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.ApplicationTypeData> EndGetApplicationTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetIdentities", ReplyAction="http://tempuri.org/IBiometricService/GetIdentitiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetIdentitiesErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData> GetIdentities(out int TotalRecords, Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData QueryData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetIdentities", ReplyAction="http://tempuri.org/IBiometricService/GetIdentitiesResponse")]
        System.IAsyncResult BeginGetIdentities(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData QueryData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData> EndGetIdentities(out int TotalRecords, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetAllIdentities", ReplyAction="http://tempuri.org/IBiometricService/GetAllIdentitiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetAllIdentitiesErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData> GetAllIdentities(out int TotalRecords);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetAllIdentities", ReplyAction="http://tempuri.org/IBiometricService/GetAllIdentitiesResponse")]
        System.IAsyncResult BeginGetAllIdentities(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData> EndGetAllIdentities(out int TotalRecords, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetIdentityCount", ReplyAction="http://tempuri.org/IBiometricService/GetIdentityCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetIdentityCountErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        int GetIdentityCount(Ansi378Test.BiometricService.RequestData RequestData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetIdentityCount", ReplyAction="http://tempuri.org/IBiometricService/GetIdentityCountResponse")]
        System.IAsyncResult BeginGetIdentityCount(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState);
        
        int EndGetIdentityCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetIdentityByName", ReplyAction="http://tempuri.org/IBiometricService/GetIdentityByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetIdentityByNameErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        Ansi378Test.BiometricService.IdentityData GetIdentityByName(Ansi378Test.BiometricService.RequestData RequestData, string FullName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetIdentityByName", ReplyAction="http://tempuri.org/IBiometricService/GetIdentityByNameResponse")]
        System.IAsyncResult BeginGetIdentityByName(Ansi378Test.BiometricService.RequestData RequestData, string FullName, System.AsyncCallback callback, object asyncState);
        
        Ansi378Test.BiometricService.IdentityData EndGetIdentityByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetIdentityByT24Id", ReplyAction="http://tempuri.org/IBiometricService/GetIdentityByT24IdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetIdentityByT24IdErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        Ansi378Test.BiometricService.IdentityData GetIdentityByT24Id(Ansi378Test.BiometricService.RequestData RequestData, string T24Id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetIdentityByT24Id", ReplyAction="http://tempuri.org/IBiometricService/GetIdentityByT24IdResponse")]
        System.IAsyncResult BeginGetIdentityByT24Id(Ansi378Test.BiometricService.RequestData RequestData, string T24Id, System.AsyncCallback callback, object asyncState);
        
        Ansi378Test.BiometricService.IdentityData EndGetIdentityByT24Id(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetIdentityByUid", ReplyAction="http://tempuri.org/IBiometricService/GetIdentityByUidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetIdentityByUidErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        Ansi378Test.BiometricService.IdentityData GetIdentityByUid(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetIdentityByUid", ReplyAction="http://tempuri.org/IBiometricService/GetIdentityByUidResponse")]
        System.IAsyncResult BeginGetIdentityByUid(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, System.AsyncCallback callback, object asyncState);
        
        Ansi378Test.BiometricService.IdentityData EndGetIdentityByUid(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetIdentityTypes", ReplyAction="http://tempuri.org/IBiometricService/GetIdentityTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetIdentityTypesErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityTypeData> GetIdentityTypes(Ansi378Test.BiometricService.RequestData RequestData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetIdentityTypes", ReplyAction="http://tempuri.org/IBiometricService/GetIdentityTypesResponse")]
        System.IAsyncResult BeginGetIdentityTypes(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityTypeData> EndGetIdentityTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetEmployees", ReplyAction="http://tempuri.org/IBiometricService/GetEmployeesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetEmployeesErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData> GetEmployees(Ansi378Test.BiometricService.RequestData RequestData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetEmployees", ReplyAction="http://tempuri.org/IBiometricService/GetEmployeesResponse")]
        System.IAsyncResult BeginGetEmployees(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData> EndGetEmployees(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/AddIdentity", ReplyAction="http://tempuri.org/IBiometricService/AddIdentityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/AddIdentityErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Guid AddIdentity(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityData IdentityData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/AddIdentity", ReplyAction="http://tempuri.org/IBiometricService/AddIdentityResponse")]
        System.IAsyncResult BeginAddIdentity(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityData IdentityData, System.AsyncCallback callback, object asyncState);
        
        System.Guid EndAddIdentity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/UpdateIdentity", ReplyAction="http://tempuri.org/IBiometricService/UpdateIdentityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/UpdateIdentityErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        void UpdateIdentity(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityData IdentityData, string transCodes);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/UpdateIdentity", ReplyAction="http://tempuri.org/IBiometricService/UpdateIdentityResponse")]
        System.IAsyncResult BeginUpdateIdentity(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityData IdentityData, string transCodes, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateIdentity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/RemoveIdentity", ReplyAction="http://tempuri.org/IBiometricService/RemoveIdentityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/RemoveIdentityErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        void RemoveIdentity(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/RemoveIdentity", ReplyAction="http://tempuri.org/IBiometricService/RemoveIdentityResponse")]
        System.IAsyncResult BeginRemoveIdentity(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveIdentity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetLogins", ReplyAction="http://tempuri.org/IBiometricService/GetLoginsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetLoginsErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.LoginData> GetLogins(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData QueryData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetLogins", ReplyAction="http://tempuri.org/IBiometricService/GetLoginsResponse")]
        System.IAsyncResult BeginGetLogins(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData QueryData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.LoginData> EndGetLogins(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/AddLogin", ReplyAction="http://tempuri.org/IBiometricService/AddLoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/AddLoginErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        int AddLogin(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.LoginData LoginData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/AddLogin", ReplyAction="http://tempuri.org/IBiometricService/AddLoginResponse")]
        System.IAsyncResult BeginAddLogin(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.LoginData LoginData, System.AsyncCallback callback, object asyncState);
        
        int EndAddLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/UpdateLogin", ReplyAction="http://tempuri.org/IBiometricService/UpdateLoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/UpdateLoginErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        void UpdateLogin(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.LoginData LoginData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/UpdateLogin", ReplyAction="http://tempuri.org/IBiometricService/UpdateLoginResponse")]
        System.IAsyncResult BeginUpdateLogin(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.LoginData LoginData, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/RemoveLogin", ReplyAction="http://tempuri.org/IBiometricService/RemoveLoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/RemoveLoginErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        void RemoveLogin(Ansi378Test.BiometricService.RequestData RequestData, int LoginId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/RemoveLogin", ReplyAction="http://tempuri.org/IBiometricService/RemoveLoginResponse")]
        System.IAsyncResult BeginRemoveLogin(Ansi378Test.BiometricService.RequestData RequestData, int LoginId, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/LoadLoginPasswords", ReplyAction="http://tempuri.org/IBiometricService/LoadLoginPasswordsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/LoadLoginPasswordsErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        Ansi378Test.BiometricService.LoginData LoadLoginPasswords(int LoginId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/LoadLoginPasswords", ReplyAction="http://tempuri.org/IBiometricService/LoadLoginPasswordsResponse")]
        System.IAsyncResult BeginLoadLoginPasswords(int LoginId, System.AsyncCallback callback, object asyncState);
        
        Ansi378Test.BiometricService.LoginData EndLoadLoginPasswords(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/RecordPasswordResetAttempt", ReplyAction="http://tempuri.org/IBiometricService/RecordPasswordResetAttemptResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/RecordPasswordResetAttemptErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        int RecordPasswordResetAttempt(Ansi378Test.BiometricService.RequestData requestData, int loginId, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/RecordPasswordResetAttempt", ReplyAction="http://tempuri.org/IBiometricService/RecordPasswordResetAttemptResponse")]
        System.IAsyncResult BeginRecordPasswordResetAttempt(Ansi378Test.BiometricService.RequestData requestData, int loginId, string oldPassword, string newPassword, System.AsyncCallback callback, object asyncState);
        
        int EndRecordPasswordResetAttempt(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/RecordPasswordResetAttemptResult", ReplyAction="http://tempuri.org/IBiometricService/RecordPasswordResetAttemptResultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/RecordPasswordResetAttemptResultErrorDetails" +
            "Fault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        void RecordPasswordResetAttemptResult(Ansi378Test.BiometricService.RequestData requestData, int attemptId, bool succeeded);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/RecordPasswordResetAttemptResult", ReplyAction="http://tempuri.org/IBiometricService/RecordPasswordResetAttemptResultResponse")]
        System.IAsyncResult BeginRecordPasswordResetAttemptResult(Ansi378Test.BiometricService.RequestData requestData, int attemptId, bool succeeded, System.AsyncCallback callback, object asyncState);
        
        void EndRecordPasswordResetAttemptResult(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetIdentityGroups", ReplyAction="http://tempuri.org/IBiometricService/GetIdentityGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetIdentityGroupsErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityGroupData> GetIdentityGroups(Ansi378Test.BiometricService.RequestData RequestData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetIdentityGroups", ReplyAction="http://tempuri.org/IBiometricService/GetIdentityGroupsResponse")]
        System.IAsyncResult BeginGetIdentityGroups(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityGroupData> EndGetIdentityGroups(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetIdentityGroupById", ReplyAction="http://tempuri.org/IBiometricService/GetIdentityGroupByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetIdentityGroupByIdErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        Ansi378Test.BiometricService.IdentityGroupData GetIdentityGroupById(Ansi378Test.BiometricService.RequestData RequestData, int GroupId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetIdentityGroupById", ReplyAction="http://tempuri.org/IBiometricService/GetIdentityGroupByIdResponse")]
        System.IAsyncResult BeginGetIdentityGroupById(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, System.AsyncCallback callback, object asyncState);
        
        Ansi378Test.BiometricService.IdentityGroupData EndGetIdentityGroupById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/AddIdentityGroup", ReplyAction="http://tempuri.org/IBiometricService/AddIdentityGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/AddIdentityGroupErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        int AddIdentityGroup(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityGroupData IdentityGroupData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/AddIdentityGroup", ReplyAction="http://tempuri.org/IBiometricService/AddIdentityGroupResponse")]
        System.IAsyncResult BeginAddIdentityGroup(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityGroupData IdentityGroupData, System.AsyncCallback callback, object asyncState);
        
        int EndAddIdentityGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/UpdateIdentityGroup", ReplyAction="http://tempuri.org/IBiometricService/UpdateIdentityGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/UpdateIdentityGroupErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        void UpdateIdentityGroup(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityGroupData IdentityGroupData, string transCodes);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/UpdateIdentityGroup", ReplyAction="http://tempuri.org/IBiometricService/UpdateIdentityGroupResponse")]
        System.IAsyncResult BeginUpdateIdentityGroup(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityGroupData IdentityGroupData, string transCodes, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateIdentityGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/RemoveIdentityGroup", ReplyAction="http://tempuri.org/IBiometricService/RemoveIdentityGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/RemoveIdentityGroupErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        void RemoveIdentityGroup(Ansi378Test.BiometricService.RequestData RequestData, int GroupId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/RemoveIdentityGroup", ReplyAction="http://tempuri.org/IBiometricService/RemoveIdentityGroupResponse")]
        System.IAsyncResult BeginRemoveIdentityGroup(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveIdentityGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/UpdateGroupForIdentities", ReplyAction="http://tempuri.org/IBiometricService/UpdateGroupForIdentitiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/UpdateGroupForIdentitiesErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        void UpdateGroupForIdentities(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, string IdentityIds);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/UpdateGroupForIdentities", ReplyAction="http://tempuri.org/IBiometricService/UpdateGroupForIdentitiesResponse")]
        System.IAsyncResult BeginUpdateGroupForIdentities(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, string IdentityIds, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateGroupForIdentities(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/UpdateGroupIdentityLogins", ReplyAction="http://tempuri.org/IBiometricService/UpdateGroupIdentityLoginsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/UpdateGroupIdentityLoginsErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        void UpdateGroupIdentityLogins(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, bool ResetLogins);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/UpdateGroupIdentityLogins", ReplyAction="http://tempuri.org/IBiometricService/UpdateGroupIdentityLoginsResponse")]
        System.IAsyncResult BeginUpdateGroupIdentityLogins(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, bool ResetLogins, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateGroupIdentityLogins(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetAuthenticationLevels", ReplyAction="http://tempuri.org/IBiometricService/GetAuthenticationLevelsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetAuthenticationLevelsErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationLevelData> GetAuthenticationLevels(Ansi378Test.BiometricService.RequestData RequestData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetAuthenticationLevels", ReplyAction="http://tempuri.org/IBiometricService/GetAuthenticationLevelsResponse")]
        System.IAsyncResult BeginGetAuthenticationLevels(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationLevelData> EndGetAuthenticationLevels(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/GetAuthenticationLevelUnits", ReplyAction="http://tempuri.org/IBiometricService/GetAuthenticationLevelUnitsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/GetAuthenticationLevelUnitsErrorDetailsFault" +
            "", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationUnitData> GetAuthenticationLevelUnits(Ansi378Test.BiometricService.RequestData RequestData, int LevelId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/GetAuthenticationLevelUnits", ReplyAction="http://tempuri.org/IBiometricService/GetAuthenticationLevelUnitsResponse")]
        System.IAsyncResult BeginGetAuthenticationLevelUnits(Ansi378Test.BiometricService.RequestData RequestData, int LevelId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationUnitData> EndGetAuthenticationLevelUnits(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricService/AddAuthenticationLevel", ReplyAction="http://tempuri.org/IBiometricService/AddAuthenticationLevelResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Ansi378Test.BiometricService.ErrorDetails), Action="http://tempuri.org/IBiometricService/AddAuthenticationLevelErrorDetailsFault", Name="ErrorDetails", Namespace="http://schemas.datacontract.org/2004/07/IdentityStream.Services.BiometricServices" +
            "")]
        int AddAuthenticationLevel(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.AuthenticationLevelData AuthenticationLevelData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBiometricService/AddAuthenticationLevel", ReplyAction="http://tempuri.org/IBiometricService/AddAuthenticationLevelResponse")]
        System.IAsyncResult BeginAddAuthenticationLevel(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.AuthenticationLevelData AuthenticationLevelData, System.AsyncCallback callback, object asyncState);
        
        int EndAddAuthenticationLevel(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IBiometricServiceChannel : Ansi378Test.BiometricService.IBiometricService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CheckTransactionAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckTransactionAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetValidApplicationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetValidApplicationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetAuthenticationUnitsForTransactionGroupIdentityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAuthenticationUnitsForTransactionGroupIdentityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetTransactionSecurityDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTransactionSecurityDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionSecurityData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionSecurityData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetSourceImageAsJpegCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSourceImageAsJpegCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetAuthenticationTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAuthenticationTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTypeData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTypeData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetAuthenticationUnitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAuthenticationUnitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationUnitData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationUnitData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetEnrollmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEnrollmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.EnrollmentData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.EnrollmentData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetEnrolledAuthenticationTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEnrolledAuthenticationTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetAuthenticationTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAuthenticationTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTemplateData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTemplateData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class IsCorrectAuthenticationTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsCorrectAuthenticationTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class AddEnrollmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddEnrollmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Guid Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class FindIdentityFromTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindIdentityFromTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Ansi378Test.BiometricService.IdentityData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Ansi378Test.BiometricService.IdentityData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CheckEnrollmentDuplicatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckEnrollmentDuplicatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class EnrollmentDuplicateSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnrollmentDuplicateSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetAnsi378TemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnsi378TemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetIdentityGroupTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIdentityGroupTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetIdentityTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIdentityTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.ReportData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.ReportData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetReportDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReportDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetReportDataWithRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReportDataWithRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Ansi378Test.BiometricService.SettingsData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Ansi378Test.BiometricService.SettingsData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CheckApplicationAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckApplicationAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.CountryData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.CountryData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.RoleData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.RoleData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetApplicationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetApplicationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.ApplicationData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.ApplicationData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetApplicationTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetApplicationTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.ApplicationTypeData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.ApplicationTypeData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetIdentitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIdentitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int TotalRecords {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetAllIdentitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllIdentitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int TotalRecords {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetIdentityCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIdentityCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetIdentityByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIdentityByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Ansi378Test.BiometricService.IdentityData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Ansi378Test.BiometricService.IdentityData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetIdentityByT24IdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIdentityByT24IdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Ansi378Test.BiometricService.IdentityData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Ansi378Test.BiometricService.IdentityData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetIdentityByUidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIdentityByUidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Ansi378Test.BiometricService.IdentityData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Ansi378Test.BiometricService.IdentityData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetIdentityTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIdentityTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityTypeData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityTypeData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetEmployeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEmployeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class AddIdentityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddIdentityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Guid Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetLoginsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLoginsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.LoginData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.LoginData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class AddLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class LoadLoginPasswordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadLoginPasswordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Ansi378Test.BiometricService.LoginData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Ansi378Test.BiometricService.LoginData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class RecordPasswordResetAttemptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RecordPasswordResetAttemptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetIdentityGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIdentityGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityGroupData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityGroupData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetIdentityGroupByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIdentityGroupByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Ansi378Test.BiometricService.IdentityGroupData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Ansi378Test.BiometricService.IdentityGroupData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class AddIdentityGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddIdentityGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetAuthenticationLevelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAuthenticationLevelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationLevelData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationLevelData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetAuthenticationLevelUnitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAuthenticationLevelUnitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationUnitData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationUnitData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class AddAuthenticationLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddAuthenticationLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class BiometricServiceClient : System.ServiceModel.ClientBase<Ansi378Test.BiometricService.IBiometricService>, Ansi378Test.BiometricService.IBiometricService {
        
        private BeginOperationDelegate onBeginCheckTransactionAccessDelegate;
        
        private EndOperationDelegate onEndCheckTransactionAccessDelegate;
        
        private System.Threading.SendOrPostCallback onCheckTransactionAccessCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetValidApplicationsDelegate;
        
        private EndOperationDelegate onEndGetValidApplicationsDelegate;
        
        private System.Threading.SendOrPostCallback onGetValidApplicationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAuthenticationUnitsForTransactionGroupIdentityDelegate;
        
        private EndOperationDelegate onEndGetAuthenticationUnitsForTransactionGroupIdentityDelegate;
        
        private System.Threading.SendOrPostCallback onGetAuthenticationUnitsForTransactionGroupIdentityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTransactionSecurityDetailsDelegate;
        
        private EndOperationDelegate onEndGetTransactionSecurityDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTransactionSecurityDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSourceImageAsJpegDelegate;
        
        private EndOperationDelegate onEndGetSourceImageAsJpegDelegate;
        
        private System.Threading.SendOrPostCallback onGetSourceImageAsJpegCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveAuthenticationLevelDelegate;
        
        private EndOperationDelegate onEndRemoveAuthenticationLevelDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveAuthenticationLevelCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAuthenticationLevelDelegate;
        
        private EndOperationDelegate onEndUpdateAuthenticationLevelDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAuthenticationLevelCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddAuthenticationLevelUnitDelegate;
        
        private EndOperationDelegate onEndAddAuthenticationLevelUnitDelegate;
        
        private System.Threading.SendOrPostCallback onAddAuthenticationLevelUnitCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveAuthenticationLevelUnitDelegate;
        
        private EndOperationDelegate onEndRemoveAuthenticationLevelUnitDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveAuthenticationLevelUnitCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAuthenticationTypesDelegate;
        
        private EndOperationDelegate onEndGetAuthenticationTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAuthenticationTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAuthenticationUnitsDelegate;
        
        private EndOperationDelegate onEndGetAuthenticationUnitsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAuthenticationUnitsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEnrollmentsDelegate;
        
        private EndOperationDelegate onEndGetEnrollmentsDelegate;
        
        private System.Threading.SendOrPostCallback onGetEnrollmentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEnrolledAuthenticationTypesDelegate;
        
        private EndOperationDelegate onEndGetEnrolledAuthenticationTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetEnrolledAuthenticationTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAuthenticationTemplatesDelegate;
        
        private EndOperationDelegate onEndGetAuthenticationTemplatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAuthenticationTemplatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsCorrectAuthenticationTemplateDelegate;
        
        private EndOperationDelegate onEndIsCorrectAuthenticationTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onIsCorrectAuthenticationTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddEnrollmentDelegate;
        
        private EndOperationDelegate onEndAddEnrollmentDelegate;
        
        private System.Threading.SendOrPostCallback onAddEnrollmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindIdentityFromTemplateDelegate;
        
        private EndOperationDelegate onEndFindIdentityFromTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onFindIdentityFromTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckEnrollmentDuplicatesDelegate;
        
        private EndOperationDelegate onEndCheckEnrollmentDuplicatesDelegate;
        
        private System.Threading.SendOrPostCallback onCheckEnrollmentDuplicatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnrollmentDuplicateSearchDelegate;
        
        private EndOperationDelegate onEndEnrollmentDuplicateSearchDelegate;
        
        private System.Threading.SendOrPostCallback onEnrollmentDuplicateSearchCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnsi378TemplateDelegate;
        
        private EndOperationDelegate onEndGetAnsi378TemplateDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnsi378TemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTransactionsDelegate;
        
        private EndOperationDelegate onEndGetTransactionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTransactionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateTransactionDelegate;
        
        private EndOperationDelegate onEndUpdateTransactionDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateTransactionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIdentityGroupTransactionsDelegate;
        
        private EndOperationDelegate onEndGetIdentityGroupTransactionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetIdentityGroupTransactionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIdentityTransactionsDelegate;
        
        private EndOperationDelegate onEndGetIdentityTransactionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetIdentityTransactionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReportsDelegate;
        
        private EndOperationDelegate onEndGetReportsDelegate;
        
        private System.Threading.SendOrPostCallback onGetReportsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReportDataDelegate;
        
        private EndOperationDelegate onEndGetReportDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetReportDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReportDataWithRangeDelegate;
        
        private EndOperationDelegate onEndGetReportDataWithRangeDelegate;
        
        private System.Threading.SendOrPostCallback onGetReportDataWithRangeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSettingsDelegate;
        
        private EndOperationDelegate onEndGetSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSettingsDelegate;
        
        private EndOperationDelegate onEndUpdateSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuditEventDelegate;
        
        private EndOperationDelegate onEndAuditEventDelegate;
        
        private System.Threading.SendOrPostCallback onAuditEventCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogDebugMessageDelegate;
        
        private EndOperationDelegate onEndLogDebugMessageDelegate;
        
        private System.Threading.SendOrPostCallback onLogDebugMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogInfoMessageDelegate;
        
        private EndOperationDelegate onEndLogInfoMessageDelegate;
        
        private System.Threading.SendOrPostCallback onLogInfoMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogWarningMessageDelegate;
        
        private EndOperationDelegate onEndLogWarningMessageDelegate;
        
        private System.Threading.SendOrPostCallback onLogWarningMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogErrorMessageDelegate;
        
        private EndOperationDelegate onEndLogErrorMessageDelegate;
        
        private System.Threading.SendOrPostCallback onLogErrorMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogErrorMessageWithExceptionDelegate;
        
        private EndOperationDelegate onEndLogErrorMessageWithExceptionDelegate;
        
        private System.Threading.SendOrPostCallback onLogErrorMessageWithExceptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckApplicationAccessDelegate;
        
        private EndOperationDelegate onEndCheckApplicationAccessDelegate;
        
        private System.Threading.SendOrPostCallback onCheckApplicationAccessCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCountriesDelegate;
        
        private EndOperationDelegate onEndGetCountriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCountriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRolesDelegate;
        
        private EndOperationDelegate onEndGetRolesDelegate;
        
        private System.Threading.SendOrPostCallback onGetRolesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetApplicationsDelegate;
        
        private EndOperationDelegate onEndGetApplicationsDelegate;
        
        private System.Threading.SendOrPostCallback onGetApplicationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetApplicationTypesDelegate;
        
        private EndOperationDelegate onEndGetApplicationTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetApplicationTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIdentitiesDelegate;
        
        private EndOperationDelegate onEndGetIdentitiesDelegate;
        
        private System.Threading.SendOrPostCallback onGetIdentitiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllIdentitiesDelegate;
        
        private EndOperationDelegate onEndGetAllIdentitiesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllIdentitiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIdentityCountDelegate;
        
        private EndOperationDelegate onEndGetIdentityCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetIdentityCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIdentityByNameDelegate;
        
        private EndOperationDelegate onEndGetIdentityByNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetIdentityByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIdentityByT24IdDelegate;
        
        private EndOperationDelegate onEndGetIdentityByT24IdDelegate;
        
        private System.Threading.SendOrPostCallback onGetIdentityByT24IdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIdentityByUidDelegate;
        
        private EndOperationDelegate onEndGetIdentityByUidDelegate;
        
        private System.Threading.SendOrPostCallback onGetIdentityByUidCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIdentityTypesDelegate;
        
        private EndOperationDelegate onEndGetIdentityTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetIdentityTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEmployeesDelegate;
        
        private EndOperationDelegate onEndGetEmployeesDelegate;
        
        private System.Threading.SendOrPostCallback onGetEmployeesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddIdentityDelegate;
        
        private EndOperationDelegate onEndAddIdentityDelegate;
        
        private System.Threading.SendOrPostCallback onAddIdentityCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateIdentityDelegate;
        
        private EndOperationDelegate onEndUpdateIdentityDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateIdentityCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveIdentityDelegate;
        
        private EndOperationDelegate onEndRemoveIdentityDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveIdentityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLoginsDelegate;
        
        private EndOperationDelegate onEndGetLoginsDelegate;
        
        private System.Threading.SendOrPostCallback onGetLoginsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddLoginDelegate;
        
        private EndOperationDelegate onEndAddLoginDelegate;
        
        private System.Threading.SendOrPostCallback onAddLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateLoginDelegate;
        
        private EndOperationDelegate onEndUpdateLoginDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveLoginDelegate;
        
        private EndOperationDelegate onEndRemoveLoginDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadLoginPasswordsDelegate;
        
        private EndOperationDelegate onEndLoadLoginPasswordsDelegate;
        
        private System.Threading.SendOrPostCallback onLoadLoginPasswordsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRecordPasswordResetAttemptDelegate;
        
        private EndOperationDelegate onEndRecordPasswordResetAttemptDelegate;
        
        private System.Threading.SendOrPostCallback onRecordPasswordResetAttemptCompletedDelegate;
        
        private BeginOperationDelegate onBeginRecordPasswordResetAttemptResultDelegate;
        
        private EndOperationDelegate onEndRecordPasswordResetAttemptResultDelegate;
        
        private System.Threading.SendOrPostCallback onRecordPasswordResetAttemptResultCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIdentityGroupsDelegate;
        
        private EndOperationDelegate onEndGetIdentityGroupsDelegate;
        
        private System.Threading.SendOrPostCallback onGetIdentityGroupsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIdentityGroupByIdDelegate;
        
        private EndOperationDelegate onEndGetIdentityGroupByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetIdentityGroupByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddIdentityGroupDelegate;
        
        private EndOperationDelegate onEndAddIdentityGroupDelegate;
        
        private System.Threading.SendOrPostCallback onAddIdentityGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateIdentityGroupDelegate;
        
        private EndOperationDelegate onEndUpdateIdentityGroupDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateIdentityGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveIdentityGroupDelegate;
        
        private EndOperationDelegate onEndRemoveIdentityGroupDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveIdentityGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateGroupForIdentitiesDelegate;
        
        private EndOperationDelegate onEndUpdateGroupForIdentitiesDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateGroupForIdentitiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateGroupIdentityLoginsDelegate;
        
        private EndOperationDelegate onEndUpdateGroupIdentityLoginsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateGroupIdentityLoginsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAuthenticationLevelsDelegate;
        
        private EndOperationDelegate onEndGetAuthenticationLevelsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAuthenticationLevelsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAuthenticationLevelUnitsDelegate;
        
        private EndOperationDelegate onEndGetAuthenticationLevelUnitsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAuthenticationLevelUnitsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddAuthenticationLevelDelegate;
        
        private EndOperationDelegate onEndAddAuthenticationLevelDelegate;
        
        private System.Threading.SendOrPostCallback onAddAuthenticationLevelCompletedDelegate;
        
        public BiometricServiceClient() {
        }
        
        public BiometricServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BiometricServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BiometricServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BiometricServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<CheckTransactionAccessCompletedEventArgs> CheckTransactionAccessCompleted;
        
        public event System.EventHandler<GetValidApplicationsCompletedEventArgs> GetValidApplicationsCompleted;
        
        public event System.EventHandler<GetAuthenticationUnitsForTransactionGroupIdentityCompletedEventArgs> GetAuthenticationUnitsForTransactionGroupIdentityCompleted;
        
        public event System.EventHandler<GetTransactionSecurityDetailsCompletedEventArgs> GetTransactionSecurityDetailsCompleted;
        
        public event System.EventHandler<GetSourceImageAsJpegCompletedEventArgs> GetSourceImageAsJpegCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveAuthenticationLevelCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateAuthenticationLevelCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddAuthenticationLevelUnitCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveAuthenticationLevelUnitCompleted;
        
        public event System.EventHandler<GetAuthenticationTypesCompletedEventArgs> GetAuthenticationTypesCompleted;
        
        public event System.EventHandler<GetAuthenticationUnitsCompletedEventArgs> GetAuthenticationUnitsCompleted;
        
        public event System.EventHandler<GetEnrollmentsCompletedEventArgs> GetEnrollmentsCompleted;
        
        public event System.EventHandler<GetEnrolledAuthenticationTypesCompletedEventArgs> GetEnrolledAuthenticationTypesCompleted;
        
        public event System.EventHandler<GetAuthenticationTemplatesCompletedEventArgs> GetAuthenticationTemplatesCompleted;
        
        public event System.EventHandler<IsCorrectAuthenticationTemplateCompletedEventArgs> IsCorrectAuthenticationTemplateCompleted;
        
        public event System.EventHandler<AddEnrollmentCompletedEventArgs> AddEnrollmentCompleted;
        
        public event System.EventHandler<FindIdentityFromTemplateCompletedEventArgs> FindIdentityFromTemplateCompleted;
        
        public event System.EventHandler<CheckEnrollmentDuplicatesCompletedEventArgs> CheckEnrollmentDuplicatesCompleted;
        
        public event System.EventHandler<EnrollmentDuplicateSearchCompletedEventArgs> EnrollmentDuplicateSearchCompleted;
        
        public event System.EventHandler<GetAnsi378TemplateCompletedEventArgs> GetAnsi378TemplateCompleted;
        
        public event System.EventHandler<GetTransactionsCompletedEventArgs> GetTransactionsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateTransactionCompleted;
        
        public event System.EventHandler<GetIdentityGroupTransactionsCompletedEventArgs> GetIdentityGroupTransactionsCompleted;
        
        public event System.EventHandler<GetIdentityTransactionsCompletedEventArgs> GetIdentityTransactionsCompleted;
        
        public event System.EventHandler<GetReportsCompletedEventArgs> GetReportsCompleted;
        
        public event System.EventHandler<GetReportDataCompletedEventArgs> GetReportDataCompleted;
        
        public event System.EventHandler<GetReportDataWithRangeCompletedEventArgs> GetReportDataWithRangeCompleted;
        
        public event System.EventHandler<GetSettingsCompletedEventArgs> GetSettingsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateSettingsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AuditEventCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LogDebugMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LogInfoMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LogWarningMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LogErrorMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LogErrorMessageWithExceptionCompleted;
        
        public event System.EventHandler<CheckApplicationAccessCompletedEventArgs> CheckApplicationAccessCompleted;
        
        public event System.EventHandler<GetCountriesCompletedEventArgs> GetCountriesCompleted;
        
        public event System.EventHandler<GetRolesCompletedEventArgs> GetRolesCompleted;
        
        public event System.EventHandler<GetApplicationsCompletedEventArgs> GetApplicationsCompleted;
        
        public event System.EventHandler<GetApplicationTypesCompletedEventArgs> GetApplicationTypesCompleted;
        
        public event System.EventHandler<GetIdentitiesCompletedEventArgs> GetIdentitiesCompleted;
        
        public event System.EventHandler<GetAllIdentitiesCompletedEventArgs> GetAllIdentitiesCompleted;
        
        public event System.EventHandler<GetIdentityCountCompletedEventArgs> GetIdentityCountCompleted;
        
        public event System.EventHandler<GetIdentityByNameCompletedEventArgs> GetIdentityByNameCompleted;
        
        public event System.EventHandler<GetIdentityByT24IdCompletedEventArgs> GetIdentityByT24IdCompleted;
        
        public event System.EventHandler<GetIdentityByUidCompletedEventArgs> GetIdentityByUidCompleted;
        
        public event System.EventHandler<GetIdentityTypesCompletedEventArgs> GetIdentityTypesCompleted;
        
        public event System.EventHandler<GetEmployeesCompletedEventArgs> GetEmployeesCompleted;
        
        public event System.EventHandler<AddIdentityCompletedEventArgs> AddIdentityCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateIdentityCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveIdentityCompleted;
        
        public event System.EventHandler<GetLoginsCompletedEventArgs> GetLoginsCompleted;
        
        public event System.EventHandler<AddLoginCompletedEventArgs> AddLoginCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateLoginCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveLoginCompleted;
        
        public event System.EventHandler<LoadLoginPasswordsCompletedEventArgs> LoadLoginPasswordsCompleted;
        
        public event System.EventHandler<RecordPasswordResetAttemptCompletedEventArgs> RecordPasswordResetAttemptCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RecordPasswordResetAttemptResultCompleted;
        
        public event System.EventHandler<GetIdentityGroupsCompletedEventArgs> GetIdentityGroupsCompleted;
        
        public event System.EventHandler<GetIdentityGroupByIdCompletedEventArgs> GetIdentityGroupByIdCompleted;
        
        public event System.EventHandler<AddIdentityGroupCompletedEventArgs> AddIdentityGroupCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateIdentityGroupCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveIdentityGroupCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateGroupForIdentitiesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateGroupIdentityLoginsCompleted;
        
        public event System.EventHandler<GetAuthenticationLevelsCompletedEventArgs> GetAuthenticationLevelsCompleted;
        
        public event System.EventHandler<GetAuthenticationLevelUnitsCompletedEventArgs> GetAuthenticationLevelUnitsCompleted;
        
        public event System.EventHandler<AddAuthenticationLevelCompletedEventArgs> AddAuthenticationLevelCompleted;
        
        public bool CheckTransactionAccess(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, string TransactionCode) {
            return base.Channel.CheckTransactionAccess(RequestData, IdentityId, TransactionCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckTransactionAccess(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, string TransactionCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckTransactionAccess(RequestData, IdentityId, TransactionCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCheckTransactionAccess(System.IAsyncResult result) {
            return base.Channel.EndCheckTransactionAccess(result);
        }
        
        private System.IAsyncResult OnBeginCheckTransactionAccess(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            System.Guid IdentityId = ((System.Guid)(inValues[1]));
            string TransactionCode = ((string)(inValues[2]));
            return this.BeginCheckTransactionAccess(RequestData, IdentityId, TransactionCode, callback, asyncState);
        }
        
        private object[] OnEndCheckTransactionAccess(System.IAsyncResult result) {
            bool retVal = this.EndCheckTransactionAccess(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckTransactionAccessCompleted(object state) {
            if ((this.CheckTransactionAccessCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckTransactionAccessCompleted(this, new CheckTransactionAccessCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckTransactionAccessAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, string TransactionCode) {
            this.CheckTransactionAccessAsync(RequestData, IdentityId, TransactionCode, null);
        }
        
        public void CheckTransactionAccessAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, string TransactionCode, object userState) {
            if ((this.onBeginCheckTransactionAccessDelegate == null)) {
                this.onBeginCheckTransactionAccessDelegate = new BeginOperationDelegate(this.OnBeginCheckTransactionAccess);
            }
            if ((this.onEndCheckTransactionAccessDelegate == null)) {
                this.onEndCheckTransactionAccessDelegate = new EndOperationDelegate(this.OnEndCheckTransactionAccess);
            }
            if ((this.onCheckTransactionAccessCompletedDelegate == null)) {
                this.onCheckTransactionAccessCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckTransactionAccessCompleted);
            }
            base.InvokeAsync(this.onBeginCheckTransactionAccessDelegate, new object[] {
                        RequestData,
                        IdentityId,
                        TransactionCode}, this.onEndCheckTransactionAccessDelegate, this.onCheckTransactionAccessCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<string> GetValidApplications(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId) {
            return base.Channel.GetValidApplications(RequestData, IdentityId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetValidApplications(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetValidApplications(RequestData, IdentityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<string> EndGetValidApplications(System.IAsyncResult result) {
            return base.Channel.EndGetValidApplications(result);
        }
        
        private System.IAsyncResult OnBeginGetValidApplications(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            System.Guid IdentityId = ((System.Guid)(inValues[1]));
            return this.BeginGetValidApplications(RequestData, IdentityId, callback, asyncState);
        }
        
        private object[] OnEndGetValidApplications(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = this.EndGetValidApplications(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetValidApplicationsCompleted(object state) {
            if ((this.GetValidApplicationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetValidApplicationsCompleted(this, new GetValidApplicationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetValidApplicationsAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId) {
            this.GetValidApplicationsAsync(RequestData, IdentityId, null);
        }
        
        public void GetValidApplicationsAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, object userState) {
            if ((this.onBeginGetValidApplicationsDelegate == null)) {
                this.onBeginGetValidApplicationsDelegate = new BeginOperationDelegate(this.OnBeginGetValidApplications);
            }
            if ((this.onEndGetValidApplicationsDelegate == null)) {
                this.onEndGetValidApplicationsDelegate = new EndOperationDelegate(this.OnEndGetValidApplications);
            }
            if ((this.onGetValidApplicationsCompletedDelegate == null)) {
                this.onGetValidApplicationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetValidApplicationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetValidApplicationsDelegate, new object[] {
                        RequestData,
                        IdentityId}, this.onEndGetValidApplicationsDelegate, this.onGetValidApplicationsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<string> GetAuthenticationUnitsForTransactionGroupIdentity(Ansi378Test.BiometricService.RequestData RequestData, string transactionCode, System.Guid identityId) {
            return base.Channel.GetAuthenticationUnitsForTransactionGroupIdentity(RequestData, transactionCode, identityId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAuthenticationUnitsForTransactionGroupIdentity(Ansi378Test.BiometricService.RequestData RequestData, string transactionCode, System.Guid identityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAuthenticationUnitsForTransactionGroupIdentity(RequestData, transactionCode, identityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<string> EndGetAuthenticationUnitsForTransactionGroupIdentity(System.IAsyncResult result) {
            return base.Channel.EndGetAuthenticationUnitsForTransactionGroupIdentity(result);
        }
        
        private System.IAsyncResult OnBeginGetAuthenticationUnitsForTransactionGroupIdentity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            string transactionCode = ((string)(inValues[1]));
            System.Guid identityId = ((System.Guid)(inValues[2]));
            return this.BeginGetAuthenticationUnitsForTransactionGroupIdentity(RequestData, transactionCode, identityId, callback, asyncState);
        }
        
        private object[] OnEndGetAuthenticationUnitsForTransactionGroupIdentity(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = this.EndGetAuthenticationUnitsForTransactionGroupIdentity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAuthenticationUnitsForTransactionGroupIdentityCompleted(object state) {
            if ((this.GetAuthenticationUnitsForTransactionGroupIdentityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAuthenticationUnitsForTransactionGroupIdentityCompleted(this, new GetAuthenticationUnitsForTransactionGroupIdentityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAuthenticationUnitsForTransactionGroupIdentityAsync(Ansi378Test.BiometricService.RequestData RequestData, string transactionCode, System.Guid identityId) {
            this.GetAuthenticationUnitsForTransactionGroupIdentityAsync(RequestData, transactionCode, identityId, null);
        }
        
        public void GetAuthenticationUnitsForTransactionGroupIdentityAsync(Ansi378Test.BiometricService.RequestData RequestData, string transactionCode, System.Guid identityId, object userState) {
            if ((this.onBeginGetAuthenticationUnitsForTransactionGroupIdentityDelegate == null)) {
                this.onBeginGetAuthenticationUnitsForTransactionGroupIdentityDelegate = new BeginOperationDelegate(this.OnBeginGetAuthenticationUnitsForTransactionGroupIdentity);
            }
            if ((this.onEndGetAuthenticationUnitsForTransactionGroupIdentityDelegate == null)) {
                this.onEndGetAuthenticationUnitsForTransactionGroupIdentityDelegate = new EndOperationDelegate(this.OnEndGetAuthenticationUnitsForTransactionGroupIdentity);
            }
            if ((this.onGetAuthenticationUnitsForTransactionGroupIdentityCompletedDelegate == null)) {
                this.onGetAuthenticationUnitsForTransactionGroupIdentityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAuthenticationUnitsForTransactionGroupIdentityCompleted);
            }
            base.InvokeAsync(this.onBeginGetAuthenticationUnitsForTransactionGroupIdentityDelegate, new object[] {
                        RequestData,
                        transactionCode,
                        identityId}, this.onEndGetAuthenticationUnitsForTransactionGroupIdentityDelegate, this.onGetAuthenticationUnitsForTransactionGroupIdentityCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionSecurityData> GetTransactionSecurityDetails(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId) {
            return base.Channel.GetTransactionSecurityDetails(RequestData, IdentityId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTransactionSecurityDetails(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTransactionSecurityDetails(RequestData, IdentityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionSecurityData> EndGetTransactionSecurityDetails(System.IAsyncResult result) {
            return base.Channel.EndGetTransactionSecurityDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetTransactionSecurityDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            System.Guid IdentityId = ((System.Guid)(inValues[1]));
            return this.BeginGetTransactionSecurityDetails(RequestData, IdentityId, callback, asyncState);
        }
        
        private object[] OnEndGetTransactionSecurityDetails(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionSecurityData> retVal = this.EndGetTransactionSecurityDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTransactionSecurityDetailsCompleted(object state) {
            if ((this.GetTransactionSecurityDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTransactionSecurityDetailsCompleted(this, new GetTransactionSecurityDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTransactionSecurityDetailsAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId) {
            this.GetTransactionSecurityDetailsAsync(RequestData, IdentityId, null);
        }
        
        public void GetTransactionSecurityDetailsAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, object userState) {
            if ((this.onBeginGetTransactionSecurityDetailsDelegate == null)) {
                this.onBeginGetTransactionSecurityDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetTransactionSecurityDetails);
            }
            if ((this.onEndGetTransactionSecurityDetailsDelegate == null)) {
                this.onEndGetTransactionSecurityDetailsDelegate = new EndOperationDelegate(this.OnEndGetTransactionSecurityDetails);
            }
            if ((this.onGetTransactionSecurityDetailsCompletedDelegate == null)) {
                this.onGetTransactionSecurityDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTransactionSecurityDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTransactionSecurityDetailsDelegate, new object[] {
                        RequestData,
                        IdentityId}, this.onEndGetTransactionSecurityDetailsDelegate, this.onGetTransactionSecurityDetailsCompletedDelegate, userState);
        }
        
        public byte[] GetSourceImageAsJpeg(Ansi378Test.BiometricService.RequestData requestData, string t24id) {
            return base.Channel.GetSourceImageAsJpeg(requestData, t24id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSourceImageAsJpeg(Ansi378Test.BiometricService.RequestData requestData, string t24id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSourceImageAsJpeg(requestData, t24id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndGetSourceImageAsJpeg(System.IAsyncResult result) {
            return base.Channel.EndGetSourceImageAsJpeg(result);
        }
        
        private System.IAsyncResult OnBeginGetSourceImageAsJpeg(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData requestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            string t24id = ((string)(inValues[1]));
            return this.BeginGetSourceImageAsJpeg(requestData, t24id, callback, asyncState);
        }
        
        private object[] OnEndGetSourceImageAsJpeg(System.IAsyncResult result) {
            byte[] retVal = this.EndGetSourceImageAsJpeg(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSourceImageAsJpegCompleted(object state) {
            if ((this.GetSourceImageAsJpegCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSourceImageAsJpegCompleted(this, new GetSourceImageAsJpegCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSourceImageAsJpegAsync(Ansi378Test.BiometricService.RequestData requestData, string t24id) {
            this.GetSourceImageAsJpegAsync(requestData, t24id, null);
        }
        
        public void GetSourceImageAsJpegAsync(Ansi378Test.BiometricService.RequestData requestData, string t24id, object userState) {
            if ((this.onBeginGetSourceImageAsJpegDelegate == null)) {
                this.onBeginGetSourceImageAsJpegDelegate = new BeginOperationDelegate(this.OnBeginGetSourceImageAsJpeg);
            }
            if ((this.onEndGetSourceImageAsJpegDelegate == null)) {
                this.onEndGetSourceImageAsJpegDelegate = new EndOperationDelegate(this.OnEndGetSourceImageAsJpeg);
            }
            if ((this.onGetSourceImageAsJpegCompletedDelegate == null)) {
                this.onGetSourceImageAsJpegCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSourceImageAsJpegCompleted);
            }
            base.InvokeAsync(this.onBeginGetSourceImageAsJpegDelegate, new object[] {
                        requestData,
                        t24id}, this.onEndGetSourceImageAsJpegDelegate, this.onGetSourceImageAsJpegCompletedDelegate, userState);
        }
        
        public void RemoveAuthenticationLevel(Ansi378Test.BiometricService.RequestData RequestData, int Id) {
            base.Channel.RemoveAuthenticationLevel(RequestData, Id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveAuthenticationLevel(Ansi378Test.BiometricService.RequestData RequestData, int Id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveAuthenticationLevel(RequestData, Id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveAuthenticationLevel(System.IAsyncResult result) {
            base.Channel.EndRemoveAuthenticationLevel(result);
        }
        
        private System.IAsyncResult OnBeginRemoveAuthenticationLevel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            int Id = ((int)(inValues[1]));
            return this.BeginRemoveAuthenticationLevel(RequestData, Id, callback, asyncState);
        }
        
        private object[] OnEndRemoveAuthenticationLevel(System.IAsyncResult result) {
            this.EndRemoveAuthenticationLevel(result);
            return null;
        }
        
        private void OnRemoveAuthenticationLevelCompleted(object state) {
            if ((this.RemoveAuthenticationLevelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveAuthenticationLevelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveAuthenticationLevelAsync(Ansi378Test.BiometricService.RequestData RequestData, int Id) {
            this.RemoveAuthenticationLevelAsync(RequestData, Id, null);
        }
        
        public void RemoveAuthenticationLevelAsync(Ansi378Test.BiometricService.RequestData RequestData, int Id, object userState) {
            if ((this.onBeginRemoveAuthenticationLevelDelegate == null)) {
                this.onBeginRemoveAuthenticationLevelDelegate = new BeginOperationDelegate(this.OnBeginRemoveAuthenticationLevel);
            }
            if ((this.onEndRemoveAuthenticationLevelDelegate == null)) {
                this.onEndRemoveAuthenticationLevelDelegate = new EndOperationDelegate(this.OnEndRemoveAuthenticationLevel);
            }
            if ((this.onRemoveAuthenticationLevelCompletedDelegate == null)) {
                this.onRemoveAuthenticationLevelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveAuthenticationLevelCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveAuthenticationLevelDelegate, new object[] {
                        RequestData,
                        Id}, this.onEndRemoveAuthenticationLevelDelegate, this.onRemoveAuthenticationLevelCompletedDelegate, userState);
        }
        
        public void UpdateAuthenticationLevel(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.AuthenticationLevelData AuthenticationLevelData) {
            base.Channel.UpdateAuthenticationLevel(RequestData, AuthenticationLevelData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateAuthenticationLevel(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.AuthenticationLevelData AuthenticationLevelData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateAuthenticationLevel(RequestData, AuthenticationLevelData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateAuthenticationLevel(System.IAsyncResult result) {
            base.Channel.EndUpdateAuthenticationLevel(result);
        }
        
        private System.IAsyncResult OnBeginUpdateAuthenticationLevel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            Ansi378Test.BiometricService.AuthenticationLevelData AuthenticationLevelData = ((Ansi378Test.BiometricService.AuthenticationLevelData)(inValues[1]));
            return this.BeginUpdateAuthenticationLevel(RequestData, AuthenticationLevelData, callback, asyncState);
        }
        
        private object[] OnEndUpdateAuthenticationLevel(System.IAsyncResult result) {
            this.EndUpdateAuthenticationLevel(result);
            return null;
        }
        
        private void OnUpdateAuthenticationLevelCompleted(object state) {
            if ((this.UpdateAuthenticationLevelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAuthenticationLevelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAuthenticationLevelAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.AuthenticationLevelData AuthenticationLevelData) {
            this.UpdateAuthenticationLevelAsync(RequestData, AuthenticationLevelData, null);
        }
        
        public void UpdateAuthenticationLevelAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.AuthenticationLevelData AuthenticationLevelData, object userState) {
            if ((this.onBeginUpdateAuthenticationLevelDelegate == null)) {
                this.onBeginUpdateAuthenticationLevelDelegate = new BeginOperationDelegate(this.OnBeginUpdateAuthenticationLevel);
            }
            if ((this.onEndUpdateAuthenticationLevelDelegate == null)) {
                this.onEndUpdateAuthenticationLevelDelegate = new EndOperationDelegate(this.OnEndUpdateAuthenticationLevel);
            }
            if ((this.onUpdateAuthenticationLevelCompletedDelegate == null)) {
                this.onUpdateAuthenticationLevelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAuthenticationLevelCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAuthenticationLevelDelegate, new object[] {
                        RequestData,
                        AuthenticationLevelData}, this.onEndUpdateAuthenticationLevelDelegate, this.onUpdateAuthenticationLevelCompletedDelegate, userState);
        }
        
        public void AddAuthenticationLevelUnit(Ansi378Test.BiometricService.RequestData RequestData, int Id, string Code) {
            base.Channel.AddAuthenticationLevelUnit(RequestData, Id, Code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddAuthenticationLevelUnit(Ansi378Test.BiometricService.RequestData RequestData, int Id, string Code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddAuthenticationLevelUnit(RequestData, Id, Code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddAuthenticationLevelUnit(System.IAsyncResult result) {
            base.Channel.EndAddAuthenticationLevelUnit(result);
        }
        
        private System.IAsyncResult OnBeginAddAuthenticationLevelUnit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            int Id = ((int)(inValues[1]));
            string Code = ((string)(inValues[2]));
            return this.BeginAddAuthenticationLevelUnit(RequestData, Id, Code, callback, asyncState);
        }
        
        private object[] OnEndAddAuthenticationLevelUnit(System.IAsyncResult result) {
            this.EndAddAuthenticationLevelUnit(result);
            return null;
        }
        
        private void OnAddAuthenticationLevelUnitCompleted(object state) {
            if ((this.AddAuthenticationLevelUnitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddAuthenticationLevelUnitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAuthenticationLevelUnitAsync(Ansi378Test.BiometricService.RequestData RequestData, int Id, string Code) {
            this.AddAuthenticationLevelUnitAsync(RequestData, Id, Code, null);
        }
        
        public void AddAuthenticationLevelUnitAsync(Ansi378Test.BiometricService.RequestData RequestData, int Id, string Code, object userState) {
            if ((this.onBeginAddAuthenticationLevelUnitDelegate == null)) {
                this.onBeginAddAuthenticationLevelUnitDelegate = new BeginOperationDelegate(this.OnBeginAddAuthenticationLevelUnit);
            }
            if ((this.onEndAddAuthenticationLevelUnitDelegate == null)) {
                this.onEndAddAuthenticationLevelUnitDelegate = new EndOperationDelegate(this.OnEndAddAuthenticationLevelUnit);
            }
            if ((this.onAddAuthenticationLevelUnitCompletedDelegate == null)) {
                this.onAddAuthenticationLevelUnitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddAuthenticationLevelUnitCompleted);
            }
            base.InvokeAsync(this.onBeginAddAuthenticationLevelUnitDelegate, new object[] {
                        RequestData,
                        Id,
                        Code}, this.onEndAddAuthenticationLevelUnitDelegate, this.onAddAuthenticationLevelUnitCompletedDelegate, userState);
        }
        
        public void RemoveAuthenticationLevelUnit(Ansi378Test.BiometricService.RequestData RequestData, int Id, string Code) {
            base.Channel.RemoveAuthenticationLevelUnit(RequestData, Id, Code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveAuthenticationLevelUnit(Ansi378Test.BiometricService.RequestData RequestData, int Id, string Code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveAuthenticationLevelUnit(RequestData, Id, Code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveAuthenticationLevelUnit(System.IAsyncResult result) {
            base.Channel.EndRemoveAuthenticationLevelUnit(result);
        }
        
        private System.IAsyncResult OnBeginRemoveAuthenticationLevelUnit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            int Id = ((int)(inValues[1]));
            string Code = ((string)(inValues[2]));
            return this.BeginRemoveAuthenticationLevelUnit(RequestData, Id, Code, callback, asyncState);
        }
        
        private object[] OnEndRemoveAuthenticationLevelUnit(System.IAsyncResult result) {
            this.EndRemoveAuthenticationLevelUnit(result);
            return null;
        }
        
        private void OnRemoveAuthenticationLevelUnitCompleted(object state) {
            if ((this.RemoveAuthenticationLevelUnitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveAuthenticationLevelUnitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveAuthenticationLevelUnitAsync(Ansi378Test.BiometricService.RequestData RequestData, int Id, string Code) {
            this.RemoveAuthenticationLevelUnitAsync(RequestData, Id, Code, null);
        }
        
        public void RemoveAuthenticationLevelUnitAsync(Ansi378Test.BiometricService.RequestData RequestData, int Id, string Code, object userState) {
            if ((this.onBeginRemoveAuthenticationLevelUnitDelegate == null)) {
                this.onBeginRemoveAuthenticationLevelUnitDelegate = new BeginOperationDelegate(this.OnBeginRemoveAuthenticationLevelUnit);
            }
            if ((this.onEndRemoveAuthenticationLevelUnitDelegate == null)) {
                this.onEndRemoveAuthenticationLevelUnitDelegate = new EndOperationDelegate(this.OnEndRemoveAuthenticationLevelUnit);
            }
            if ((this.onRemoveAuthenticationLevelUnitCompletedDelegate == null)) {
                this.onRemoveAuthenticationLevelUnitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveAuthenticationLevelUnitCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveAuthenticationLevelUnitDelegate, new object[] {
                        RequestData,
                        Id,
                        Code}, this.onEndRemoveAuthenticationLevelUnitDelegate, this.onRemoveAuthenticationLevelUnitCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTypeData> GetAuthenticationTypes(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData Query) {
            return base.Channel.GetAuthenticationTypes(RequestData, Query);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAuthenticationTypes(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData Query, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAuthenticationTypes(RequestData, Query, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTypeData> EndGetAuthenticationTypes(System.IAsyncResult result) {
            return base.Channel.EndGetAuthenticationTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetAuthenticationTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            Ansi378Test.BiometricService.MySqlQueryData Query = ((Ansi378Test.BiometricService.MySqlQueryData)(inValues[1]));
            return this.BeginGetAuthenticationTypes(RequestData, Query, callback, asyncState);
        }
        
        private object[] OnEndGetAuthenticationTypes(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTypeData> retVal = this.EndGetAuthenticationTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAuthenticationTypesCompleted(object state) {
            if ((this.GetAuthenticationTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAuthenticationTypesCompleted(this, new GetAuthenticationTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAuthenticationTypesAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData Query) {
            this.GetAuthenticationTypesAsync(RequestData, Query, null);
        }
        
        public void GetAuthenticationTypesAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData Query, object userState) {
            if ((this.onBeginGetAuthenticationTypesDelegate == null)) {
                this.onBeginGetAuthenticationTypesDelegate = new BeginOperationDelegate(this.OnBeginGetAuthenticationTypes);
            }
            if ((this.onEndGetAuthenticationTypesDelegate == null)) {
                this.onEndGetAuthenticationTypesDelegate = new EndOperationDelegate(this.OnEndGetAuthenticationTypes);
            }
            if ((this.onGetAuthenticationTypesCompletedDelegate == null)) {
                this.onGetAuthenticationTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAuthenticationTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAuthenticationTypesDelegate, new object[] {
                        RequestData,
                        Query}, this.onEndGetAuthenticationTypesDelegate, this.onGetAuthenticationTypesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationUnitData> GetAuthenticationUnits(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData Query) {
            return base.Channel.GetAuthenticationUnits(RequestData, Query);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAuthenticationUnits(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData Query, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAuthenticationUnits(RequestData, Query, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationUnitData> EndGetAuthenticationUnits(System.IAsyncResult result) {
            return base.Channel.EndGetAuthenticationUnits(result);
        }
        
        private System.IAsyncResult OnBeginGetAuthenticationUnits(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            Ansi378Test.BiometricService.MySqlQueryData Query = ((Ansi378Test.BiometricService.MySqlQueryData)(inValues[1]));
            return this.BeginGetAuthenticationUnits(RequestData, Query, callback, asyncState);
        }
        
        private object[] OnEndGetAuthenticationUnits(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationUnitData> retVal = this.EndGetAuthenticationUnits(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAuthenticationUnitsCompleted(object state) {
            if ((this.GetAuthenticationUnitsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAuthenticationUnitsCompleted(this, new GetAuthenticationUnitsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAuthenticationUnitsAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData Query) {
            this.GetAuthenticationUnitsAsync(RequestData, Query, null);
        }
        
        public void GetAuthenticationUnitsAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData Query, object userState) {
            if ((this.onBeginGetAuthenticationUnitsDelegate == null)) {
                this.onBeginGetAuthenticationUnitsDelegate = new BeginOperationDelegate(this.OnBeginGetAuthenticationUnits);
            }
            if ((this.onEndGetAuthenticationUnitsDelegate == null)) {
                this.onEndGetAuthenticationUnitsDelegate = new EndOperationDelegate(this.OnEndGetAuthenticationUnits);
            }
            if ((this.onGetAuthenticationUnitsCompletedDelegate == null)) {
                this.onGetAuthenticationUnitsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAuthenticationUnitsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAuthenticationUnitsDelegate, new object[] {
                        RequestData,
                        Query}, this.onEndGetAuthenticationUnitsDelegate, this.onGetAuthenticationUnitsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.EnrollmentData> GetEnrollments(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData Query) {
            return base.Channel.GetEnrollments(RequestData, Query);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetEnrollments(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData Query, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEnrollments(RequestData, Query, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.EnrollmentData> EndGetEnrollments(System.IAsyncResult result) {
            return base.Channel.EndGetEnrollments(result);
        }
        
        private System.IAsyncResult OnBeginGetEnrollments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            Ansi378Test.BiometricService.MySqlQueryData Query = ((Ansi378Test.BiometricService.MySqlQueryData)(inValues[1]));
            return this.BeginGetEnrollments(RequestData, Query, callback, asyncState);
        }
        
        private object[] OnEndGetEnrollments(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.EnrollmentData> retVal = this.EndGetEnrollments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEnrollmentsCompleted(object state) {
            if ((this.GetEnrollmentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEnrollmentsCompleted(this, new GetEnrollmentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEnrollmentsAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData Query) {
            this.GetEnrollmentsAsync(RequestData, Query, null);
        }
        
        public void GetEnrollmentsAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData Query, object userState) {
            if ((this.onBeginGetEnrollmentsDelegate == null)) {
                this.onBeginGetEnrollmentsDelegate = new BeginOperationDelegate(this.OnBeginGetEnrollments);
            }
            if ((this.onEndGetEnrollmentsDelegate == null)) {
                this.onEndGetEnrollmentsDelegate = new EndOperationDelegate(this.OnEndGetEnrollments);
            }
            if ((this.onGetEnrollmentsCompletedDelegate == null)) {
                this.onGetEnrollmentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEnrollmentsCompleted);
            }
            base.InvokeAsync(this.onBeginGetEnrollmentsDelegate, new object[] {
                        RequestData,
                        Query}, this.onEndGetEnrollmentsDelegate, this.onGetEnrollmentsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<string> GetEnrolledAuthenticationTypes(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId) {
            return base.Channel.GetEnrolledAuthenticationTypes(RequestData, IdentityId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetEnrolledAuthenticationTypes(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEnrolledAuthenticationTypes(RequestData, IdentityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<string> EndGetEnrolledAuthenticationTypes(System.IAsyncResult result) {
            return base.Channel.EndGetEnrolledAuthenticationTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetEnrolledAuthenticationTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            System.Guid IdentityId = ((System.Guid)(inValues[1]));
            return this.BeginGetEnrolledAuthenticationTypes(RequestData, IdentityId, callback, asyncState);
        }
        
        private object[] OnEndGetEnrolledAuthenticationTypes(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = this.EndGetEnrolledAuthenticationTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEnrolledAuthenticationTypesCompleted(object state) {
            if ((this.GetEnrolledAuthenticationTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEnrolledAuthenticationTypesCompleted(this, new GetEnrolledAuthenticationTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEnrolledAuthenticationTypesAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId) {
            this.GetEnrolledAuthenticationTypesAsync(RequestData, IdentityId, null);
        }
        
        public void GetEnrolledAuthenticationTypesAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, object userState) {
            if ((this.onBeginGetEnrolledAuthenticationTypesDelegate == null)) {
                this.onBeginGetEnrolledAuthenticationTypesDelegate = new BeginOperationDelegate(this.OnBeginGetEnrolledAuthenticationTypes);
            }
            if ((this.onEndGetEnrolledAuthenticationTypesDelegate == null)) {
                this.onEndGetEnrolledAuthenticationTypesDelegate = new EndOperationDelegate(this.OnEndGetEnrolledAuthenticationTypes);
            }
            if ((this.onGetEnrolledAuthenticationTypesCompletedDelegate == null)) {
                this.onGetEnrolledAuthenticationTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEnrolledAuthenticationTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetEnrolledAuthenticationTypesDelegate, new object[] {
                        RequestData,
                        IdentityId}, this.onEndGetEnrolledAuthenticationTypesDelegate, this.onGetEnrolledAuthenticationTypesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTemplateData> GetAuthenticationTemplates(Ansi378Test.BiometricService.RequestData RequestData, System.Guid EnrollmentId) {
            return base.Channel.GetAuthenticationTemplates(RequestData, EnrollmentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAuthenticationTemplates(Ansi378Test.BiometricService.RequestData RequestData, System.Guid EnrollmentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAuthenticationTemplates(RequestData, EnrollmentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTemplateData> EndGetAuthenticationTemplates(System.IAsyncResult result) {
            return base.Channel.EndGetAuthenticationTemplates(result);
        }
        
        private System.IAsyncResult OnBeginGetAuthenticationTemplates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            System.Guid EnrollmentId = ((System.Guid)(inValues[1]));
            return this.BeginGetAuthenticationTemplates(RequestData, EnrollmentId, callback, asyncState);
        }
        
        private object[] OnEndGetAuthenticationTemplates(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTemplateData> retVal = this.EndGetAuthenticationTemplates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAuthenticationTemplatesCompleted(object state) {
            if ((this.GetAuthenticationTemplatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAuthenticationTemplatesCompleted(this, new GetAuthenticationTemplatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAuthenticationTemplatesAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid EnrollmentId) {
            this.GetAuthenticationTemplatesAsync(RequestData, EnrollmentId, null);
        }
        
        public void GetAuthenticationTemplatesAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid EnrollmentId, object userState) {
            if ((this.onBeginGetAuthenticationTemplatesDelegate == null)) {
                this.onBeginGetAuthenticationTemplatesDelegate = new BeginOperationDelegate(this.OnBeginGetAuthenticationTemplates);
            }
            if ((this.onEndGetAuthenticationTemplatesDelegate == null)) {
                this.onEndGetAuthenticationTemplatesDelegate = new EndOperationDelegate(this.OnEndGetAuthenticationTemplates);
            }
            if ((this.onGetAuthenticationTemplatesCompletedDelegate == null)) {
                this.onGetAuthenticationTemplatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAuthenticationTemplatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAuthenticationTemplatesDelegate, new object[] {
                        RequestData,
                        EnrollmentId}, this.onEndGetAuthenticationTemplatesDelegate, this.onGetAuthenticationTemplatesCompletedDelegate, userState);
        }
        
        public bool IsCorrectAuthenticationTemplate(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, Ansi378Test.BiometricService.AuthenticationTemplateData Template) {
            return base.Channel.IsCorrectAuthenticationTemplate(RequestData, IdentityId, Template);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsCorrectAuthenticationTemplate(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, Ansi378Test.BiometricService.AuthenticationTemplateData Template, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsCorrectAuthenticationTemplate(RequestData, IdentityId, Template, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsCorrectAuthenticationTemplate(System.IAsyncResult result) {
            return base.Channel.EndIsCorrectAuthenticationTemplate(result);
        }
        
        private System.IAsyncResult OnBeginIsCorrectAuthenticationTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            System.Guid IdentityId = ((System.Guid)(inValues[1]));
            Ansi378Test.BiometricService.AuthenticationTemplateData Template = ((Ansi378Test.BiometricService.AuthenticationTemplateData)(inValues[2]));
            return this.BeginIsCorrectAuthenticationTemplate(RequestData, IdentityId, Template, callback, asyncState);
        }
        
        private object[] OnEndIsCorrectAuthenticationTemplate(System.IAsyncResult result) {
            bool retVal = this.EndIsCorrectAuthenticationTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsCorrectAuthenticationTemplateCompleted(object state) {
            if ((this.IsCorrectAuthenticationTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsCorrectAuthenticationTemplateCompleted(this, new IsCorrectAuthenticationTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsCorrectAuthenticationTemplateAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, Ansi378Test.BiometricService.AuthenticationTemplateData Template) {
            this.IsCorrectAuthenticationTemplateAsync(RequestData, IdentityId, Template, null);
        }
        
        public void IsCorrectAuthenticationTemplateAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, Ansi378Test.BiometricService.AuthenticationTemplateData Template, object userState) {
            if ((this.onBeginIsCorrectAuthenticationTemplateDelegate == null)) {
                this.onBeginIsCorrectAuthenticationTemplateDelegate = new BeginOperationDelegate(this.OnBeginIsCorrectAuthenticationTemplate);
            }
            if ((this.onEndIsCorrectAuthenticationTemplateDelegate == null)) {
                this.onEndIsCorrectAuthenticationTemplateDelegate = new EndOperationDelegate(this.OnEndIsCorrectAuthenticationTemplate);
            }
            if ((this.onIsCorrectAuthenticationTemplateCompletedDelegate == null)) {
                this.onIsCorrectAuthenticationTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsCorrectAuthenticationTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginIsCorrectAuthenticationTemplateDelegate, new object[] {
                        RequestData,
                        IdentityId,
                        Template}, this.onEndIsCorrectAuthenticationTemplateDelegate, this.onIsCorrectAuthenticationTemplateCompletedDelegate, userState);
        }
        
        public System.Guid AddEnrollment(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.EnrollmentData EnrollmentData, System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTemplateData> Templates) {
            return base.Channel.AddEnrollment(RequestData, EnrollmentData, Templates);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddEnrollment(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.EnrollmentData EnrollmentData, System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTemplateData> Templates, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddEnrollment(RequestData, EnrollmentData, Templates, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Guid EndAddEnrollment(System.IAsyncResult result) {
            return base.Channel.EndAddEnrollment(result);
        }
        
        private System.IAsyncResult OnBeginAddEnrollment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            Ansi378Test.BiometricService.EnrollmentData EnrollmentData = ((Ansi378Test.BiometricService.EnrollmentData)(inValues[1]));
            System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTemplateData> Templates = ((System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTemplateData>)(inValues[2]));
            return this.BeginAddEnrollment(RequestData, EnrollmentData, Templates, callback, asyncState);
        }
        
        private object[] OnEndAddEnrollment(System.IAsyncResult result) {
            System.Guid retVal = this.EndAddEnrollment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddEnrollmentCompleted(object state) {
            if ((this.AddEnrollmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddEnrollmentCompleted(this, new AddEnrollmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddEnrollmentAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.EnrollmentData EnrollmentData, System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTemplateData> Templates) {
            this.AddEnrollmentAsync(RequestData, EnrollmentData, Templates, null);
        }
        
        public void AddEnrollmentAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.EnrollmentData EnrollmentData, System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationTemplateData> Templates, object userState) {
            if ((this.onBeginAddEnrollmentDelegate == null)) {
                this.onBeginAddEnrollmentDelegate = new BeginOperationDelegate(this.OnBeginAddEnrollment);
            }
            if ((this.onEndAddEnrollmentDelegate == null)) {
                this.onEndAddEnrollmentDelegate = new EndOperationDelegate(this.OnEndAddEnrollment);
            }
            if ((this.onAddEnrollmentCompletedDelegate == null)) {
                this.onAddEnrollmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddEnrollmentCompleted);
            }
            base.InvokeAsync(this.onBeginAddEnrollmentDelegate, new object[] {
                        RequestData,
                        EnrollmentData,
                        Templates}, this.onEndAddEnrollmentDelegate, this.onAddEnrollmentCompletedDelegate, userState);
        }
        
        public Ansi378Test.BiometricService.IdentityData FindIdentityFromTemplate(byte[] template, string AuthenticationUnitCode) {
            return base.Channel.FindIdentityFromTemplate(template, AuthenticationUnitCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFindIdentityFromTemplate(byte[] template, string AuthenticationUnitCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindIdentityFromTemplate(template, AuthenticationUnitCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Ansi378Test.BiometricService.IdentityData EndFindIdentityFromTemplate(System.IAsyncResult result) {
            return base.Channel.EndFindIdentityFromTemplate(result);
        }
        
        private System.IAsyncResult OnBeginFindIdentityFromTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] template = ((byte[])(inValues[0]));
            string AuthenticationUnitCode = ((string)(inValues[1]));
            return this.BeginFindIdentityFromTemplate(template, AuthenticationUnitCode, callback, asyncState);
        }
        
        private object[] OnEndFindIdentityFromTemplate(System.IAsyncResult result) {
            Ansi378Test.BiometricService.IdentityData retVal = this.EndFindIdentityFromTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindIdentityFromTemplateCompleted(object state) {
            if ((this.FindIdentityFromTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindIdentityFromTemplateCompleted(this, new FindIdentityFromTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindIdentityFromTemplateAsync(byte[] template, string AuthenticationUnitCode) {
            this.FindIdentityFromTemplateAsync(template, AuthenticationUnitCode, null);
        }
        
        public void FindIdentityFromTemplateAsync(byte[] template, string AuthenticationUnitCode, object userState) {
            if ((this.onBeginFindIdentityFromTemplateDelegate == null)) {
                this.onBeginFindIdentityFromTemplateDelegate = new BeginOperationDelegate(this.OnBeginFindIdentityFromTemplate);
            }
            if ((this.onEndFindIdentityFromTemplateDelegate == null)) {
                this.onEndFindIdentityFromTemplateDelegate = new EndOperationDelegate(this.OnEndFindIdentityFromTemplate);
            }
            if ((this.onFindIdentityFromTemplateCompletedDelegate == null)) {
                this.onFindIdentityFromTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindIdentityFromTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginFindIdentityFromTemplateDelegate, new object[] {
                        template,
                        AuthenticationUnitCode}, this.onEndFindIdentityFromTemplateDelegate, this.onFindIdentityFromTemplateCompletedDelegate, userState);
        }
        
        public bool CheckEnrollmentDuplicates(System.Guid EnrollmentId) {
            return base.Channel.CheckEnrollmentDuplicates(EnrollmentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckEnrollmentDuplicates(System.Guid EnrollmentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckEnrollmentDuplicates(EnrollmentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCheckEnrollmentDuplicates(System.IAsyncResult result) {
            return base.Channel.EndCheckEnrollmentDuplicates(result);
        }
        
        private System.IAsyncResult OnBeginCheckEnrollmentDuplicates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid EnrollmentId = ((System.Guid)(inValues[0]));
            return this.BeginCheckEnrollmentDuplicates(EnrollmentId, callback, asyncState);
        }
        
        private object[] OnEndCheckEnrollmentDuplicates(System.IAsyncResult result) {
            bool retVal = this.EndCheckEnrollmentDuplicates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckEnrollmentDuplicatesCompleted(object state) {
            if ((this.CheckEnrollmentDuplicatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckEnrollmentDuplicatesCompleted(this, new CheckEnrollmentDuplicatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckEnrollmentDuplicatesAsync(System.Guid EnrollmentId) {
            this.CheckEnrollmentDuplicatesAsync(EnrollmentId, null);
        }
        
        public void CheckEnrollmentDuplicatesAsync(System.Guid EnrollmentId, object userState) {
            if ((this.onBeginCheckEnrollmentDuplicatesDelegate == null)) {
                this.onBeginCheckEnrollmentDuplicatesDelegate = new BeginOperationDelegate(this.OnBeginCheckEnrollmentDuplicates);
            }
            if ((this.onEndCheckEnrollmentDuplicatesDelegate == null)) {
                this.onEndCheckEnrollmentDuplicatesDelegate = new EndOperationDelegate(this.OnEndCheckEnrollmentDuplicates);
            }
            if ((this.onCheckEnrollmentDuplicatesCompletedDelegate == null)) {
                this.onCheckEnrollmentDuplicatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckEnrollmentDuplicatesCompleted);
            }
            base.InvokeAsync(this.onBeginCheckEnrollmentDuplicatesDelegate, new object[] {
                        EnrollmentId}, this.onEndCheckEnrollmentDuplicatesDelegate, this.onCheckEnrollmentDuplicatesCompletedDelegate, userState);
        }
        
        public bool EnrollmentDuplicateSearch(System.Guid EnrollmentId) {
            return base.Channel.EnrollmentDuplicateSearch(EnrollmentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEnrollmentDuplicateSearch(System.Guid EnrollmentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnrollmentDuplicateSearch(EnrollmentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndEnrollmentDuplicateSearch(System.IAsyncResult result) {
            return base.Channel.EndEnrollmentDuplicateSearch(result);
        }
        
        private System.IAsyncResult OnBeginEnrollmentDuplicateSearch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid EnrollmentId = ((System.Guid)(inValues[0]));
            return this.BeginEnrollmentDuplicateSearch(EnrollmentId, callback, asyncState);
        }
        
        private object[] OnEndEnrollmentDuplicateSearch(System.IAsyncResult result) {
            bool retVal = this.EndEnrollmentDuplicateSearch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnrollmentDuplicateSearchCompleted(object state) {
            if ((this.EnrollmentDuplicateSearchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnrollmentDuplicateSearchCompleted(this, new EnrollmentDuplicateSearchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnrollmentDuplicateSearchAsync(System.Guid EnrollmentId) {
            this.EnrollmentDuplicateSearchAsync(EnrollmentId, null);
        }
        
        public void EnrollmentDuplicateSearchAsync(System.Guid EnrollmentId, object userState) {
            if ((this.onBeginEnrollmentDuplicateSearchDelegate == null)) {
                this.onBeginEnrollmentDuplicateSearchDelegate = new BeginOperationDelegate(this.OnBeginEnrollmentDuplicateSearch);
            }
            if ((this.onEndEnrollmentDuplicateSearchDelegate == null)) {
                this.onEndEnrollmentDuplicateSearchDelegate = new EndOperationDelegate(this.OnEndEnrollmentDuplicateSearch);
            }
            if ((this.onEnrollmentDuplicateSearchCompletedDelegate == null)) {
                this.onEnrollmentDuplicateSearchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnrollmentDuplicateSearchCompleted);
            }
            base.InvokeAsync(this.onBeginEnrollmentDuplicateSearchDelegate, new object[] {
                        EnrollmentId}, this.onEndEnrollmentDuplicateSearchDelegate, this.onEnrollmentDuplicateSearchCompletedDelegate, userState);
        }
        
        public byte[] GetAnsi378Template(System.Guid IdentityId, string AuthenticationUnitCode) {
            return base.Channel.GetAnsi378Template(IdentityId, AuthenticationUnitCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAnsi378Template(System.Guid IdentityId, string AuthenticationUnitCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnsi378Template(IdentityId, AuthenticationUnitCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndGetAnsi378Template(System.IAsyncResult result) {
            return base.Channel.EndGetAnsi378Template(result);
        }
        
        private System.IAsyncResult OnBeginGetAnsi378Template(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid IdentityId = ((System.Guid)(inValues[0]));
            string AuthenticationUnitCode = ((string)(inValues[1]));
            return this.BeginGetAnsi378Template(IdentityId, AuthenticationUnitCode, callback, asyncState);
        }
        
        private object[] OnEndGetAnsi378Template(System.IAsyncResult result) {
            byte[] retVal = this.EndGetAnsi378Template(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnsi378TemplateCompleted(object state) {
            if ((this.GetAnsi378TemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnsi378TemplateCompleted(this, new GetAnsi378TemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnsi378TemplateAsync(System.Guid IdentityId, string AuthenticationUnitCode) {
            this.GetAnsi378TemplateAsync(IdentityId, AuthenticationUnitCode, null);
        }
        
        public void GetAnsi378TemplateAsync(System.Guid IdentityId, string AuthenticationUnitCode, object userState) {
            if ((this.onBeginGetAnsi378TemplateDelegate == null)) {
                this.onBeginGetAnsi378TemplateDelegate = new BeginOperationDelegate(this.OnBeginGetAnsi378Template);
            }
            if ((this.onEndGetAnsi378TemplateDelegate == null)) {
                this.onEndGetAnsi378TemplateDelegate = new EndOperationDelegate(this.OnEndGetAnsi378Template);
            }
            if ((this.onGetAnsi378TemplateCompletedDelegate == null)) {
                this.onGetAnsi378TemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnsi378TemplateCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnsi378TemplateDelegate, new object[] {
                        IdentityId,
                        AuthenticationUnitCode}, this.onEndGetAnsi378TemplateDelegate, this.onGetAnsi378TemplateCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData> GetTransactions(Ansi378Test.BiometricService.RequestData RequestData) {
            return base.Channel.GetTransactions(RequestData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTransactions(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTransactions(RequestData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData> EndGetTransactions(System.IAsyncResult result) {
            return base.Channel.EndGetTransactions(result);
        }
        
        private System.IAsyncResult OnBeginGetTransactions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            return this.BeginGetTransactions(RequestData, callback, asyncState);
        }
        
        private object[] OnEndGetTransactions(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData> retVal = this.EndGetTransactions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTransactionsCompleted(object state) {
            if ((this.GetTransactionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTransactionsCompleted(this, new GetTransactionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTransactionsAsync(Ansi378Test.BiometricService.RequestData RequestData) {
            this.GetTransactionsAsync(RequestData, null);
        }
        
        public void GetTransactionsAsync(Ansi378Test.BiometricService.RequestData RequestData, object userState) {
            if ((this.onBeginGetTransactionsDelegate == null)) {
                this.onBeginGetTransactionsDelegate = new BeginOperationDelegate(this.OnBeginGetTransactions);
            }
            if ((this.onEndGetTransactionsDelegate == null)) {
                this.onEndGetTransactionsDelegate = new EndOperationDelegate(this.OnEndGetTransactions);
            }
            if ((this.onGetTransactionsCompletedDelegate == null)) {
                this.onGetTransactionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTransactionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTransactionsDelegate, new object[] {
                        RequestData}, this.onEndGetTransactionsDelegate, this.onGetTransactionsCompletedDelegate, userState);
        }
        
        public void UpdateTransaction(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.TransactionData TransactionData) {
            base.Channel.UpdateTransaction(RequestData, TransactionData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateTransaction(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.TransactionData TransactionData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateTransaction(RequestData, TransactionData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateTransaction(System.IAsyncResult result) {
            base.Channel.EndUpdateTransaction(result);
        }
        
        private System.IAsyncResult OnBeginUpdateTransaction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            Ansi378Test.BiometricService.TransactionData TransactionData = ((Ansi378Test.BiometricService.TransactionData)(inValues[1]));
            return this.BeginUpdateTransaction(RequestData, TransactionData, callback, asyncState);
        }
        
        private object[] OnEndUpdateTransaction(System.IAsyncResult result) {
            this.EndUpdateTransaction(result);
            return null;
        }
        
        private void OnUpdateTransactionCompleted(object state) {
            if ((this.UpdateTransactionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateTransactionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateTransactionAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.TransactionData TransactionData) {
            this.UpdateTransactionAsync(RequestData, TransactionData, null);
        }
        
        public void UpdateTransactionAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.TransactionData TransactionData, object userState) {
            if ((this.onBeginUpdateTransactionDelegate == null)) {
                this.onBeginUpdateTransactionDelegate = new BeginOperationDelegate(this.OnBeginUpdateTransaction);
            }
            if ((this.onEndUpdateTransactionDelegate == null)) {
                this.onEndUpdateTransactionDelegate = new EndOperationDelegate(this.OnEndUpdateTransaction);
            }
            if ((this.onUpdateTransactionCompletedDelegate == null)) {
                this.onUpdateTransactionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateTransactionCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateTransactionDelegate, new object[] {
                        RequestData,
                        TransactionData}, this.onEndUpdateTransactionDelegate, this.onUpdateTransactionCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData> GetIdentityGroupTransactions(Ansi378Test.BiometricService.RequestData RequestData, int GroupId) {
            return base.Channel.GetIdentityGroupTransactions(RequestData, GroupId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIdentityGroupTransactions(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIdentityGroupTransactions(RequestData, GroupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData> EndGetIdentityGroupTransactions(System.IAsyncResult result) {
            return base.Channel.EndGetIdentityGroupTransactions(result);
        }
        
        private System.IAsyncResult OnBeginGetIdentityGroupTransactions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            int GroupId = ((int)(inValues[1]));
            return this.BeginGetIdentityGroupTransactions(RequestData, GroupId, callback, asyncState);
        }
        
        private object[] OnEndGetIdentityGroupTransactions(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData> retVal = this.EndGetIdentityGroupTransactions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIdentityGroupTransactionsCompleted(object state) {
            if ((this.GetIdentityGroupTransactionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIdentityGroupTransactionsCompleted(this, new GetIdentityGroupTransactionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIdentityGroupTransactionsAsync(Ansi378Test.BiometricService.RequestData RequestData, int GroupId) {
            this.GetIdentityGroupTransactionsAsync(RequestData, GroupId, null);
        }
        
        public void GetIdentityGroupTransactionsAsync(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, object userState) {
            if ((this.onBeginGetIdentityGroupTransactionsDelegate == null)) {
                this.onBeginGetIdentityGroupTransactionsDelegate = new BeginOperationDelegate(this.OnBeginGetIdentityGroupTransactions);
            }
            if ((this.onEndGetIdentityGroupTransactionsDelegate == null)) {
                this.onEndGetIdentityGroupTransactionsDelegate = new EndOperationDelegate(this.OnEndGetIdentityGroupTransactions);
            }
            if ((this.onGetIdentityGroupTransactionsCompletedDelegate == null)) {
                this.onGetIdentityGroupTransactionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIdentityGroupTransactionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetIdentityGroupTransactionsDelegate, new object[] {
                        RequestData,
                        GroupId}, this.onEndGetIdentityGroupTransactionsDelegate, this.onGetIdentityGroupTransactionsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData> GetIdentityTransactions(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId) {
            return base.Channel.GetIdentityTransactions(RequestData, IdentityId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIdentityTransactions(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIdentityTransactions(RequestData, IdentityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData> EndGetIdentityTransactions(System.IAsyncResult result) {
            return base.Channel.EndGetIdentityTransactions(result);
        }
        
        private System.IAsyncResult OnBeginGetIdentityTransactions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            System.Guid IdentityId = ((System.Guid)(inValues[1]));
            return this.BeginGetIdentityTransactions(RequestData, IdentityId, callback, asyncState);
        }
        
        private object[] OnEndGetIdentityTransactions(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.TransactionData> retVal = this.EndGetIdentityTransactions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIdentityTransactionsCompleted(object state) {
            if ((this.GetIdentityTransactionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIdentityTransactionsCompleted(this, new GetIdentityTransactionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIdentityTransactionsAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId) {
            this.GetIdentityTransactionsAsync(RequestData, IdentityId, null);
        }
        
        public void GetIdentityTransactionsAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, object userState) {
            if ((this.onBeginGetIdentityTransactionsDelegate == null)) {
                this.onBeginGetIdentityTransactionsDelegate = new BeginOperationDelegate(this.OnBeginGetIdentityTransactions);
            }
            if ((this.onEndGetIdentityTransactionsDelegate == null)) {
                this.onEndGetIdentityTransactionsDelegate = new EndOperationDelegate(this.OnEndGetIdentityTransactions);
            }
            if ((this.onGetIdentityTransactionsCompletedDelegate == null)) {
                this.onGetIdentityTransactionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIdentityTransactionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetIdentityTransactionsDelegate, new object[] {
                        RequestData,
                        IdentityId}, this.onEndGetIdentityTransactionsDelegate, this.onGetIdentityTransactionsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.ReportData> GetReports(Ansi378Test.BiometricService.RequestData RequestData) {
            return base.Channel.GetReports(RequestData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetReports(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReports(RequestData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.ReportData> EndGetReports(System.IAsyncResult result) {
            return base.Channel.EndGetReports(result);
        }
        
        private System.IAsyncResult OnBeginGetReports(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            return this.BeginGetReports(RequestData, callback, asyncState);
        }
        
        private object[] OnEndGetReports(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.ReportData> retVal = this.EndGetReports(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReportsCompleted(object state) {
            if ((this.GetReportsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReportsCompleted(this, new GetReportsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReportsAsync(Ansi378Test.BiometricService.RequestData RequestData) {
            this.GetReportsAsync(RequestData, null);
        }
        
        public void GetReportsAsync(Ansi378Test.BiometricService.RequestData RequestData, object userState) {
            if ((this.onBeginGetReportsDelegate == null)) {
                this.onBeginGetReportsDelegate = new BeginOperationDelegate(this.OnBeginGetReports);
            }
            if ((this.onEndGetReportsDelegate == null)) {
                this.onEndGetReportsDelegate = new EndOperationDelegate(this.OnEndGetReports);
            }
            if ((this.onGetReportsCompletedDelegate == null)) {
                this.onGetReportsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportsCompleted);
            }
            base.InvokeAsync(this.onBeginGetReportsDelegate, new object[] {
                        RequestData}, this.onEndGetReportsDelegate, this.onGetReportsCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetReportData(Ansi378Test.BiometricService.RequestData RequestData, string storedProc) {
            return base.Channel.GetReportData(RequestData, storedProc);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetReportData(Ansi378Test.BiometricService.RequestData RequestData, string storedProc, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReportData(RequestData, storedProc, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetReportData(System.IAsyncResult result) {
            return base.Channel.EndGetReportData(result);
        }
        
        private System.IAsyncResult OnBeginGetReportData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            string storedProc = ((string)(inValues[1]));
            return this.BeginGetReportData(RequestData, storedProc, callback, asyncState);
        }
        
        private object[] OnEndGetReportData(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetReportData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReportDataCompleted(object state) {
            if ((this.GetReportDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReportDataCompleted(this, new GetReportDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReportDataAsync(Ansi378Test.BiometricService.RequestData RequestData, string storedProc) {
            this.GetReportDataAsync(RequestData, storedProc, null);
        }
        
        public void GetReportDataAsync(Ansi378Test.BiometricService.RequestData RequestData, string storedProc, object userState) {
            if ((this.onBeginGetReportDataDelegate == null)) {
                this.onBeginGetReportDataDelegate = new BeginOperationDelegate(this.OnBeginGetReportData);
            }
            if ((this.onEndGetReportDataDelegate == null)) {
                this.onEndGetReportDataDelegate = new EndOperationDelegate(this.OnEndGetReportData);
            }
            if ((this.onGetReportDataCompletedDelegate == null)) {
                this.onGetReportDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetReportDataDelegate, new object[] {
                        RequestData,
                        storedProc}, this.onEndGetReportDataDelegate, this.onGetReportDataCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetReportDataWithRange(Ansi378Test.BiometricService.RequestData RequestData, string storedProc, string startdate, string enddate) {
            return base.Channel.GetReportDataWithRange(RequestData, storedProc, startdate, enddate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetReportDataWithRange(Ansi378Test.BiometricService.RequestData RequestData, string storedProc, string startdate, string enddate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReportDataWithRange(RequestData, storedProc, startdate, enddate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetReportDataWithRange(System.IAsyncResult result) {
            return base.Channel.EndGetReportDataWithRange(result);
        }
        
        private System.IAsyncResult OnBeginGetReportDataWithRange(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            string storedProc = ((string)(inValues[1]));
            string startdate = ((string)(inValues[2]));
            string enddate = ((string)(inValues[3]));
            return this.BeginGetReportDataWithRange(RequestData, storedProc, startdate, enddate, callback, asyncState);
        }
        
        private object[] OnEndGetReportDataWithRange(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetReportDataWithRange(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReportDataWithRangeCompleted(object state) {
            if ((this.GetReportDataWithRangeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReportDataWithRangeCompleted(this, new GetReportDataWithRangeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReportDataWithRangeAsync(Ansi378Test.BiometricService.RequestData RequestData, string storedProc, string startdate, string enddate) {
            this.GetReportDataWithRangeAsync(RequestData, storedProc, startdate, enddate, null);
        }
        
        public void GetReportDataWithRangeAsync(Ansi378Test.BiometricService.RequestData RequestData, string storedProc, string startdate, string enddate, object userState) {
            if ((this.onBeginGetReportDataWithRangeDelegate == null)) {
                this.onBeginGetReportDataWithRangeDelegate = new BeginOperationDelegate(this.OnBeginGetReportDataWithRange);
            }
            if ((this.onEndGetReportDataWithRangeDelegate == null)) {
                this.onEndGetReportDataWithRangeDelegate = new EndOperationDelegate(this.OnEndGetReportDataWithRange);
            }
            if ((this.onGetReportDataWithRangeCompletedDelegate == null)) {
                this.onGetReportDataWithRangeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportDataWithRangeCompleted);
            }
            base.InvokeAsync(this.onBeginGetReportDataWithRangeDelegate, new object[] {
                        RequestData,
                        storedProc,
                        startdate,
                        enddate}, this.onEndGetReportDataWithRangeDelegate, this.onGetReportDataWithRangeCompletedDelegate, userState);
        }
        
        public Ansi378Test.BiometricService.SettingsData GetSettings() {
            return base.Channel.GetSettings();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSettings(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSettings(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Ansi378Test.BiometricService.SettingsData EndGetSettings(System.IAsyncResult result) {
            return base.Channel.EndGetSettings(result);
        }
        
        private System.IAsyncResult OnBeginGetSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSettings(callback, asyncState);
        }
        
        private object[] OnEndGetSettings(System.IAsyncResult result) {
            Ansi378Test.BiometricService.SettingsData retVal = this.EndGetSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSettingsCompleted(object state) {
            if ((this.GetSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSettingsCompleted(this, new GetSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSettingsAsync() {
            this.GetSettingsAsync(null);
        }
        
        public void GetSettingsAsync(object userState) {
            if ((this.onBeginGetSettingsDelegate == null)) {
                this.onBeginGetSettingsDelegate = new BeginOperationDelegate(this.OnBeginGetSettings);
            }
            if ((this.onEndGetSettingsDelegate == null)) {
                this.onEndGetSettingsDelegate = new EndOperationDelegate(this.OnEndGetSettings);
            }
            if ((this.onGetSettingsCompletedDelegate == null)) {
                this.onGetSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSettingsDelegate, null, this.onEndGetSettingsDelegate, this.onGetSettingsCompletedDelegate, userState);
        }
        
        public void UpdateSettings(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.SettingsData SettingsData) {
            base.Channel.UpdateSettings(RequestData, SettingsData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateSettings(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.SettingsData SettingsData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSettings(RequestData, SettingsData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateSettings(System.IAsyncResult result) {
            base.Channel.EndUpdateSettings(result);
        }
        
        private System.IAsyncResult OnBeginUpdateSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            Ansi378Test.BiometricService.SettingsData SettingsData = ((Ansi378Test.BiometricService.SettingsData)(inValues[1]));
            return this.BeginUpdateSettings(RequestData, SettingsData, callback, asyncState);
        }
        
        private object[] OnEndUpdateSettings(System.IAsyncResult result) {
            this.EndUpdateSettings(result);
            return null;
        }
        
        private void OnUpdateSettingsCompleted(object state) {
            if ((this.UpdateSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSettingsAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.SettingsData SettingsData) {
            this.UpdateSettingsAsync(RequestData, SettingsData, null);
        }
        
        public void UpdateSettingsAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.SettingsData SettingsData, object userState) {
            if ((this.onBeginUpdateSettingsDelegate == null)) {
                this.onBeginUpdateSettingsDelegate = new BeginOperationDelegate(this.OnBeginUpdateSettings);
            }
            if ((this.onEndUpdateSettingsDelegate == null)) {
                this.onEndUpdateSettingsDelegate = new EndOperationDelegate(this.OnEndUpdateSettings);
            }
            if ((this.onUpdateSettingsCompletedDelegate == null)) {
                this.onUpdateSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSettingsDelegate, new object[] {
                        RequestData,
                        SettingsData}, this.onEndUpdateSettingsDelegate, this.onUpdateSettingsCompletedDelegate, userState);
        }
        
        public void AuditEvent(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.AuditEventTypes Type, string Message) {
            base.Channel.AuditEvent(RequestData, Type, Message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAuditEvent(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.AuditEventTypes Type, string Message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuditEvent(RequestData, Type, Message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAuditEvent(System.IAsyncResult result) {
            base.Channel.EndAuditEvent(result);
        }
        
        private System.IAsyncResult OnBeginAuditEvent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            Ansi378Test.BiometricService.AuditEventTypes Type = ((Ansi378Test.BiometricService.AuditEventTypes)(inValues[1]));
            string Message = ((string)(inValues[2]));
            return this.BeginAuditEvent(RequestData, Type, Message, callback, asyncState);
        }
        
        private object[] OnEndAuditEvent(System.IAsyncResult result) {
            this.EndAuditEvent(result);
            return null;
        }
        
        private void OnAuditEventCompleted(object state) {
            if ((this.AuditEventCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuditEventCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuditEventAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.AuditEventTypes Type, string Message) {
            this.AuditEventAsync(RequestData, Type, Message, null);
        }
        
        public void AuditEventAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.AuditEventTypes Type, string Message, object userState) {
            if ((this.onBeginAuditEventDelegate == null)) {
                this.onBeginAuditEventDelegate = new BeginOperationDelegate(this.OnBeginAuditEvent);
            }
            if ((this.onEndAuditEventDelegate == null)) {
                this.onEndAuditEventDelegate = new EndOperationDelegate(this.OnEndAuditEvent);
            }
            if ((this.onAuditEventCompletedDelegate == null)) {
                this.onAuditEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuditEventCompleted);
            }
            base.InvokeAsync(this.onBeginAuditEventDelegate, new object[] {
                        RequestData,
                        Type,
                        Message}, this.onEndAuditEventDelegate, this.onAuditEventCompletedDelegate, userState);
        }
        
        public void LogDebugMessage(Ansi378Test.BiometricService.RequestData RequestData, string Message) {
            base.Channel.LogDebugMessage(RequestData, Message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogDebugMessage(Ansi378Test.BiometricService.RequestData RequestData, string Message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogDebugMessage(RequestData, Message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLogDebugMessage(System.IAsyncResult result) {
            base.Channel.EndLogDebugMessage(result);
        }
        
        private System.IAsyncResult OnBeginLogDebugMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            string Message = ((string)(inValues[1]));
            return this.BeginLogDebugMessage(RequestData, Message, callback, asyncState);
        }
        
        private object[] OnEndLogDebugMessage(System.IAsyncResult result) {
            this.EndLogDebugMessage(result);
            return null;
        }
        
        private void OnLogDebugMessageCompleted(object state) {
            if ((this.LogDebugMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogDebugMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogDebugMessageAsync(Ansi378Test.BiometricService.RequestData RequestData, string Message) {
            this.LogDebugMessageAsync(RequestData, Message, null);
        }
        
        public void LogDebugMessageAsync(Ansi378Test.BiometricService.RequestData RequestData, string Message, object userState) {
            if ((this.onBeginLogDebugMessageDelegate == null)) {
                this.onBeginLogDebugMessageDelegate = new BeginOperationDelegate(this.OnBeginLogDebugMessage);
            }
            if ((this.onEndLogDebugMessageDelegate == null)) {
                this.onEndLogDebugMessageDelegate = new EndOperationDelegate(this.OnEndLogDebugMessage);
            }
            if ((this.onLogDebugMessageCompletedDelegate == null)) {
                this.onLogDebugMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogDebugMessageCompleted);
            }
            base.InvokeAsync(this.onBeginLogDebugMessageDelegate, new object[] {
                        RequestData,
                        Message}, this.onEndLogDebugMessageDelegate, this.onLogDebugMessageCompletedDelegate, userState);
        }
        
        public void LogInfoMessage(Ansi378Test.BiometricService.RequestData RequestData, string Message) {
            base.Channel.LogInfoMessage(RequestData, Message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogInfoMessage(Ansi378Test.BiometricService.RequestData RequestData, string Message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogInfoMessage(RequestData, Message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLogInfoMessage(System.IAsyncResult result) {
            base.Channel.EndLogInfoMessage(result);
        }
        
        private System.IAsyncResult OnBeginLogInfoMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            string Message = ((string)(inValues[1]));
            return this.BeginLogInfoMessage(RequestData, Message, callback, asyncState);
        }
        
        private object[] OnEndLogInfoMessage(System.IAsyncResult result) {
            this.EndLogInfoMessage(result);
            return null;
        }
        
        private void OnLogInfoMessageCompleted(object state) {
            if ((this.LogInfoMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogInfoMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogInfoMessageAsync(Ansi378Test.BiometricService.RequestData RequestData, string Message) {
            this.LogInfoMessageAsync(RequestData, Message, null);
        }
        
        public void LogInfoMessageAsync(Ansi378Test.BiometricService.RequestData RequestData, string Message, object userState) {
            if ((this.onBeginLogInfoMessageDelegate == null)) {
                this.onBeginLogInfoMessageDelegate = new BeginOperationDelegate(this.OnBeginLogInfoMessage);
            }
            if ((this.onEndLogInfoMessageDelegate == null)) {
                this.onEndLogInfoMessageDelegate = new EndOperationDelegate(this.OnEndLogInfoMessage);
            }
            if ((this.onLogInfoMessageCompletedDelegate == null)) {
                this.onLogInfoMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogInfoMessageCompleted);
            }
            base.InvokeAsync(this.onBeginLogInfoMessageDelegate, new object[] {
                        RequestData,
                        Message}, this.onEndLogInfoMessageDelegate, this.onLogInfoMessageCompletedDelegate, userState);
        }
        
        public void LogWarningMessage(Ansi378Test.BiometricService.RequestData RequestData, string Message) {
            base.Channel.LogWarningMessage(RequestData, Message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogWarningMessage(Ansi378Test.BiometricService.RequestData RequestData, string Message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogWarningMessage(RequestData, Message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLogWarningMessage(System.IAsyncResult result) {
            base.Channel.EndLogWarningMessage(result);
        }
        
        private System.IAsyncResult OnBeginLogWarningMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            string Message = ((string)(inValues[1]));
            return this.BeginLogWarningMessage(RequestData, Message, callback, asyncState);
        }
        
        private object[] OnEndLogWarningMessage(System.IAsyncResult result) {
            this.EndLogWarningMessage(result);
            return null;
        }
        
        private void OnLogWarningMessageCompleted(object state) {
            if ((this.LogWarningMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogWarningMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogWarningMessageAsync(Ansi378Test.BiometricService.RequestData RequestData, string Message) {
            this.LogWarningMessageAsync(RequestData, Message, null);
        }
        
        public void LogWarningMessageAsync(Ansi378Test.BiometricService.RequestData RequestData, string Message, object userState) {
            if ((this.onBeginLogWarningMessageDelegate == null)) {
                this.onBeginLogWarningMessageDelegate = new BeginOperationDelegate(this.OnBeginLogWarningMessage);
            }
            if ((this.onEndLogWarningMessageDelegate == null)) {
                this.onEndLogWarningMessageDelegate = new EndOperationDelegate(this.OnEndLogWarningMessage);
            }
            if ((this.onLogWarningMessageCompletedDelegate == null)) {
                this.onLogWarningMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogWarningMessageCompleted);
            }
            base.InvokeAsync(this.onBeginLogWarningMessageDelegate, new object[] {
                        RequestData,
                        Message}, this.onEndLogWarningMessageDelegate, this.onLogWarningMessageCompletedDelegate, userState);
        }
        
        public void LogErrorMessage(Ansi378Test.BiometricService.RequestData RequestData, string Message) {
            base.Channel.LogErrorMessage(RequestData, Message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogErrorMessage(Ansi378Test.BiometricService.RequestData RequestData, string Message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogErrorMessage(RequestData, Message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLogErrorMessage(System.IAsyncResult result) {
            base.Channel.EndLogErrorMessage(result);
        }
        
        private System.IAsyncResult OnBeginLogErrorMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            string Message = ((string)(inValues[1]));
            return this.BeginLogErrorMessage(RequestData, Message, callback, asyncState);
        }
        
        private object[] OnEndLogErrorMessage(System.IAsyncResult result) {
            this.EndLogErrorMessage(result);
            return null;
        }
        
        private void OnLogErrorMessageCompleted(object state) {
            if ((this.LogErrorMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogErrorMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogErrorMessageAsync(Ansi378Test.BiometricService.RequestData RequestData, string Message) {
            this.LogErrorMessageAsync(RequestData, Message, null);
        }
        
        public void LogErrorMessageAsync(Ansi378Test.BiometricService.RequestData RequestData, string Message, object userState) {
            if ((this.onBeginLogErrorMessageDelegate == null)) {
                this.onBeginLogErrorMessageDelegate = new BeginOperationDelegate(this.OnBeginLogErrorMessage);
            }
            if ((this.onEndLogErrorMessageDelegate == null)) {
                this.onEndLogErrorMessageDelegate = new EndOperationDelegate(this.OnEndLogErrorMessage);
            }
            if ((this.onLogErrorMessageCompletedDelegate == null)) {
                this.onLogErrorMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogErrorMessageCompleted);
            }
            base.InvokeAsync(this.onBeginLogErrorMessageDelegate, new object[] {
                        RequestData,
                        Message}, this.onEndLogErrorMessageDelegate, this.onLogErrorMessageCompletedDelegate, userState);
        }
        
        public void LogErrorMessageWithException(Ansi378Test.BiometricService.RequestData RequestData, string Message, System.Exception ex) {
            base.Channel.LogErrorMessageWithException(RequestData, Message, ex);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogErrorMessageWithException(Ansi378Test.BiometricService.RequestData RequestData, string Message, System.Exception ex, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogErrorMessageWithException(RequestData, Message, ex, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLogErrorMessageWithException(System.IAsyncResult result) {
            base.Channel.EndLogErrorMessageWithException(result);
        }
        
        private System.IAsyncResult OnBeginLogErrorMessageWithException(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            string Message = ((string)(inValues[1]));
            System.Exception ex = ((System.Exception)(inValues[2]));
            return this.BeginLogErrorMessageWithException(RequestData, Message, ex, callback, asyncState);
        }
        
        private object[] OnEndLogErrorMessageWithException(System.IAsyncResult result) {
            this.EndLogErrorMessageWithException(result);
            return null;
        }
        
        private void OnLogErrorMessageWithExceptionCompleted(object state) {
            if ((this.LogErrorMessageWithExceptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogErrorMessageWithExceptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogErrorMessageWithExceptionAsync(Ansi378Test.BiometricService.RequestData RequestData, string Message, System.Exception ex) {
            this.LogErrorMessageWithExceptionAsync(RequestData, Message, ex, null);
        }
        
        public void LogErrorMessageWithExceptionAsync(Ansi378Test.BiometricService.RequestData RequestData, string Message, System.Exception ex, object userState) {
            if ((this.onBeginLogErrorMessageWithExceptionDelegate == null)) {
                this.onBeginLogErrorMessageWithExceptionDelegate = new BeginOperationDelegate(this.OnBeginLogErrorMessageWithException);
            }
            if ((this.onEndLogErrorMessageWithExceptionDelegate == null)) {
                this.onEndLogErrorMessageWithExceptionDelegate = new EndOperationDelegate(this.OnEndLogErrorMessageWithException);
            }
            if ((this.onLogErrorMessageWithExceptionCompletedDelegate == null)) {
                this.onLogErrorMessageWithExceptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogErrorMessageWithExceptionCompleted);
            }
            base.InvokeAsync(this.onBeginLogErrorMessageWithExceptionDelegate, new object[] {
                        RequestData,
                        Message,
                        ex}, this.onEndLogErrorMessageWithExceptionDelegate, this.onLogErrorMessageWithExceptionCompletedDelegate, userState);
        }
        
        public bool CheckApplicationAccess(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, string ApplicationCode) {
            return base.Channel.CheckApplicationAccess(RequestData, IdentityId, ApplicationCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckApplicationAccess(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, string ApplicationCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckApplicationAccess(RequestData, IdentityId, ApplicationCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCheckApplicationAccess(System.IAsyncResult result) {
            return base.Channel.EndCheckApplicationAccess(result);
        }
        
        private System.IAsyncResult OnBeginCheckApplicationAccess(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            System.Guid IdentityId = ((System.Guid)(inValues[1]));
            string ApplicationCode = ((string)(inValues[2]));
            return this.BeginCheckApplicationAccess(RequestData, IdentityId, ApplicationCode, callback, asyncState);
        }
        
        private object[] OnEndCheckApplicationAccess(System.IAsyncResult result) {
            bool retVal = this.EndCheckApplicationAccess(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckApplicationAccessCompleted(object state) {
            if ((this.CheckApplicationAccessCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckApplicationAccessCompleted(this, new CheckApplicationAccessCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckApplicationAccessAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, string ApplicationCode) {
            this.CheckApplicationAccessAsync(RequestData, IdentityId, ApplicationCode, null);
        }
        
        public void CheckApplicationAccessAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, string ApplicationCode, object userState) {
            if ((this.onBeginCheckApplicationAccessDelegate == null)) {
                this.onBeginCheckApplicationAccessDelegate = new BeginOperationDelegate(this.OnBeginCheckApplicationAccess);
            }
            if ((this.onEndCheckApplicationAccessDelegate == null)) {
                this.onEndCheckApplicationAccessDelegate = new EndOperationDelegate(this.OnEndCheckApplicationAccess);
            }
            if ((this.onCheckApplicationAccessCompletedDelegate == null)) {
                this.onCheckApplicationAccessCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckApplicationAccessCompleted);
            }
            base.InvokeAsync(this.onBeginCheckApplicationAccessDelegate, new object[] {
                        RequestData,
                        IdentityId,
                        ApplicationCode}, this.onEndCheckApplicationAccessDelegate, this.onCheckApplicationAccessCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.CountryData> GetCountries(Ansi378Test.BiometricService.RequestData RequestData) {
            return base.Channel.GetCountries(RequestData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCountries(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCountries(RequestData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.CountryData> EndGetCountries(System.IAsyncResult result) {
            return base.Channel.EndGetCountries(result);
        }
        
        private System.IAsyncResult OnBeginGetCountries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            return this.BeginGetCountries(RequestData, callback, asyncState);
        }
        
        private object[] OnEndGetCountries(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.CountryData> retVal = this.EndGetCountries(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCountriesCompleted(object state) {
            if ((this.GetCountriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCountriesCompleted(this, new GetCountriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCountriesAsync(Ansi378Test.BiometricService.RequestData RequestData) {
            this.GetCountriesAsync(RequestData, null);
        }
        
        public void GetCountriesAsync(Ansi378Test.BiometricService.RequestData RequestData, object userState) {
            if ((this.onBeginGetCountriesDelegate == null)) {
                this.onBeginGetCountriesDelegate = new BeginOperationDelegate(this.OnBeginGetCountries);
            }
            if ((this.onEndGetCountriesDelegate == null)) {
                this.onEndGetCountriesDelegate = new EndOperationDelegate(this.OnEndGetCountries);
            }
            if ((this.onGetCountriesCompletedDelegate == null)) {
                this.onGetCountriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCountriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCountriesDelegate, new object[] {
                        RequestData}, this.onEndGetCountriesDelegate, this.onGetCountriesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.RoleData> GetRoles(Ansi378Test.BiometricService.RequestData RequestData) {
            return base.Channel.GetRoles(RequestData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRoles(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRoles(RequestData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.RoleData> EndGetRoles(System.IAsyncResult result) {
            return base.Channel.EndGetRoles(result);
        }
        
        private System.IAsyncResult OnBeginGetRoles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            return this.BeginGetRoles(RequestData, callback, asyncState);
        }
        
        private object[] OnEndGetRoles(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.RoleData> retVal = this.EndGetRoles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRolesCompleted(object state) {
            if ((this.GetRolesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRolesCompleted(this, new GetRolesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRolesAsync(Ansi378Test.BiometricService.RequestData RequestData) {
            this.GetRolesAsync(RequestData, null);
        }
        
        public void GetRolesAsync(Ansi378Test.BiometricService.RequestData RequestData, object userState) {
            if ((this.onBeginGetRolesDelegate == null)) {
                this.onBeginGetRolesDelegate = new BeginOperationDelegate(this.OnBeginGetRoles);
            }
            if ((this.onEndGetRolesDelegate == null)) {
                this.onEndGetRolesDelegate = new EndOperationDelegate(this.OnEndGetRoles);
            }
            if ((this.onGetRolesCompletedDelegate == null)) {
                this.onGetRolesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRolesCompleted);
            }
            base.InvokeAsync(this.onBeginGetRolesDelegate, new object[] {
                        RequestData}, this.onEndGetRolesDelegate, this.onGetRolesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.ApplicationData> GetApplications(Ansi378Test.BiometricService.RequestData RequestData) {
            return base.Channel.GetApplications(RequestData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetApplications(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetApplications(RequestData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.ApplicationData> EndGetApplications(System.IAsyncResult result) {
            return base.Channel.EndGetApplications(result);
        }
        
        private System.IAsyncResult OnBeginGetApplications(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            return this.BeginGetApplications(RequestData, callback, asyncState);
        }
        
        private object[] OnEndGetApplications(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.ApplicationData> retVal = this.EndGetApplications(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetApplicationsCompleted(object state) {
            if ((this.GetApplicationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetApplicationsCompleted(this, new GetApplicationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetApplicationsAsync(Ansi378Test.BiometricService.RequestData RequestData) {
            this.GetApplicationsAsync(RequestData, null);
        }
        
        public void GetApplicationsAsync(Ansi378Test.BiometricService.RequestData RequestData, object userState) {
            if ((this.onBeginGetApplicationsDelegate == null)) {
                this.onBeginGetApplicationsDelegate = new BeginOperationDelegate(this.OnBeginGetApplications);
            }
            if ((this.onEndGetApplicationsDelegate == null)) {
                this.onEndGetApplicationsDelegate = new EndOperationDelegate(this.OnEndGetApplications);
            }
            if ((this.onGetApplicationsCompletedDelegate == null)) {
                this.onGetApplicationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetApplicationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetApplicationsDelegate, new object[] {
                        RequestData}, this.onEndGetApplicationsDelegate, this.onGetApplicationsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.ApplicationTypeData> GetApplicationTypes(Ansi378Test.BiometricService.RequestData RequestData) {
            return base.Channel.GetApplicationTypes(RequestData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetApplicationTypes(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetApplicationTypes(RequestData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.ApplicationTypeData> EndGetApplicationTypes(System.IAsyncResult result) {
            return base.Channel.EndGetApplicationTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetApplicationTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            return this.BeginGetApplicationTypes(RequestData, callback, asyncState);
        }
        
        private object[] OnEndGetApplicationTypes(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.ApplicationTypeData> retVal = this.EndGetApplicationTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetApplicationTypesCompleted(object state) {
            if ((this.GetApplicationTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetApplicationTypesCompleted(this, new GetApplicationTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetApplicationTypesAsync(Ansi378Test.BiometricService.RequestData RequestData) {
            this.GetApplicationTypesAsync(RequestData, null);
        }
        
        public void GetApplicationTypesAsync(Ansi378Test.BiometricService.RequestData RequestData, object userState) {
            if ((this.onBeginGetApplicationTypesDelegate == null)) {
                this.onBeginGetApplicationTypesDelegate = new BeginOperationDelegate(this.OnBeginGetApplicationTypes);
            }
            if ((this.onEndGetApplicationTypesDelegate == null)) {
                this.onEndGetApplicationTypesDelegate = new EndOperationDelegate(this.OnEndGetApplicationTypes);
            }
            if ((this.onGetApplicationTypesCompletedDelegate == null)) {
                this.onGetApplicationTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetApplicationTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetApplicationTypesDelegate, new object[] {
                        RequestData}, this.onEndGetApplicationTypesDelegate, this.onGetApplicationTypesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData> GetIdentities(out int TotalRecords, Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData QueryData) {
            return base.Channel.GetIdentities(out TotalRecords, RequestData, QueryData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIdentities(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData QueryData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIdentities(RequestData, QueryData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData> EndGetIdentities(out int TotalRecords, System.IAsyncResult result) {
            return base.Channel.EndGetIdentities(out TotalRecords, result);
        }
        
        private System.IAsyncResult OnBeginGetIdentities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            Ansi378Test.BiometricService.MySqlQueryData QueryData = ((Ansi378Test.BiometricService.MySqlQueryData)(inValues[1]));
            return this.BeginGetIdentities(RequestData, QueryData, callback, asyncState);
        }
        
        private object[] OnEndGetIdentities(System.IAsyncResult result) {
            int TotalRecords = this.GetDefaultValueForInitialization<int>();
            System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData> retVal = this.EndGetIdentities(out TotalRecords, result);
            return new object[] {
                    TotalRecords,
                    retVal};
        }
        
        private void OnGetIdentitiesCompleted(object state) {
            if ((this.GetIdentitiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIdentitiesCompleted(this, new GetIdentitiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIdentitiesAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData QueryData) {
            this.GetIdentitiesAsync(RequestData, QueryData, null);
        }
        
        public void GetIdentitiesAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData QueryData, object userState) {
            if ((this.onBeginGetIdentitiesDelegate == null)) {
                this.onBeginGetIdentitiesDelegate = new BeginOperationDelegate(this.OnBeginGetIdentities);
            }
            if ((this.onEndGetIdentitiesDelegate == null)) {
                this.onEndGetIdentitiesDelegate = new EndOperationDelegate(this.OnEndGetIdentities);
            }
            if ((this.onGetIdentitiesCompletedDelegate == null)) {
                this.onGetIdentitiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIdentitiesCompleted);
            }
            base.InvokeAsync(this.onBeginGetIdentitiesDelegate, new object[] {
                        RequestData,
                        QueryData}, this.onEndGetIdentitiesDelegate, this.onGetIdentitiesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData> GetAllIdentities(out int TotalRecords) {
            return base.Channel.GetAllIdentities(out TotalRecords);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllIdentities(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllIdentities(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData> EndGetAllIdentities(out int TotalRecords, System.IAsyncResult result) {
            return base.Channel.EndGetAllIdentities(out TotalRecords, result);
        }
        
        private System.IAsyncResult OnBeginGetAllIdentities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllIdentities(callback, asyncState);
        }
        
        private object[] OnEndGetAllIdentities(System.IAsyncResult result) {
            int TotalRecords = this.GetDefaultValueForInitialization<int>();
            System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData> retVal = this.EndGetAllIdentities(out TotalRecords, result);
            return new object[] {
                    TotalRecords,
                    retVal};
        }
        
        private void OnGetAllIdentitiesCompleted(object state) {
            if ((this.GetAllIdentitiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllIdentitiesCompleted(this, new GetAllIdentitiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllIdentitiesAsync() {
            this.GetAllIdentitiesAsync(null);
        }
        
        public void GetAllIdentitiesAsync(object userState) {
            if ((this.onBeginGetAllIdentitiesDelegate == null)) {
                this.onBeginGetAllIdentitiesDelegate = new BeginOperationDelegate(this.OnBeginGetAllIdentities);
            }
            if ((this.onEndGetAllIdentitiesDelegate == null)) {
                this.onEndGetAllIdentitiesDelegate = new EndOperationDelegate(this.OnEndGetAllIdentities);
            }
            if ((this.onGetAllIdentitiesCompletedDelegate == null)) {
                this.onGetAllIdentitiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllIdentitiesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllIdentitiesDelegate, null, this.onEndGetAllIdentitiesDelegate, this.onGetAllIdentitiesCompletedDelegate, userState);
        }
        
        public int GetIdentityCount(Ansi378Test.BiometricService.RequestData RequestData) {
            return base.Channel.GetIdentityCount(RequestData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIdentityCount(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIdentityCount(RequestData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetIdentityCount(System.IAsyncResult result) {
            return base.Channel.EndGetIdentityCount(result);
        }
        
        private System.IAsyncResult OnBeginGetIdentityCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            return this.BeginGetIdentityCount(RequestData, callback, asyncState);
        }
        
        private object[] OnEndGetIdentityCount(System.IAsyncResult result) {
            int retVal = this.EndGetIdentityCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIdentityCountCompleted(object state) {
            if ((this.GetIdentityCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIdentityCountCompleted(this, new GetIdentityCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIdentityCountAsync(Ansi378Test.BiometricService.RequestData RequestData) {
            this.GetIdentityCountAsync(RequestData, null);
        }
        
        public void GetIdentityCountAsync(Ansi378Test.BiometricService.RequestData RequestData, object userState) {
            if ((this.onBeginGetIdentityCountDelegate == null)) {
                this.onBeginGetIdentityCountDelegate = new BeginOperationDelegate(this.OnBeginGetIdentityCount);
            }
            if ((this.onEndGetIdentityCountDelegate == null)) {
                this.onEndGetIdentityCountDelegate = new EndOperationDelegate(this.OnEndGetIdentityCount);
            }
            if ((this.onGetIdentityCountCompletedDelegate == null)) {
                this.onGetIdentityCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIdentityCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetIdentityCountDelegate, new object[] {
                        RequestData}, this.onEndGetIdentityCountDelegate, this.onGetIdentityCountCompletedDelegate, userState);
        }
        
        public Ansi378Test.BiometricService.IdentityData GetIdentityByName(Ansi378Test.BiometricService.RequestData RequestData, string FullName) {
            return base.Channel.GetIdentityByName(RequestData, FullName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIdentityByName(Ansi378Test.BiometricService.RequestData RequestData, string FullName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIdentityByName(RequestData, FullName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Ansi378Test.BiometricService.IdentityData EndGetIdentityByName(System.IAsyncResult result) {
            return base.Channel.EndGetIdentityByName(result);
        }
        
        private System.IAsyncResult OnBeginGetIdentityByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            string FullName = ((string)(inValues[1]));
            return this.BeginGetIdentityByName(RequestData, FullName, callback, asyncState);
        }
        
        private object[] OnEndGetIdentityByName(System.IAsyncResult result) {
            Ansi378Test.BiometricService.IdentityData retVal = this.EndGetIdentityByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIdentityByNameCompleted(object state) {
            if ((this.GetIdentityByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIdentityByNameCompleted(this, new GetIdentityByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIdentityByNameAsync(Ansi378Test.BiometricService.RequestData RequestData, string FullName) {
            this.GetIdentityByNameAsync(RequestData, FullName, null);
        }
        
        public void GetIdentityByNameAsync(Ansi378Test.BiometricService.RequestData RequestData, string FullName, object userState) {
            if ((this.onBeginGetIdentityByNameDelegate == null)) {
                this.onBeginGetIdentityByNameDelegate = new BeginOperationDelegate(this.OnBeginGetIdentityByName);
            }
            if ((this.onEndGetIdentityByNameDelegate == null)) {
                this.onEndGetIdentityByNameDelegate = new EndOperationDelegate(this.OnEndGetIdentityByName);
            }
            if ((this.onGetIdentityByNameCompletedDelegate == null)) {
                this.onGetIdentityByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIdentityByNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetIdentityByNameDelegate, new object[] {
                        RequestData,
                        FullName}, this.onEndGetIdentityByNameDelegate, this.onGetIdentityByNameCompletedDelegate, userState);
        }
        
        public Ansi378Test.BiometricService.IdentityData GetIdentityByT24Id(Ansi378Test.BiometricService.RequestData RequestData, string T24Id) {
            return base.Channel.GetIdentityByT24Id(RequestData, T24Id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIdentityByT24Id(Ansi378Test.BiometricService.RequestData RequestData, string T24Id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIdentityByT24Id(RequestData, T24Id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Ansi378Test.BiometricService.IdentityData EndGetIdentityByT24Id(System.IAsyncResult result) {
            return base.Channel.EndGetIdentityByT24Id(result);
        }
        
        private System.IAsyncResult OnBeginGetIdentityByT24Id(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            string T24Id = ((string)(inValues[1]));
            return this.BeginGetIdentityByT24Id(RequestData, T24Id, callback, asyncState);
        }
        
        private object[] OnEndGetIdentityByT24Id(System.IAsyncResult result) {
            Ansi378Test.BiometricService.IdentityData retVal = this.EndGetIdentityByT24Id(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIdentityByT24IdCompleted(object state) {
            if ((this.GetIdentityByT24IdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIdentityByT24IdCompleted(this, new GetIdentityByT24IdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIdentityByT24IdAsync(Ansi378Test.BiometricService.RequestData RequestData, string T24Id) {
            this.GetIdentityByT24IdAsync(RequestData, T24Id, null);
        }
        
        public void GetIdentityByT24IdAsync(Ansi378Test.BiometricService.RequestData RequestData, string T24Id, object userState) {
            if ((this.onBeginGetIdentityByT24IdDelegate == null)) {
                this.onBeginGetIdentityByT24IdDelegate = new BeginOperationDelegate(this.OnBeginGetIdentityByT24Id);
            }
            if ((this.onEndGetIdentityByT24IdDelegate == null)) {
                this.onEndGetIdentityByT24IdDelegate = new EndOperationDelegate(this.OnEndGetIdentityByT24Id);
            }
            if ((this.onGetIdentityByT24IdCompletedDelegate == null)) {
                this.onGetIdentityByT24IdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIdentityByT24IdCompleted);
            }
            base.InvokeAsync(this.onBeginGetIdentityByT24IdDelegate, new object[] {
                        RequestData,
                        T24Id}, this.onEndGetIdentityByT24IdDelegate, this.onGetIdentityByT24IdCompletedDelegate, userState);
        }
        
        public Ansi378Test.BiometricService.IdentityData GetIdentityByUid(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId) {
            return base.Channel.GetIdentityByUid(RequestData, IdentityId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIdentityByUid(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIdentityByUid(RequestData, IdentityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Ansi378Test.BiometricService.IdentityData EndGetIdentityByUid(System.IAsyncResult result) {
            return base.Channel.EndGetIdentityByUid(result);
        }
        
        private System.IAsyncResult OnBeginGetIdentityByUid(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            System.Guid IdentityId = ((System.Guid)(inValues[1]));
            return this.BeginGetIdentityByUid(RequestData, IdentityId, callback, asyncState);
        }
        
        private object[] OnEndGetIdentityByUid(System.IAsyncResult result) {
            Ansi378Test.BiometricService.IdentityData retVal = this.EndGetIdentityByUid(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIdentityByUidCompleted(object state) {
            if ((this.GetIdentityByUidCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIdentityByUidCompleted(this, new GetIdentityByUidCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIdentityByUidAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId) {
            this.GetIdentityByUidAsync(RequestData, IdentityId, null);
        }
        
        public void GetIdentityByUidAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, object userState) {
            if ((this.onBeginGetIdentityByUidDelegate == null)) {
                this.onBeginGetIdentityByUidDelegate = new BeginOperationDelegate(this.OnBeginGetIdentityByUid);
            }
            if ((this.onEndGetIdentityByUidDelegate == null)) {
                this.onEndGetIdentityByUidDelegate = new EndOperationDelegate(this.OnEndGetIdentityByUid);
            }
            if ((this.onGetIdentityByUidCompletedDelegate == null)) {
                this.onGetIdentityByUidCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIdentityByUidCompleted);
            }
            base.InvokeAsync(this.onBeginGetIdentityByUidDelegate, new object[] {
                        RequestData,
                        IdentityId}, this.onEndGetIdentityByUidDelegate, this.onGetIdentityByUidCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityTypeData> GetIdentityTypes(Ansi378Test.BiometricService.RequestData RequestData) {
            return base.Channel.GetIdentityTypes(RequestData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIdentityTypes(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIdentityTypes(RequestData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityTypeData> EndGetIdentityTypes(System.IAsyncResult result) {
            return base.Channel.EndGetIdentityTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetIdentityTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            return this.BeginGetIdentityTypes(RequestData, callback, asyncState);
        }
        
        private object[] OnEndGetIdentityTypes(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityTypeData> retVal = this.EndGetIdentityTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIdentityTypesCompleted(object state) {
            if ((this.GetIdentityTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIdentityTypesCompleted(this, new GetIdentityTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIdentityTypesAsync(Ansi378Test.BiometricService.RequestData RequestData) {
            this.GetIdentityTypesAsync(RequestData, null);
        }
        
        public void GetIdentityTypesAsync(Ansi378Test.BiometricService.RequestData RequestData, object userState) {
            if ((this.onBeginGetIdentityTypesDelegate == null)) {
                this.onBeginGetIdentityTypesDelegate = new BeginOperationDelegate(this.OnBeginGetIdentityTypes);
            }
            if ((this.onEndGetIdentityTypesDelegate == null)) {
                this.onEndGetIdentityTypesDelegate = new EndOperationDelegate(this.OnEndGetIdentityTypes);
            }
            if ((this.onGetIdentityTypesCompletedDelegate == null)) {
                this.onGetIdentityTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIdentityTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetIdentityTypesDelegate, new object[] {
                        RequestData}, this.onEndGetIdentityTypesDelegate, this.onGetIdentityTypesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData> GetEmployees(Ansi378Test.BiometricService.RequestData RequestData) {
            return base.Channel.GetEmployees(RequestData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetEmployees(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEmployees(RequestData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData> EndGetEmployees(System.IAsyncResult result) {
            return base.Channel.EndGetEmployees(result);
        }
        
        private System.IAsyncResult OnBeginGetEmployees(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            return this.BeginGetEmployees(RequestData, callback, asyncState);
        }
        
        private object[] OnEndGetEmployees(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityData> retVal = this.EndGetEmployees(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEmployeesCompleted(object state) {
            if ((this.GetEmployeesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEmployeesCompleted(this, new GetEmployeesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEmployeesAsync(Ansi378Test.BiometricService.RequestData RequestData) {
            this.GetEmployeesAsync(RequestData, null);
        }
        
        public void GetEmployeesAsync(Ansi378Test.BiometricService.RequestData RequestData, object userState) {
            if ((this.onBeginGetEmployeesDelegate == null)) {
                this.onBeginGetEmployeesDelegate = new BeginOperationDelegate(this.OnBeginGetEmployees);
            }
            if ((this.onEndGetEmployeesDelegate == null)) {
                this.onEndGetEmployeesDelegate = new EndOperationDelegate(this.OnEndGetEmployees);
            }
            if ((this.onGetEmployeesCompletedDelegate == null)) {
                this.onGetEmployeesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEmployeesCompleted);
            }
            base.InvokeAsync(this.onBeginGetEmployeesDelegate, new object[] {
                        RequestData}, this.onEndGetEmployeesDelegate, this.onGetEmployeesCompletedDelegate, userState);
        }
        
        public System.Guid AddIdentity(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityData IdentityData) {
            return base.Channel.AddIdentity(RequestData, IdentityData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddIdentity(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityData IdentityData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddIdentity(RequestData, IdentityData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Guid EndAddIdentity(System.IAsyncResult result) {
            return base.Channel.EndAddIdentity(result);
        }
        
        private System.IAsyncResult OnBeginAddIdentity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            Ansi378Test.BiometricService.IdentityData IdentityData = ((Ansi378Test.BiometricService.IdentityData)(inValues[1]));
            return this.BeginAddIdentity(RequestData, IdentityData, callback, asyncState);
        }
        
        private object[] OnEndAddIdentity(System.IAsyncResult result) {
            System.Guid retVal = this.EndAddIdentity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddIdentityCompleted(object state) {
            if ((this.AddIdentityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddIdentityCompleted(this, new AddIdentityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddIdentityAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityData IdentityData) {
            this.AddIdentityAsync(RequestData, IdentityData, null);
        }
        
        public void AddIdentityAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityData IdentityData, object userState) {
            if ((this.onBeginAddIdentityDelegate == null)) {
                this.onBeginAddIdentityDelegate = new BeginOperationDelegate(this.OnBeginAddIdentity);
            }
            if ((this.onEndAddIdentityDelegate == null)) {
                this.onEndAddIdentityDelegate = new EndOperationDelegate(this.OnEndAddIdentity);
            }
            if ((this.onAddIdentityCompletedDelegate == null)) {
                this.onAddIdentityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddIdentityCompleted);
            }
            base.InvokeAsync(this.onBeginAddIdentityDelegate, new object[] {
                        RequestData,
                        IdentityData}, this.onEndAddIdentityDelegate, this.onAddIdentityCompletedDelegate, userState);
        }
        
        public void UpdateIdentity(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityData IdentityData, string transCodes) {
            base.Channel.UpdateIdentity(RequestData, IdentityData, transCodes);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateIdentity(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityData IdentityData, string transCodes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateIdentity(RequestData, IdentityData, transCodes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateIdentity(System.IAsyncResult result) {
            base.Channel.EndUpdateIdentity(result);
        }
        
        private System.IAsyncResult OnBeginUpdateIdentity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            Ansi378Test.BiometricService.IdentityData IdentityData = ((Ansi378Test.BiometricService.IdentityData)(inValues[1]));
            string transCodes = ((string)(inValues[2]));
            return this.BeginUpdateIdentity(RequestData, IdentityData, transCodes, callback, asyncState);
        }
        
        private object[] OnEndUpdateIdentity(System.IAsyncResult result) {
            this.EndUpdateIdentity(result);
            return null;
        }
        
        private void OnUpdateIdentityCompleted(object state) {
            if ((this.UpdateIdentityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateIdentityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateIdentityAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityData IdentityData, string transCodes) {
            this.UpdateIdentityAsync(RequestData, IdentityData, transCodes, null);
        }
        
        public void UpdateIdentityAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityData IdentityData, string transCodes, object userState) {
            if ((this.onBeginUpdateIdentityDelegate == null)) {
                this.onBeginUpdateIdentityDelegate = new BeginOperationDelegate(this.OnBeginUpdateIdentity);
            }
            if ((this.onEndUpdateIdentityDelegate == null)) {
                this.onEndUpdateIdentityDelegate = new EndOperationDelegate(this.OnEndUpdateIdentity);
            }
            if ((this.onUpdateIdentityCompletedDelegate == null)) {
                this.onUpdateIdentityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateIdentityCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateIdentityDelegate, new object[] {
                        RequestData,
                        IdentityData,
                        transCodes}, this.onEndUpdateIdentityDelegate, this.onUpdateIdentityCompletedDelegate, userState);
        }
        
        public void RemoveIdentity(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId) {
            base.Channel.RemoveIdentity(RequestData, IdentityId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveIdentity(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveIdentity(RequestData, IdentityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveIdentity(System.IAsyncResult result) {
            base.Channel.EndRemoveIdentity(result);
        }
        
        private System.IAsyncResult OnBeginRemoveIdentity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            System.Guid IdentityId = ((System.Guid)(inValues[1]));
            return this.BeginRemoveIdentity(RequestData, IdentityId, callback, asyncState);
        }
        
        private object[] OnEndRemoveIdentity(System.IAsyncResult result) {
            this.EndRemoveIdentity(result);
            return null;
        }
        
        private void OnRemoveIdentityCompleted(object state) {
            if ((this.RemoveIdentityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveIdentityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveIdentityAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId) {
            this.RemoveIdentityAsync(RequestData, IdentityId, null);
        }
        
        public void RemoveIdentityAsync(Ansi378Test.BiometricService.RequestData RequestData, System.Guid IdentityId, object userState) {
            if ((this.onBeginRemoveIdentityDelegate == null)) {
                this.onBeginRemoveIdentityDelegate = new BeginOperationDelegate(this.OnBeginRemoveIdentity);
            }
            if ((this.onEndRemoveIdentityDelegate == null)) {
                this.onEndRemoveIdentityDelegate = new EndOperationDelegate(this.OnEndRemoveIdentity);
            }
            if ((this.onRemoveIdentityCompletedDelegate == null)) {
                this.onRemoveIdentityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveIdentityCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveIdentityDelegate, new object[] {
                        RequestData,
                        IdentityId}, this.onEndRemoveIdentityDelegate, this.onRemoveIdentityCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.LoginData> GetLogins(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData QueryData) {
            return base.Channel.GetLogins(RequestData, QueryData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLogins(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData QueryData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLogins(RequestData, QueryData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.LoginData> EndGetLogins(System.IAsyncResult result) {
            return base.Channel.EndGetLogins(result);
        }
        
        private System.IAsyncResult OnBeginGetLogins(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            Ansi378Test.BiometricService.MySqlQueryData QueryData = ((Ansi378Test.BiometricService.MySqlQueryData)(inValues[1]));
            return this.BeginGetLogins(RequestData, QueryData, callback, asyncState);
        }
        
        private object[] OnEndGetLogins(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.LoginData> retVal = this.EndGetLogins(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLoginsCompleted(object state) {
            if ((this.GetLoginsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLoginsCompleted(this, new GetLoginsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLoginsAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData QueryData) {
            this.GetLoginsAsync(RequestData, QueryData, null);
        }
        
        public void GetLoginsAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.MySqlQueryData QueryData, object userState) {
            if ((this.onBeginGetLoginsDelegate == null)) {
                this.onBeginGetLoginsDelegate = new BeginOperationDelegate(this.OnBeginGetLogins);
            }
            if ((this.onEndGetLoginsDelegate == null)) {
                this.onEndGetLoginsDelegate = new EndOperationDelegate(this.OnEndGetLogins);
            }
            if ((this.onGetLoginsCompletedDelegate == null)) {
                this.onGetLoginsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLoginsCompleted);
            }
            base.InvokeAsync(this.onBeginGetLoginsDelegate, new object[] {
                        RequestData,
                        QueryData}, this.onEndGetLoginsDelegate, this.onGetLoginsCompletedDelegate, userState);
        }
        
        public int AddLogin(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.LoginData LoginData) {
            return base.Channel.AddLogin(RequestData, LoginData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddLogin(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.LoginData LoginData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddLogin(RequestData, LoginData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddLogin(System.IAsyncResult result) {
            return base.Channel.EndAddLogin(result);
        }
        
        private System.IAsyncResult OnBeginAddLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            Ansi378Test.BiometricService.LoginData LoginData = ((Ansi378Test.BiometricService.LoginData)(inValues[1]));
            return this.BeginAddLogin(RequestData, LoginData, callback, asyncState);
        }
        
        private object[] OnEndAddLogin(System.IAsyncResult result) {
            int retVal = this.EndAddLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddLoginCompleted(object state) {
            if ((this.AddLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddLoginCompleted(this, new AddLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddLoginAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.LoginData LoginData) {
            this.AddLoginAsync(RequestData, LoginData, null);
        }
        
        public void AddLoginAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.LoginData LoginData, object userState) {
            if ((this.onBeginAddLoginDelegate == null)) {
                this.onBeginAddLoginDelegate = new BeginOperationDelegate(this.OnBeginAddLogin);
            }
            if ((this.onEndAddLoginDelegate == null)) {
                this.onEndAddLoginDelegate = new EndOperationDelegate(this.OnEndAddLogin);
            }
            if ((this.onAddLoginCompletedDelegate == null)) {
                this.onAddLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddLoginCompleted);
            }
            base.InvokeAsync(this.onBeginAddLoginDelegate, new object[] {
                        RequestData,
                        LoginData}, this.onEndAddLoginDelegate, this.onAddLoginCompletedDelegate, userState);
        }
        
        public void UpdateLogin(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.LoginData LoginData) {
            base.Channel.UpdateLogin(RequestData, LoginData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateLogin(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.LoginData LoginData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateLogin(RequestData, LoginData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateLogin(System.IAsyncResult result) {
            base.Channel.EndUpdateLogin(result);
        }
        
        private System.IAsyncResult OnBeginUpdateLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            Ansi378Test.BiometricService.LoginData LoginData = ((Ansi378Test.BiometricService.LoginData)(inValues[1]));
            return this.BeginUpdateLogin(RequestData, LoginData, callback, asyncState);
        }
        
        private object[] OnEndUpdateLogin(System.IAsyncResult result) {
            this.EndUpdateLogin(result);
            return null;
        }
        
        private void OnUpdateLoginCompleted(object state) {
            if ((this.UpdateLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateLoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateLoginAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.LoginData LoginData) {
            this.UpdateLoginAsync(RequestData, LoginData, null);
        }
        
        public void UpdateLoginAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.LoginData LoginData, object userState) {
            if ((this.onBeginUpdateLoginDelegate == null)) {
                this.onBeginUpdateLoginDelegate = new BeginOperationDelegate(this.OnBeginUpdateLogin);
            }
            if ((this.onEndUpdateLoginDelegate == null)) {
                this.onEndUpdateLoginDelegate = new EndOperationDelegate(this.OnEndUpdateLogin);
            }
            if ((this.onUpdateLoginCompletedDelegate == null)) {
                this.onUpdateLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateLoginCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateLoginDelegate, new object[] {
                        RequestData,
                        LoginData}, this.onEndUpdateLoginDelegate, this.onUpdateLoginCompletedDelegate, userState);
        }
        
        public void RemoveLogin(Ansi378Test.BiometricService.RequestData RequestData, int LoginId) {
            base.Channel.RemoveLogin(RequestData, LoginId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveLogin(Ansi378Test.BiometricService.RequestData RequestData, int LoginId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveLogin(RequestData, LoginId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveLogin(System.IAsyncResult result) {
            base.Channel.EndRemoveLogin(result);
        }
        
        private System.IAsyncResult OnBeginRemoveLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            int LoginId = ((int)(inValues[1]));
            return this.BeginRemoveLogin(RequestData, LoginId, callback, asyncState);
        }
        
        private object[] OnEndRemoveLogin(System.IAsyncResult result) {
            this.EndRemoveLogin(result);
            return null;
        }
        
        private void OnRemoveLoginCompleted(object state) {
            if ((this.RemoveLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveLoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveLoginAsync(Ansi378Test.BiometricService.RequestData RequestData, int LoginId) {
            this.RemoveLoginAsync(RequestData, LoginId, null);
        }
        
        public void RemoveLoginAsync(Ansi378Test.BiometricService.RequestData RequestData, int LoginId, object userState) {
            if ((this.onBeginRemoveLoginDelegate == null)) {
                this.onBeginRemoveLoginDelegate = new BeginOperationDelegate(this.OnBeginRemoveLogin);
            }
            if ((this.onEndRemoveLoginDelegate == null)) {
                this.onEndRemoveLoginDelegate = new EndOperationDelegate(this.OnEndRemoveLogin);
            }
            if ((this.onRemoveLoginCompletedDelegate == null)) {
                this.onRemoveLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveLoginCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveLoginDelegate, new object[] {
                        RequestData,
                        LoginId}, this.onEndRemoveLoginDelegate, this.onRemoveLoginCompletedDelegate, userState);
        }
        
        public Ansi378Test.BiometricService.LoginData LoadLoginPasswords(int LoginId) {
            return base.Channel.LoadLoginPasswords(LoginId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadLoginPasswords(int LoginId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadLoginPasswords(LoginId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Ansi378Test.BiometricService.LoginData EndLoadLoginPasswords(System.IAsyncResult result) {
            return base.Channel.EndLoadLoginPasswords(result);
        }
        
        private System.IAsyncResult OnBeginLoadLoginPasswords(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int LoginId = ((int)(inValues[0]));
            return this.BeginLoadLoginPasswords(LoginId, callback, asyncState);
        }
        
        private object[] OnEndLoadLoginPasswords(System.IAsyncResult result) {
            Ansi378Test.BiometricService.LoginData retVal = this.EndLoadLoginPasswords(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadLoginPasswordsCompleted(object state) {
            if ((this.LoadLoginPasswordsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadLoginPasswordsCompleted(this, new LoadLoginPasswordsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadLoginPasswordsAsync(int LoginId) {
            this.LoadLoginPasswordsAsync(LoginId, null);
        }
        
        public void LoadLoginPasswordsAsync(int LoginId, object userState) {
            if ((this.onBeginLoadLoginPasswordsDelegate == null)) {
                this.onBeginLoadLoginPasswordsDelegate = new BeginOperationDelegate(this.OnBeginLoadLoginPasswords);
            }
            if ((this.onEndLoadLoginPasswordsDelegate == null)) {
                this.onEndLoadLoginPasswordsDelegate = new EndOperationDelegate(this.OnEndLoadLoginPasswords);
            }
            if ((this.onLoadLoginPasswordsCompletedDelegate == null)) {
                this.onLoadLoginPasswordsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadLoginPasswordsCompleted);
            }
            base.InvokeAsync(this.onBeginLoadLoginPasswordsDelegate, new object[] {
                        LoginId}, this.onEndLoadLoginPasswordsDelegate, this.onLoadLoginPasswordsCompletedDelegate, userState);
        }
        
        public int RecordPasswordResetAttempt(Ansi378Test.BiometricService.RequestData requestData, int loginId, string oldPassword, string newPassword) {
            return base.Channel.RecordPasswordResetAttempt(requestData, loginId, oldPassword, newPassword);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRecordPasswordResetAttempt(Ansi378Test.BiometricService.RequestData requestData, int loginId, string oldPassword, string newPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRecordPasswordResetAttempt(requestData, loginId, oldPassword, newPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndRecordPasswordResetAttempt(System.IAsyncResult result) {
            return base.Channel.EndRecordPasswordResetAttempt(result);
        }
        
        private System.IAsyncResult OnBeginRecordPasswordResetAttempt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData requestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            int loginId = ((int)(inValues[1]));
            string oldPassword = ((string)(inValues[2]));
            string newPassword = ((string)(inValues[3]));
            return this.BeginRecordPasswordResetAttempt(requestData, loginId, oldPassword, newPassword, callback, asyncState);
        }
        
        private object[] OnEndRecordPasswordResetAttempt(System.IAsyncResult result) {
            int retVal = this.EndRecordPasswordResetAttempt(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRecordPasswordResetAttemptCompleted(object state) {
            if ((this.RecordPasswordResetAttemptCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RecordPasswordResetAttemptCompleted(this, new RecordPasswordResetAttemptCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RecordPasswordResetAttemptAsync(Ansi378Test.BiometricService.RequestData requestData, int loginId, string oldPassword, string newPassword) {
            this.RecordPasswordResetAttemptAsync(requestData, loginId, oldPassword, newPassword, null);
        }
        
        public void RecordPasswordResetAttemptAsync(Ansi378Test.BiometricService.RequestData requestData, int loginId, string oldPassword, string newPassword, object userState) {
            if ((this.onBeginRecordPasswordResetAttemptDelegate == null)) {
                this.onBeginRecordPasswordResetAttemptDelegate = new BeginOperationDelegate(this.OnBeginRecordPasswordResetAttempt);
            }
            if ((this.onEndRecordPasswordResetAttemptDelegate == null)) {
                this.onEndRecordPasswordResetAttemptDelegate = new EndOperationDelegate(this.OnEndRecordPasswordResetAttempt);
            }
            if ((this.onRecordPasswordResetAttemptCompletedDelegate == null)) {
                this.onRecordPasswordResetAttemptCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRecordPasswordResetAttemptCompleted);
            }
            base.InvokeAsync(this.onBeginRecordPasswordResetAttemptDelegate, new object[] {
                        requestData,
                        loginId,
                        oldPassword,
                        newPassword}, this.onEndRecordPasswordResetAttemptDelegate, this.onRecordPasswordResetAttemptCompletedDelegate, userState);
        }
        
        public void RecordPasswordResetAttemptResult(Ansi378Test.BiometricService.RequestData requestData, int attemptId, bool succeeded) {
            base.Channel.RecordPasswordResetAttemptResult(requestData, attemptId, succeeded);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRecordPasswordResetAttemptResult(Ansi378Test.BiometricService.RequestData requestData, int attemptId, bool succeeded, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRecordPasswordResetAttemptResult(requestData, attemptId, succeeded, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRecordPasswordResetAttemptResult(System.IAsyncResult result) {
            base.Channel.EndRecordPasswordResetAttemptResult(result);
        }
        
        private System.IAsyncResult OnBeginRecordPasswordResetAttemptResult(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData requestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            int attemptId = ((int)(inValues[1]));
            bool succeeded = ((bool)(inValues[2]));
            return this.BeginRecordPasswordResetAttemptResult(requestData, attemptId, succeeded, callback, asyncState);
        }
        
        private object[] OnEndRecordPasswordResetAttemptResult(System.IAsyncResult result) {
            this.EndRecordPasswordResetAttemptResult(result);
            return null;
        }
        
        private void OnRecordPasswordResetAttemptResultCompleted(object state) {
            if ((this.RecordPasswordResetAttemptResultCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RecordPasswordResetAttemptResultCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RecordPasswordResetAttemptResultAsync(Ansi378Test.BiometricService.RequestData requestData, int attemptId, bool succeeded) {
            this.RecordPasswordResetAttemptResultAsync(requestData, attemptId, succeeded, null);
        }
        
        public void RecordPasswordResetAttemptResultAsync(Ansi378Test.BiometricService.RequestData requestData, int attemptId, bool succeeded, object userState) {
            if ((this.onBeginRecordPasswordResetAttemptResultDelegate == null)) {
                this.onBeginRecordPasswordResetAttemptResultDelegate = new BeginOperationDelegate(this.OnBeginRecordPasswordResetAttemptResult);
            }
            if ((this.onEndRecordPasswordResetAttemptResultDelegate == null)) {
                this.onEndRecordPasswordResetAttemptResultDelegate = new EndOperationDelegate(this.OnEndRecordPasswordResetAttemptResult);
            }
            if ((this.onRecordPasswordResetAttemptResultCompletedDelegate == null)) {
                this.onRecordPasswordResetAttemptResultCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRecordPasswordResetAttemptResultCompleted);
            }
            base.InvokeAsync(this.onBeginRecordPasswordResetAttemptResultDelegate, new object[] {
                        requestData,
                        attemptId,
                        succeeded}, this.onEndRecordPasswordResetAttemptResultDelegate, this.onRecordPasswordResetAttemptResultCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityGroupData> GetIdentityGroups(Ansi378Test.BiometricService.RequestData RequestData) {
            return base.Channel.GetIdentityGroups(RequestData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIdentityGroups(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIdentityGroups(RequestData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityGroupData> EndGetIdentityGroups(System.IAsyncResult result) {
            return base.Channel.EndGetIdentityGroups(result);
        }
        
        private System.IAsyncResult OnBeginGetIdentityGroups(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            return this.BeginGetIdentityGroups(RequestData, callback, asyncState);
        }
        
        private object[] OnEndGetIdentityGroups(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.IdentityGroupData> retVal = this.EndGetIdentityGroups(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIdentityGroupsCompleted(object state) {
            if ((this.GetIdentityGroupsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIdentityGroupsCompleted(this, new GetIdentityGroupsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIdentityGroupsAsync(Ansi378Test.BiometricService.RequestData RequestData) {
            this.GetIdentityGroupsAsync(RequestData, null);
        }
        
        public void GetIdentityGroupsAsync(Ansi378Test.BiometricService.RequestData RequestData, object userState) {
            if ((this.onBeginGetIdentityGroupsDelegate == null)) {
                this.onBeginGetIdentityGroupsDelegate = new BeginOperationDelegate(this.OnBeginGetIdentityGroups);
            }
            if ((this.onEndGetIdentityGroupsDelegate == null)) {
                this.onEndGetIdentityGroupsDelegate = new EndOperationDelegate(this.OnEndGetIdentityGroups);
            }
            if ((this.onGetIdentityGroupsCompletedDelegate == null)) {
                this.onGetIdentityGroupsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIdentityGroupsCompleted);
            }
            base.InvokeAsync(this.onBeginGetIdentityGroupsDelegate, new object[] {
                        RequestData}, this.onEndGetIdentityGroupsDelegate, this.onGetIdentityGroupsCompletedDelegate, userState);
        }
        
        public Ansi378Test.BiometricService.IdentityGroupData GetIdentityGroupById(Ansi378Test.BiometricService.RequestData RequestData, int GroupId) {
            return base.Channel.GetIdentityGroupById(RequestData, GroupId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIdentityGroupById(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIdentityGroupById(RequestData, GroupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Ansi378Test.BiometricService.IdentityGroupData EndGetIdentityGroupById(System.IAsyncResult result) {
            return base.Channel.EndGetIdentityGroupById(result);
        }
        
        private System.IAsyncResult OnBeginGetIdentityGroupById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            int GroupId = ((int)(inValues[1]));
            return this.BeginGetIdentityGroupById(RequestData, GroupId, callback, asyncState);
        }
        
        private object[] OnEndGetIdentityGroupById(System.IAsyncResult result) {
            Ansi378Test.BiometricService.IdentityGroupData retVal = this.EndGetIdentityGroupById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIdentityGroupByIdCompleted(object state) {
            if ((this.GetIdentityGroupByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIdentityGroupByIdCompleted(this, new GetIdentityGroupByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIdentityGroupByIdAsync(Ansi378Test.BiometricService.RequestData RequestData, int GroupId) {
            this.GetIdentityGroupByIdAsync(RequestData, GroupId, null);
        }
        
        public void GetIdentityGroupByIdAsync(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, object userState) {
            if ((this.onBeginGetIdentityGroupByIdDelegate == null)) {
                this.onBeginGetIdentityGroupByIdDelegate = new BeginOperationDelegate(this.OnBeginGetIdentityGroupById);
            }
            if ((this.onEndGetIdentityGroupByIdDelegate == null)) {
                this.onEndGetIdentityGroupByIdDelegate = new EndOperationDelegate(this.OnEndGetIdentityGroupById);
            }
            if ((this.onGetIdentityGroupByIdCompletedDelegate == null)) {
                this.onGetIdentityGroupByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIdentityGroupByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetIdentityGroupByIdDelegate, new object[] {
                        RequestData,
                        GroupId}, this.onEndGetIdentityGroupByIdDelegate, this.onGetIdentityGroupByIdCompletedDelegate, userState);
        }
        
        public int AddIdentityGroup(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityGroupData IdentityGroupData) {
            return base.Channel.AddIdentityGroup(RequestData, IdentityGroupData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddIdentityGroup(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityGroupData IdentityGroupData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddIdentityGroup(RequestData, IdentityGroupData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddIdentityGroup(System.IAsyncResult result) {
            return base.Channel.EndAddIdentityGroup(result);
        }
        
        private System.IAsyncResult OnBeginAddIdentityGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            Ansi378Test.BiometricService.IdentityGroupData IdentityGroupData = ((Ansi378Test.BiometricService.IdentityGroupData)(inValues[1]));
            return this.BeginAddIdentityGroup(RequestData, IdentityGroupData, callback, asyncState);
        }
        
        private object[] OnEndAddIdentityGroup(System.IAsyncResult result) {
            int retVal = this.EndAddIdentityGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddIdentityGroupCompleted(object state) {
            if ((this.AddIdentityGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddIdentityGroupCompleted(this, new AddIdentityGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddIdentityGroupAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityGroupData IdentityGroupData) {
            this.AddIdentityGroupAsync(RequestData, IdentityGroupData, null);
        }
        
        public void AddIdentityGroupAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityGroupData IdentityGroupData, object userState) {
            if ((this.onBeginAddIdentityGroupDelegate == null)) {
                this.onBeginAddIdentityGroupDelegate = new BeginOperationDelegate(this.OnBeginAddIdentityGroup);
            }
            if ((this.onEndAddIdentityGroupDelegate == null)) {
                this.onEndAddIdentityGroupDelegate = new EndOperationDelegate(this.OnEndAddIdentityGroup);
            }
            if ((this.onAddIdentityGroupCompletedDelegate == null)) {
                this.onAddIdentityGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddIdentityGroupCompleted);
            }
            base.InvokeAsync(this.onBeginAddIdentityGroupDelegate, new object[] {
                        RequestData,
                        IdentityGroupData}, this.onEndAddIdentityGroupDelegate, this.onAddIdentityGroupCompletedDelegate, userState);
        }
        
        public void UpdateIdentityGroup(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityGroupData IdentityGroupData, string transCodes) {
            base.Channel.UpdateIdentityGroup(RequestData, IdentityGroupData, transCodes);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateIdentityGroup(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityGroupData IdentityGroupData, string transCodes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateIdentityGroup(RequestData, IdentityGroupData, transCodes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateIdentityGroup(System.IAsyncResult result) {
            base.Channel.EndUpdateIdentityGroup(result);
        }
        
        private System.IAsyncResult OnBeginUpdateIdentityGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            Ansi378Test.BiometricService.IdentityGroupData IdentityGroupData = ((Ansi378Test.BiometricService.IdentityGroupData)(inValues[1]));
            string transCodes = ((string)(inValues[2]));
            return this.BeginUpdateIdentityGroup(RequestData, IdentityGroupData, transCodes, callback, asyncState);
        }
        
        private object[] OnEndUpdateIdentityGroup(System.IAsyncResult result) {
            this.EndUpdateIdentityGroup(result);
            return null;
        }
        
        private void OnUpdateIdentityGroupCompleted(object state) {
            if ((this.UpdateIdentityGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateIdentityGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateIdentityGroupAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityGroupData IdentityGroupData, string transCodes) {
            this.UpdateIdentityGroupAsync(RequestData, IdentityGroupData, transCodes, null);
        }
        
        public void UpdateIdentityGroupAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.IdentityGroupData IdentityGroupData, string transCodes, object userState) {
            if ((this.onBeginUpdateIdentityGroupDelegate == null)) {
                this.onBeginUpdateIdentityGroupDelegate = new BeginOperationDelegate(this.OnBeginUpdateIdentityGroup);
            }
            if ((this.onEndUpdateIdentityGroupDelegate == null)) {
                this.onEndUpdateIdentityGroupDelegate = new EndOperationDelegate(this.OnEndUpdateIdentityGroup);
            }
            if ((this.onUpdateIdentityGroupCompletedDelegate == null)) {
                this.onUpdateIdentityGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateIdentityGroupCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateIdentityGroupDelegate, new object[] {
                        RequestData,
                        IdentityGroupData,
                        transCodes}, this.onEndUpdateIdentityGroupDelegate, this.onUpdateIdentityGroupCompletedDelegate, userState);
        }
        
        public void RemoveIdentityGroup(Ansi378Test.BiometricService.RequestData RequestData, int GroupId) {
            base.Channel.RemoveIdentityGroup(RequestData, GroupId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveIdentityGroup(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveIdentityGroup(RequestData, GroupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveIdentityGroup(System.IAsyncResult result) {
            base.Channel.EndRemoveIdentityGroup(result);
        }
        
        private System.IAsyncResult OnBeginRemoveIdentityGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            int GroupId = ((int)(inValues[1]));
            return this.BeginRemoveIdentityGroup(RequestData, GroupId, callback, asyncState);
        }
        
        private object[] OnEndRemoveIdentityGroup(System.IAsyncResult result) {
            this.EndRemoveIdentityGroup(result);
            return null;
        }
        
        private void OnRemoveIdentityGroupCompleted(object state) {
            if ((this.RemoveIdentityGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveIdentityGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveIdentityGroupAsync(Ansi378Test.BiometricService.RequestData RequestData, int GroupId) {
            this.RemoveIdentityGroupAsync(RequestData, GroupId, null);
        }
        
        public void RemoveIdentityGroupAsync(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, object userState) {
            if ((this.onBeginRemoveIdentityGroupDelegate == null)) {
                this.onBeginRemoveIdentityGroupDelegate = new BeginOperationDelegate(this.OnBeginRemoveIdentityGroup);
            }
            if ((this.onEndRemoveIdentityGroupDelegate == null)) {
                this.onEndRemoveIdentityGroupDelegate = new EndOperationDelegate(this.OnEndRemoveIdentityGroup);
            }
            if ((this.onRemoveIdentityGroupCompletedDelegate == null)) {
                this.onRemoveIdentityGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveIdentityGroupCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveIdentityGroupDelegate, new object[] {
                        RequestData,
                        GroupId}, this.onEndRemoveIdentityGroupDelegate, this.onRemoveIdentityGroupCompletedDelegate, userState);
        }
        
        public void UpdateGroupForIdentities(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, string IdentityIds) {
            base.Channel.UpdateGroupForIdentities(RequestData, GroupId, IdentityIds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateGroupForIdentities(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, string IdentityIds, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateGroupForIdentities(RequestData, GroupId, IdentityIds, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateGroupForIdentities(System.IAsyncResult result) {
            base.Channel.EndUpdateGroupForIdentities(result);
        }
        
        private System.IAsyncResult OnBeginUpdateGroupForIdentities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            int GroupId = ((int)(inValues[1]));
            string IdentityIds = ((string)(inValues[2]));
            return this.BeginUpdateGroupForIdentities(RequestData, GroupId, IdentityIds, callback, asyncState);
        }
        
        private object[] OnEndUpdateGroupForIdentities(System.IAsyncResult result) {
            this.EndUpdateGroupForIdentities(result);
            return null;
        }
        
        private void OnUpdateGroupForIdentitiesCompleted(object state) {
            if ((this.UpdateGroupForIdentitiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateGroupForIdentitiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateGroupForIdentitiesAsync(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, string IdentityIds) {
            this.UpdateGroupForIdentitiesAsync(RequestData, GroupId, IdentityIds, null);
        }
        
        public void UpdateGroupForIdentitiesAsync(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, string IdentityIds, object userState) {
            if ((this.onBeginUpdateGroupForIdentitiesDelegate == null)) {
                this.onBeginUpdateGroupForIdentitiesDelegate = new BeginOperationDelegate(this.OnBeginUpdateGroupForIdentities);
            }
            if ((this.onEndUpdateGroupForIdentitiesDelegate == null)) {
                this.onEndUpdateGroupForIdentitiesDelegate = new EndOperationDelegate(this.OnEndUpdateGroupForIdentities);
            }
            if ((this.onUpdateGroupForIdentitiesCompletedDelegate == null)) {
                this.onUpdateGroupForIdentitiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateGroupForIdentitiesCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateGroupForIdentitiesDelegate, new object[] {
                        RequestData,
                        GroupId,
                        IdentityIds}, this.onEndUpdateGroupForIdentitiesDelegate, this.onUpdateGroupForIdentitiesCompletedDelegate, userState);
        }
        
        public void UpdateGroupIdentityLogins(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, bool ResetLogins) {
            base.Channel.UpdateGroupIdentityLogins(RequestData, GroupId, ResetLogins);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateGroupIdentityLogins(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, bool ResetLogins, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateGroupIdentityLogins(RequestData, GroupId, ResetLogins, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateGroupIdentityLogins(System.IAsyncResult result) {
            base.Channel.EndUpdateGroupIdentityLogins(result);
        }
        
        private System.IAsyncResult OnBeginUpdateGroupIdentityLogins(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            int GroupId = ((int)(inValues[1]));
            bool ResetLogins = ((bool)(inValues[2]));
            return this.BeginUpdateGroupIdentityLogins(RequestData, GroupId, ResetLogins, callback, asyncState);
        }
        
        private object[] OnEndUpdateGroupIdentityLogins(System.IAsyncResult result) {
            this.EndUpdateGroupIdentityLogins(result);
            return null;
        }
        
        private void OnUpdateGroupIdentityLoginsCompleted(object state) {
            if ((this.UpdateGroupIdentityLoginsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateGroupIdentityLoginsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateGroupIdentityLoginsAsync(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, bool ResetLogins) {
            this.UpdateGroupIdentityLoginsAsync(RequestData, GroupId, ResetLogins, null);
        }
        
        public void UpdateGroupIdentityLoginsAsync(Ansi378Test.BiometricService.RequestData RequestData, int GroupId, bool ResetLogins, object userState) {
            if ((this.onBeginUpdateGroupIdentityLoginsDelegate == null)) {
                this.onBeginUpdateGroupIdentityLoginsDelegate = new BeginOperationDelegate(this.OnBeginUpdateGroupIdentityLogins);
            }
            if ((this.onEndUpdateGroupIdentityLoginsDelegate == null)) {
                this.onEndUpdateGroupIdentityLoginsDelegate = new EndOperationDelegate(this.OnEndUpdateGroupIdentityLogins);
            }
            if ((this.onUpdateGroupIdentityLoginsCompletedDelegate == null)) {
                this.onUpdateGroupIdentityLoginsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateGroupIdentityLoginsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateGroupIdentityLoginsDelegate, new object[] {
                        RequestData,
                        GroupId,
                        ResetLogins}, this.onEndUpdateGroupIdentityLoginsDelegate, this.onUpdateGroupIdentityLoginsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationLevelData> GetAuthenticationLevels(Ansi378Test.BiometricService.RequestData RequestData) {
            return base.Channel.GetAuthenticationLevels(RequestData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAuthenticationLevels(Ansi378Test.BiometricService.RequestData RequestData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAuthenticationLevels(RequestData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationLevelData> EndGetAuthenticationLevels(System.IAsyncResult result) {
            return base.Channel.EndGetAuthenticationLevels(result);
        }
        
        private System.IAsyncResult OnBeginGetAuthenticationLevels(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            return this.BeginGetAuthenticationLevels(RequestData, callback, asyncState);
        }
        
        private object[] OnEndGetAuthenticationLevels(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationLevelData> retVal = this.EndGetAuthenticationLevels(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAuthenticationLevelsCompleted(object state) {
            if ((this.GetAuthenticationLevelsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAuthenticationLevelsCompleted(this, new GetAuthenticationLevelsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAuthenticationLevelsAsync(Ansi378Test.BiometricService.RequestData RequestData) {
            this.GetAuthenticationLevelsAsync(RequestData, null);
        }
        
        public void GetAuthenticationLevelsAsync(Ansi378Test.BiometricService.RequestData RequestData, object userState) {
            if ((this.onBeginGetAuthenticationLevelsDelegate == null)) {
                this.onBeginGetAuthenticationLevelsDelegate = new BeginOperationDelegate(this.OnBeginGetAuthenticationLevels);
            }
            if ((this.onEndGetAuthenticationLevelsDelegate == null)) {
                this.onEndGetAuthenticationLevelsDelegate = new EndOperationDelegate(this.OnEndGetAuthenticationLevels);
            }
            if ((this.onGetAuthenticationLevelsCompletedDelegate == null)) {
                this.onGetAuthenticationLevelsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAuthenticationLevelsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAuthenticationLevelsDelegate, new object[] {
                        RequestData}, this.onEndGetAuthenticationLevelsDelegate, this.onGetAuthenticationLevelsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationUnitData> GetAuthenticationLevelUnits(Ansi378Test.BiometricService.RequestData RequestData, int LevelId) {
            return base.Channel.GetAuthenticationLevelUnits(RequestData, LevelId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAuthenticationLevelUnits(Ansi378Test.BiometricService.RequestData RequestData, int LevelId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAuthenticationLevelUnits(RequestData, LevelId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationUnitData> EndGetAuthenticationLevelUnits(System.IAsyncResult result) {
            return base.Channel.EndGetAuthenticationLevelUnits(result);
        }
        
        private System.IAsyncResult OnBeginGetAuthenticationLevelUnits(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            int LevelId = ((int)(inValues[1]));
            return this.BeginGetAuthenticationLevelUnits(RequestData, LevelId, callback, asyncState);
        }
        
        private object[] OnEndGetAuthenticationLevelUnits(System.IAsyncResult result) {
            System.Collections.Generic.List<Ansi378Test.BiometricService.AuthenticationUnitData> retVal = this.EndGetAuthenticationLevelUnits(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAuthenticationLevelUnitsCompleted(object state) {
            if ((this.GetAuthenticationLevelUnitsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAuthenticationLevelUnitsCompleted(this, new GetAuthenticationLevelUnitsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAuthenticationLevelUnitsAsync(Ansi378Test.BiometricService.RequestData RequestData, int LevelId) {
            this.GetAuthenticationLevelUnitsAsync(RequestData, LevelId, null);
        }
        
        public void GetAuthenticationLevelUnitsAsync(Ansi378Test.BiometricService.RequestData RequestData, int LevelId, object userState) {
            if ((this.onBeginGetAuthenticationLevelUnitsDelegate == null)) {
                this.onBeginGetAuthenticationLevelUnitsDelegate = new BeginOperationDelegate(this.OnBeginGetAuthenticationLevelUnits);
            }
            if ((this.onEndGetAuthenticationLevelUnitsDelegate == null)) {
                this.onEndGetAuthenticationLevelUnitsDelegate = new EndOperationDelegate(this.OnEndGetAuthenticationLevelUnits);
            }
            if ((this.onGetAuthenticationLevelUnitsCompletedDelegate == null)) {
                this.onGetAuthenticationLevelUnitsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAuthenticationLevelUnitsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAuthenticationLevelUnitsDelegate, new object[] {
                        RequestData,
                        LevelId}, this.onEndGetAuthenticationLevelUnitsDelegate, this.onGetAuthenticationLevelUnitsCompletedDelegate, userState);
        }
        
        public int AddAuthenticationLevel(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.AuthenticationLevelData AuthenticationLevelData) {
            return base.Channel.AddAuthenticationLevel(RequestData, AuthenticationLevelData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddAuthenticationLevel(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.AuthenticationLevelData AuthenticationLevelData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddAuthenticationLevel(RequestData, AuthenticationLevelData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddAuthenticationLevel(System.IAsyncResult result) {
            return base.Channel.EndAddAuthenticationLevel(result);
        }
        
        private System.IAsyncResult OnBeginAddAuthenticationLevel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Ansi378Test.BiometricService.RequestData RequestData = ((Ansi378Test.BiometricService.RequestData)(inValues[0]));
            Ansi378Test.BiometricService.AuthenticationLevelData AuthenticationLevelData = ((Ansi378Test.BiometricService.AuthenticationLevelData)(inValues[1]));
            return this.BeginAddAuthenticationLevel(RequestData, AuthenticationLevelData, callback, asyncState);
        }
        
        private object[] OnEndAddAuthenticationLevel(System.IAsyncResult result) {
            int retVal = this.EndAddAuthenticationLevel(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddAuthenticationLevelCompleted(object state) {
            if ((this.AddAuthenticationLevelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddAuthenticationLevelCompleted(this, new AddAuthenticationLevelCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAuthenticationLevelAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.AuthenticationLevelData AuthenticationLevelData) {
            this.AddAuthenticationLevelAsync(RequestData, AuthenticationLevelData, null);
        }
        
        public void AddAuthenticationLevelAsync(Ansi378Test.BiometricService.RequestData RequestData, Ansi378Test.BiometricService.AuthenticationLevelData AuthenticationLevelData, object userState) {
            if ((this.onBeginAddAuthenticationLevelDelegate == null)) {
                this.onBeginAddAuthenticationLevelDelegate = new BeginOperationDelegate(this.OnBeginAddAuthenticationLevel);
            }
            if ((this.onEndAddAuthenticationLevelDelegate == null)) {
                this.onEndAddAuthenticationLevelDelegate = new EndOperationDelegate(this.OnEndAddAuthenticationLevel);
            }
            if ((this.onAddAuthenticationLevelCompletedDelegate == null)) {
                this.onAddAuthenticationLevelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddAuthenticationLevelCompleted);
            }
            base.InvokeAsync(this.onBeginAddAuthenticationLevelDelegate, new object[] {
                        RequestData,
                        AuthenticationLevelData}, this.onEndAddAuthenticationLevelDelegate, this.onAddAuthenticationLevelCompletedDelegate, userState);
        }
    }
}
