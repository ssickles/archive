<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,Log4net"/>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
      <section name="IdentityStream.AppLauncher.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    </sectionGroup>
    <sectionGroup name="userSettings" type="System.Configuration.UserSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
      <section name="IdentityStream.AppLauncher.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false" />
    </sectionGroup>
  </configSections>

  <log4net>
    <!-- Appender for writing to log file -->
    <appender name="LogFileAppender" type="log4net.Appender.FileAppender">
      <file value="IdentityStreamAppLauncher.log" />
      <appendToFile value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level - %message%newline" />
      </layout>
      <threshold value="DEBUG"/>
    </appender>

    <!-- Default logging for SEVERE/ERROR exceptions.  Will log to the eventviewer-->
    <appender name="EventLogAppender" type="log4net.Appender.EventLogAppender" >
      <threshold value="INFO"/>
      <applicationName value="IdentityStream Application Launcher" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger - %message%newline" />
      </layout>
    </appender>

    <!-- Set the default logging to ALL, then let each appender filter the logging. 
		   This is the only way using Log4Net to have different appenders log at different levels -->
    <root>
      <level value="ALL" />
      <appender-ref ref="LogFileAppender" />
      <appender-ref ref="EventLogAppender" />
    </root>

  </log4net>


  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="BASICHttpBinding_IBiometricService" maxReceivedMessageSize="1048576" />
      </basicHttpBinding>
      <wsHttpBinding>
        <binding name="WSHttpBinding_IBiometricService" closeTimeout="00:01:00"
          openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
          bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard"
          maxBufferPoolSize="524288" maxReceivedMessageSize="1048576"
          messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true"
          allowCookies="false">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647"
            maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <reliableSession ordered="true" inactivityTimeout="00:10:00"
            enabled="false" />
          <security mode="Message">
            <transport clientCredentialType="Windows" proxyCredentialType="None"
              realm="" />
            <message clientCredentialType="Windows" negotiateServiceCredential="true"
              algorithmSuite="Default" establishSecurityContext="true" />
          </security>
        </binding>
      </wsHttpBinding>
      <mexTcpBinding>
        <binding name="mexTcpBinding" />
      </mexTcpBinding>
    </bindings>

    <client>
      <endpoint address="http://10.1.100.105/biometricServices.svc"
        binding="basicHttpBinding" bindingConfiguration="BASICHttpBinding_IBiometricService"
        contract="BiometricService.IBiometricService" name="BASICHttpBinding_IBiometricService" />
    </client>

  </system.serviceModel>
</configuration>